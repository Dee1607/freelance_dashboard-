{"version":3,"sources":["components/AppNavbar.js","layouts/AppLayout.js","components/DashboardNavbar.js","components/DashboardSidebar.js","layouts/DashboardLayout.js","pages/Home.js","pages/Login.js","pages/Register.js","components/PageHeader.js","pages/Dashboard.js","components/Datatable.js","pages/InvoiceGeneration.js","services/timelogServices.js","services/projectServices.js","pages/Timelogs.js","pages/AddProject.js","pages/Projects.js","pages/EditProject.js","pages/AddClient.js","pages/Clients.js","pages/Testimonials.js","pages/InvoiceManagement.js","pages/TodoList.js","pages/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Navbar","className","Container","Brand","href","Nav","Link","AppLayout","children","DashboardNavbar","title","Sidebar","props","useState","open","setOpen","setActiveItem","index","console","log","Toggle","onClick","Collapse","in","Overflow","ToC","Header","Item","DashboardLayout","fluid","Row","Col","md","as","DashboardSidebar","Home","Login","history","useHistory","email","setEmail","password","setPassword","handleSubmit","e","a","preventDefault","push","onSubmit","type","placeholder","id","name","value","onChange","target","Button","variant","Register","checkEmail","checkPassword","confirmPassword","registrationInfo","setRegistrationInfo","nameError","emailError","passwordError","confirmPasswordError","registrationErrors","setRegistrationErrors","handleChange","newRegistration","valid","newRegError","test","alert","Form","Label","required","PageHeader","subtitle","Dashboard","Datatable","columns","data","allowCSV","allowSearch","tableInstance","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","globalFilter","span","filename","offset","Group","Control","Table","bordered","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","style","width","Number","length","Pagination","First","disabled","Prev","Array","fill","v","Next","Last","InvoiceGeneration","onValueChange","event","setState","validateClient","isValid","client","clientError","validateProject","project","projectError","validateDate","validateStartDate","validateEndDate","startDate","today","Date","startDateError","endDate","endDateError","validateHourlyRate","hourlyRate","hourlyRateError","validateForm","generateInvoice","setDummyData","accessor","dummyData","this","description","hours","total","onBlur","isInvalid","Feedback","Component","withRouter","axios","get","result","projectId","post","put","_id","delete","Timelogs","moment","startAt","format","endAt","Cell","deleteTask","setData","useEffect","timelogServices","list","then","res","timerState","setTimerState","now","timerStart","setTimerStart","setTimerEnd","timerString","setTimerString","timer","setTimer","centiseconds","Math","floor","slice","seconds","minutes","projects","setProjects","projectServices","task","setTask","taskError","setTaskError","showModal","setShowModal","newTask","handleModalClose","startTask","newTaskError","isTaskValid","setInterval","add","window","confirm","newData","remove","message","splice","Card","Body","Title","fontSize","Subtitle","clearInterval","update","Modal","show","onHide","closeButton","Text","filter","includes","Footer","AddProjects","invoice","rate","status","setProject","setProjectError","newProject","newProjectError","Redirect","isProjectValid","min","Projects","editProject","url","EditProjects","prop","useParams","AddClient","clientNameError","validateOrganization","organizationName","organizationNameError","validateContactNo","contactNo","contactNoError","RegExp","validateWebsiteName","websiteName","websiteNameError","validateEmailId","emailId","emailIdError","validateLinkedInProfile","linkedInProfile","linkedInProfileError","validateStreet","street","streetError","validatePostalcode","postalCode","PostalCodeError","validateMeetingPlatform","meetingPlatform","meetingPlatformError","clientName","businessDescription","country","region","val","validateClientName","validatebusinessDescription","defaultOptionLabel","selectCountry","blankOptionLabel","selectRegion","Clients","ClientName","organization","ContactNo","Emailid","handleNewClient","pathname","bind","align","Testimonials","setLgShow","no","requestedOn","testimonial","lgShow","xs","size","aria-labelledby","emailjs","send","freelancerName","freelancerMail","clientMail","response","text","error","InvoiceManagement","handleClick","checkbox","button1","invoicename","generateddate","duedate","clientname","projectname","paymentstatus","TodoList","modal","setModal","toggle","incompletetaskRows","CardBody","CardTitle","completetaskRows","isOpen","ModalHeader","ModalBody","palceholder","ModalFooter","color","Calendar","events","date","defaultView","plugins","dayGridPlugin","interactionPlugin","dateClick","arg","prompt","dateStr","App","exact","path","EditProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5ec993a.chunk.js","sourcesContent":["import {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/AppNavbar.scss\"\n\nexport default function AppNavbar(){\n    return (\n        <Navbar className=\"app-nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"app-nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"login\">Login</Nav.Link>\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"register\">Register</Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","import React from 'react';\nimport AppNavbar from \"../components/AppNavbar\";\nimport {Container} from \"react-bootstrap\";\n\nconst AppLayout =({children}) =>{\n    return(\n        <>\n            <header>\n                <AppNavbar/>\n            </header>\n            <main>\n                <Container>\n                    {children}\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default AppLayout;","import {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/DashboardNavbar.scss\";\n\nexport default function DashboardNavbar(){\n    return (\n        <Navbar className=\"nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link title=\"Notification\" className=\"nav-bar-link\" href=\"#notification\">\n                        <i className=\"fas fa-bell\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Profile\" className=\"nav-bar-link\" href=\"#profile\">\n                        <i className=\"fas fa-user\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Log Out\" className=\"nav-bar-link\" href=\"/\">\n                        <i className=\"fas fa-sign-out-alt\"/>\n                    </Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","import '../styles/style.scss';\nimport React, { useState } from 'react';\nimport {\n    Collapse\n} from 'react-bootstrap';\nimport { Drawer, } from 'react-bootstrap-drawer';\nimport '../styles/DashboardSidebar.scss';\n\nexport default function Sidebar(props) {\n    let index = 0;\n    const [open, setOpen] = useState(false);\n\n    const handleToggle = () => setOpen(!open);\n\n    const setActiveItem = (index) => {\n        console.log(index)\n        this.index = index;\n    }\n    return (\n        <Drawer { ...props }>\n            <Drawer.Toggle onClick={ handleToggle } />\n\n            <Collapse in={ open }>\n                <Drawer.Overflow>\n                    <Drawer.ToC>\n                        <Drawer.Header href=\"/dashboard\">Dashboard</Drawer.Header>\n\n                        <Drawer.Nav>\n                            <Drawer.Item className={`${index === 0 ? 'nav-item-active' : ''}`} href=\"/clients\" onClick={() => setActiveItem(0)}>Clients</Drawer.Item>\n                            <Drawer.Item className={`${index === 1 ? 'nav-item-active' : ''}`} href=\"/projects\" onClick={() => setActiveItem(1)}>Projects</Drawer.Item>\n                            <Drawer.Item className={`${index === 2 ? 'nav-item-active' : ''}`} href=\"/timelogs\" onClick={() => setActiveItem(2)}>Time Logs</Drawer.Item>\n                            <Drawer.Item className={`${index === 3 ? 'nav-item-active' : ''}`} href=\"/invoicemanagement\" onClick={() => setActiveItem(3)}>Invoices</Drawer.Item>\n                            <Drawer.Item className={`${index === 4 ? 'nav-item-active' : ''}`} href=\"/invoice-generation\" onClick={() => setActiveItem(4)}>Invoice Generation</Drawer.Item>\n                            <Drawer.Item className={`${index === 5 ? 'nav-item-active' : ''}`} href=\"/testimonials\" onClick={() => setActiveItem(5)}>Testimonials</Drawer.Item>\n                            <span className=\"horizontal-break\"></span>\n                            <Drawer.Item className={`${index === 6 ? 'nav-item-active' : ''}`} href=\"/todolist\" onClick={() => setActiveItem(6)}>ToDo</Drawer.Item>\n                            <Drawer.Item className={`${index === 7 ? 'nav-item-active' : ''}`} href=\"/calendar\" onClick={() => setActiveItem(7)}>Calendar</Drawer.Item>\n                        </Drawer.Nav>\n                    </Drawer.ToC>\n                </Drawer.Overflow>\n            </Collapse>\n        </Drawer>\n    );\n};","import React from 'react';\nimport DashboardNavbar from \"../components/DashboardNavbar\";\nimport DashboardSidebar from \"../components/DashboardSidebar\";\nimport {Col, Container, Row} from \"react-bootstrap\";\n\nconst DashboardLayout =({children}) =>{\n    return(\n        <>\n            <header>\n                <DashboardNavbar/>\n            </header>\n            <main>\n                <Container fluid>\n                    <Row>\n                        <Col md={2} as={DashboardSidebar} />\n                        <Col md={10}>\n                            {children}\n                        </Col>\n                    </Row>\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default DashboardLayout;","import React from 'react';\n\nexport default function Home(){\n    return (\n        <div>\n            Home Page\n        </div>\n    )\n}","import React from 'react';\nimport { useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nexport default function Login(){\n\n    let history = useHistory();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [user, setUser] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        if(email === \"admin@gmail.com\" && password === \"admin@123\"){\n            history.push(\"/dashboard\",email);\n        }\n      };\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Log in</h3>\n\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <input \n                                type=\"email\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email. Eg:'admin@gmail.com' \"\n                                id = \"email\"\n                                name = \"email\"\n                                value={email}\n                                onChange={({ target }) => setEmail(target.value)} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password Eg:'admin@123\"\n                                id = \"password\"\n                                name = \"password\"\n                                value={password}\n                                onChange={({ target }) => setPassword(target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div>\n                                <input type=\"checkbox\" id=\"customCheck1\" />\n                                <label>Remember me</label>\n                            </div>\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">Sign in</Button>\n                        <p className=\"forgot-password text-right\">\n                            Forgot <a href=\"#\">password?</a>\n                        </p>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\n\nexport default function Register(){\n\n    let history = useHistory();\n\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n\n    const [registrationInfo, setRegistrationInfo] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [registrationErrors, setRegistrationErrors] = useState({\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n        confirmPasswordError: ''\n    });\n\n    const handleChange = (e) => {\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\n        setRegistrationInfo(newRegistration);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        setRegistrationErrors({\n            nameError: '',\n            emailError: '',\n            passwordError: '',\n            confirmPasswordError: ''\n        })\n\n        let newRegError = {...registrationErrors};\n\n        if(registrationInfo.name === \"\"){\n            newRegError.nameError = \"Please enter name!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.nameError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.email === \"\"){\n            newRegError.emailError = \"Please enter email!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkEmail.test(registrationInfo.email)){\n                newRegError.emailError = \"Email Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.emailError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n        \n\n        if(registrationInfo.password === \"\"){\n            newRegError.passwordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkPassword.test(registrationInfo.password)){\n                newRegError.passwordError = \"Password Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.passwordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.confirmPassword === \"\"){\n            newRegError.confirmPasswordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if((registrationInfo.password) !==  registrationInfo.confirmPassword){\n                newRegError.confirmPasswordError = \"Password does not match!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.confirmPasswordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n\n        if(valid === true){\n            alert(\"Registration Successful!!\");\n            history.push(\"/login\");\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Register</h3>\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Name</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter Name\"\n                                id = \"name\"\n                                name = \"name\"\n                                required=\"required\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email\"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Confirm Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm your password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.confirmPasswordError}</p>\n\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Register </Button>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport \"../styles/PageHeader.scss\"\nconst PageHeader =(props) =>{\n    return(\n        <>\n            <div className=\"page-header-title\">{props.title}</div>\n            <div className=\"page-header-subtitle\">{props.subtitle}</div>\n        </>\n    )\n}\n\nexport default PageHeader;","import React from 'react';\nimport PageHeader from \"../components/PageHeader\";\n\nexport default function Dashboard(){\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Dashboard\" subtitle=\"\"/>\n            </div>\n            <div className=\"page-content-container\">\n                {/* page content goes here */}\n            </div>\n        </div>\n        \n    )\n}","import React from 'react';\nimport {useGlobalFilter, usePagination, useSortBy, useTable} from \"react-table\";\nimport {Col, Form, Row, Table} from \"react-bootstrap\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport {CSVLink} from \"react-csv\";\n\nconst Datatable = (props) => {\n    const columns = props.columns;\n    const data = props.data;\n    const allowCSV = props.allowCSV == \"false\" ? false : true;\n    const allowSearch = props.allowSearch == \"false\" ? false : true;\n    const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } },\n        useGlobalFilter,\n        useSortBy,\n        usePagination);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setGlobalFilter,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageSize, globalFilter }\n    } = tableInstance;\n\n    return (\n        <div>\n            <Row>\n            {allowCSV ? (<Col md={{ span: 2 }}>\n                    <CSVLink data={data} filename={\"export.csv\"} className=\"secondary-button\" target=\"_blank\">\n                        Export CSV\n                    </CSVLink>\n                </Col>) : (<div></div>)\n                }\n                {allowSearch ? (<Col md={{ span: 2, offset: 8 }}>\n                    <Form.Group>\n                        <Form.Control type=\"search\" placeholder=\"Search\"\n                            value={globalFilter || \"\"}\n                            onChange={e => setGlobalFilter(e.target.value)} />\n                    </Form.Group>\n                </Col>) : (<div></div>)}\n            </Row>\n            <Table bordered striped {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                {column.render('Header')}\n                                <span>{column.isSorted ?\n                                    column.isSortedDesc ?\n                                        ' 🔽': ' 🔼'\n                                    : ''}</span>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                                return (\n                                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                                );\n                            })}\n                        </tr>\n                    );\n                })}\n                </tbody>\n            </Table>\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <Form.Control as=\"select\" style={{ width: \"100px\" }}\n                            value={pageSize}\n                            onChange={(e) => {\n                                setPageSize(Number(e.target.value));\n                            }}>\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                                <option key={pageSize} value={pageSize}>\n                                    Show {pageSize}\n                                </option>\n                            ))}\n                        </Form.Control>\n                        <span>Showing {pageSize} results of {rows.length} rows</span>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Pagination className=\"justify-content-end\">\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage}/>\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\n                        {Array(pageCount).fill().map((v,i) => (\n                            <Pagination.Item onClick={() => gotoPage(i)}>{i+1}</Pagination.Item>\n                        ))}\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}/>\n                    </Pagination>\n                </Col>\n            </Row>\n\n\n        </div>\n    )\n};\n\nexport default Datatable;\n","import React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/InvoiceGeneration.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n\nexport class InvoiceGeneration extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            client: \"\",\n            clientError: \"\",\n            startDate: \"\",\n            startDateError: \"\",\n            endDate: \"\",\n            endDateError: \"\",\n            hourlyRate: \"\",\n            hourlyRateError: \"\",\n            project: \"\",\n            projectError: \"\"\n        }\n\n        this.columns = [\n            { Header: 'Description', accessor: 'description' },\n            { Header: 'Time (hours)', accessor: 'hours' },\n            { Header: 'Total', accessor: 'total' }\n        ];\n\n        this.dummyData = [];\n    }\n\n    setDummyData() {\n        this.dummyData = [\n            {\n                description: 'Dashboard',\n                hours: 5,\n                total: this.state.hourlyRate * 5\n            },\n            {\n                description: 'Clients',\n                hours: 2,\n                total: this.state.hourlyRate * 2\n            },\n            {\n                description: 'Projects',\n                hours: 3,\n                total: this.state.hourlyRate * 3\n            },\n            {\n                description: 'Invoices',\n                hours: 4,\n                total: this.state.hourlyRate * 4\n            },\n            {\n                description: 'Invoice Generation',\n                hours: 0.5,\n                total: this.state.hourlyRate * 0.5\n            }\n        ]\n    }\n\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.client) {\n            this.setState({ clientError: \"Client is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateProject = (event) => {\n        let isValid = true;\n        if (!this.state.project) {\n            this.setState({ projectError: \"Project is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateDate = (event) => {\n        let isValid = true;\n        if (!this.validateStartDate()) {\n            isValid = false;\n        }\n        if (!this.validateEndDate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateStartDate = (event) => {\n        let isValid = true;\n        if (this.state.startDate) {\n            const today = new Date()\n            const selectedDate = new Date(this.state.startDate)\n            if (selectedDate > today) {\n                this.setState({ startDateError: \"Start Date cannot be future date\" })\n                isValid = false;\n            } else {\n                this.setState({ startDateError: \"\" })\n            }\n        } else {\n            this.setState({ startDateError: \"Start Date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateEndDate = (event) => {\n        let isValid = true;\n        const startDate = new Date(this.state.startDate)\n        const endDate = new Date(this.state.endDate)\n        if (startDate && endDate) {\n            if (startDate > endDate) {\n                this.setState({ endDateError: \"End Date cannot be less than start date\" })\n                isValid = false;\n            } else {\n                this.setState({ endDateError: \"\" })\n            }\n        } else {\n            this.setState({ endDateError: \"End date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateHourlyRate = (event) => {\n        let isValid = true;\n        if (!this.state.hourlyRate) {\n            this.setState({ hourlyRateError: \"Hourly Rate is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateProject()) {\n            isValid = false;\n        }\n        if (!this.validateDate()) {\n            isValid = false;\n        }\n        if (!this.validateHourlyRate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    generateInvoice = (event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n            this.setDummyData();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"page-container invoice-generation-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Invoice Generation\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"invoice-generation-content\">\n                            <Col>\n                                <Form>\n                                    <div className=\"generate-forms\">\n                                        <Row>\n                                            <Col>\n                                                <Form.Group>\n                                                    <Form.Label className=\"required\">Client</Form.Label>\n                                                    <Form.Control as=\"select\" name=\"client\" value={this.state.client} onChange={this.onValueChange}\n                                                        onBlur={this.validateClient}\n                                                        isInvalid={this.state.clientError}>\n                                                        <option>Select Client</option>\n                                                        <option value=\"1\">Freelancer dashboard</option>\n                                                        <option value=\"2\">SIS</option>\n                                                        <option value=\"3\">VM</option>\n                                                    </Form.Control>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {this.state.clientError}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group>\n                                                    <Form.Label className=\"required\">Project</Form.Label>\n                                                    <Form.Control as=\"select\" name=\"project\" value={this.state.project} onChange={this.onValueChange}\n                                                        onBlur={this.validateProject}\n                                                        isInvalid={this.state.projectError}>\n                                                        <option>Select Project</option>\n                                                        <option value=\"1\">Freelancer dashboard</option>\n                                                        <option value=\"2\">SIS</option>\n                                                        <option value=\"3\">VM</option>\n                                                    </Form.Control>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {this.state.projectError}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Group>\n                                                    <div>\n                                                        <Form.Label className=\"required\">Invoice Duration</Form.Label>\n                                                    </div>\n                                                    <div className=\"inline-date-control\">\n                                                        <div className=\"start-date-control\">\n                                                            <Form.Control type=\"date\" className=\"start-date\" name=\"startDate\" placeholder=\"Start Date\" value={this.state.startDate} onChange={this.onValueChange}\n                                                                onBlur={this.validateDate}\n                                                                isInvalid={this.state.startDateError} />\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                {this.state.startDateError}\n                                                            </Form.Control.Feedback>\n                                                        </div>\n                                                        <div className=\"end-date-control\">\n                                                            <Form.Control type=\"date\" name=\"endDate\" placeholder=\"End Date\" value={this.state.endDate} onChange={this.onValueChange}\n                                                                onBlur={this.validateDate}\n                                                                isInvalid={this.state.endDateError} />\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                {this.state.endDateError}\n                                                            </Form.Control.Feedback>\n                                                        </div>\n                                                    </div>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group>\n                                                    <Form.Label className=\"required\">Hourly Rate</Form.Label>\n                                                    <Form.Control type=\"number\" name=\"hourlyRate\" placeholder=\"Hourly Rate\" value={this.state.hourlyRate} onChange={this.onValueChange}\n                                                        onBlur={this.validateHourlyRate}\n                                                        isInvalid={this.state.hourlyRateError} />\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {this.state.hourlyRateError}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"generate-buttons\">\n                                        <Row className=\"generate-button-container\">\n                                            <Button className=\"primary-button\" onClick={this.generateInvoice}>\n                                                Generate Invoice\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Save\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Download\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Send\n                                            </Button>\n                                        </Row>\n                                    </div>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Row className=\"data-table-container\">\n                            <Col>\n                                <Datatable columns={this.columns} data={this.dummyData} allowCSV=\"false\" allowSearch=\"false\" />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(InvoiceGeneration);","import axios from \"axios\";\n\nexport class timelogServices{\n    async list(){\n        const result = await axios.get(\"/api/timelogs\");\n        return result.data;\n    };\n\n    async add(data){\n        data.projectId = data.project;\n        const result = await axios.post(\"/api/timelogs/add\",data);\n        return result.data;\n    };\n\n    async update(data){\n        data.projectId = data.project;\n        console.log(data);\n        const result = await axios.put(\"/api/timelogs/update/\"+data._id,data);\n        return result.data;\n    };\n\n    async remove(data){\n        const result = await axios.delete(\"/api/timelogs/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new timelogServices()","import axios from \"axios\";\n\nexport class projectServices{\n    async list(){\n        const result = await axios.get(\"/api/projects\");\n        return result.data;\n    };\n}\n\nexport default new projectServices()","/* Author: Vishal Sancheti */\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment'\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\n\nimport timelogServices from '../services/timelogServices.js'\nimport projectServices from '../services/projectServices.js'\n\nexport default function Timelogs() {\n    // Populate Datatable\n    const columns = [\n        { Header: 'Project', accessor: 'project.name' },\n        { Header: 'Client', accessor: 'project.client' },\n        { Header: 'Task', accessor: 'task' },\n        { Header: 'Start At', accessor: row => moment(row.startAt).format(\"DD-MM-YYYY hh:mm:ss\")},\n        { Header: 'End At', accessor: row => moment(row.endAt).format(\"DD-MM-YYYY hh:mm:ss\")},\n        { Header: 'Action', id: 'action', accessor: 'row',\n            Cell: ({ row }) => (<Button className=\"delete-button\" onClick={() => { deleteTask(row) }}>Delete</Button>)\n        }\n    ];\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        timelogServices.list().then(res => setData(res.data));\n    },[]);\n\n    // Timer properties and actions\n    const [timerState, setTimerState] = useState(0);\n    const [timerStart, setTimerStart] = useState(Date.now());\n    const [timerEnd, setTimerEnd] = useState(Date.now());\n    const [timerString, setTimerString] = useState(\"00 : 00 : 00 : 00\");\n    const [timer, setTimer] = useState(0);\n    useEffect(() => {\n        let centiseconds = (\"0\" + (Math.floor(timer / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timer / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timer / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor(timer / 3600000)).slice(-2);\n        setTimerString(hours + \" : \" + minutes + \" : \" + seconds + \" : \" + centiseconds);\n    }, [timer]);\n    const startTimer = () => {\n        if (timerState === 0) {\n            setTimerStart(Date.now() - timer);\n            setTimerState(\n                setInterval(() => {\n                    setTimer(Date.now() - timerStart)\n                }, 10)\n            );\n        }\n    };\n    const stopTimer = () => {\n        setTimerEnd(Date.now());\n        clearInterval(timerState);\n        setTimerState(0);\n        setTimer(0);\n    };\n\n    // New Task States\n    const [projects, setProjects] = useState([]);\n    useEffect(() => {\n        projectServices.list().then(res => setProjects(res.data));\n    },[]);\n    const [task, setTask] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\",\n        startAt: \"\",\n        endAt: \"\"\n    });\n    const [taskError, setTaskError] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\"\n    });\n    const [showModal, setShowModal] = useState(false);\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newTask = { ...task, [e.target.name]: e.target.value };\n        setTask(newTask);\n    };\n    const isTaskValid = () => {\n        let valid = true;\n        setTaskError({\n            project: \"\",\n            client: \"\",\n            task: \"\"\n        });\n\n        if (!task.project.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.project = \"Project is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.client.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.client = \"Client is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.task.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.task = \"Task is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = () => setShowModal(true);\n\n    // New Task Actions\n    const startTask = (e) => {\n        e.preventDefault();\n        if (isTaskValid()) {\n            startTimer();\n            task.startAt = Date.now();\n            timelogServices.add(task).then(res => {task._id = res.data._id; task.project = res.data.project});\n            setData(data => [task, ...data]);\n            handleModalClose();\n        }\n    };\n    const stopTask = () => {\n        stopTimer();\n        let newData = [...data];\n        newData[0].endAt = Date.now();\n        timelogServices.update(newData[0]).then(res => alert(res.message));\n        setData(newData);\n        setTask({\n            project: \"\",\n            client: \"\",\n            task: \"\",\n            startAt: \"\",\n            endAt: \"\"\n        });\n    };\n    const deleteTask = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            timelogServices.remove(newData[0]).then(res => alert(res.message));\n            newData.splice(task.index, 1);\n            setData(newData);\n        }\n    };\n\n    return (\n        <div className=\"page-container timelogs-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Time logs\" subtitle=\"\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row className=\"justify-content-center\">\n                        <Col md={6}>\n                            <Card>\n                                <Card.Body className=\"text-center\">\n                                    <Card.Title style={{ fontSize: \"2.5rem\" }}>{timerString}</Card.Title>\n                                    {timer <= 0 &&\n                                        <Button className=\"secondary-button\" onClick={handleModalShow}>Start</Button>\n                                    }\n                                    {timer > 0 &&\n                                        <>\n                                            <Card.Subtitle className=\"mb-2 text-muted\">Task: {task.task}</Card.Subtitle>\n                                            <Button className=\"delete-button\" onClick={stopTask}>Stop</Button>\n                                        </>\n                                    }\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Modal show={showModal} onHide={handleModalClose}>\n                        <Form onSubmit={(e) => startTask(e)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>New Task</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body className=\"show-grid\">\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Client</Form.Label>\n                                                <Form.Control as=\"select\" name=\"client\"\n                                                    onChange={(e) => handleChange(e)}\n                                                    className={taskError.client.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Client</option>\n                                                    <option value=\"Marco Botton\">Marco Botton</option>\n                                                    <option value=\"Giacomo Guilizzoni\">Giacomo Guilizzoni</option>\n                                                    <option value=\"Mariah Guilizzoni\">Mariah Guilizzoni</option>\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.client}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Project</Form.Label>\n                                                <Form.Control as=\"select\" name=\"project\"\n                                                    onChange={(e) => handleChange(e)}\n                                                    className={taskError.project.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Project</option>\n                                                    {projects.filter(project => project.client.includes(task.client)).map(function(project,index){\n                                                        return <option key={index} value={project._id}>{project.name}</option>\n                                                    })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.project}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Task</Form.Label>\n                                                <Form.Control type=\"text\" name=\"task\" placeholder=\"Task Description...\"\n                                                    onChange={(e) => handleChange(e)}\n                                                    className={taskError.task.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{taskError.task}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                    Close\n                                </Button>\n                                <Button className=\"primary-button\" type=\"submit\">\n                                    Start\n                                </Button>\n                            </Modal.Footer>\n                        </Form>\n\n                    </Modal>\n                    <Datatable columns={columns} data={data} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","import {useState, React} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Redirect, useHistory } from 'react-router-dom';\n\nexport default function AddProjects(){\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            invoice: \"\",\n            rate: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.rate.value > 0){\n            newProjectError.rate = \"Rate is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.rate = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            Redirect(\"/projects\");\n        }\n        return valid;\n    };\n\n    return (\n        <div>\n            <PageHeader title=\"New Project\"/>\n            \n            <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-md-10\">\n\n              <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\n                        <p className=\"text-danger\">{projectError.title}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                            <option value=\"\">Select Client</option>\n                            <option value=\"client1\">Client1</option>\n                            <option value=\"client2\">Client2</option>\n                            <option value=\"client3\">Client3</option>\n                            <option value=\"client4\">Client4</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.client}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                                      className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                        <p className=\"text-danger\">{projectError.description}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                        <p className=\"text-danger\">{projectError.rate}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                            <option value=\"\">Select Invoice Duration</option>\n                            <option value=\"Daily\">Daily</option>\n                            <option value=\"Weekly\">Weekly</option>\n                            <option value=\"Monthly\">Monthly</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.invoice}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                            <option value=\"\">Select Project Status</option>\n                            <option value=\"In Progress\">In Progress</option>\n                            <option value=\"Pending\">Pending</option>\n                            <option value=\"Completed\">Completed</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.status}</p>\n                    </div>\n                </div>\n                    \n                <div className=\"form-group row\">\n                    <div className=\"col-md-5\"></div>\n                    <div className=\"col-md-2\">\n                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n              </center></form>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport AddProject from './AddProject';\nimport Datatable from \"../components/Datatable\";\nimport '../styles/style.scss';\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport \"../styles/Projects.scss\";\n\nexport default function Projects() {\n\n    const columns = [\n        { Header: 'Project Title', accessor: 'title' },\n        { Header: 'Description', accessor: 'description' },\n        { Header: 'Client Name', accessor: 'client' },\n        { Header: 'Status', accessor: 'status' },\n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (<div className=\"data-table-button\"><a title=\"Edit Project\" onClick={() => editProject(row.id)} className=\"secondary-button\">Edit</a><a title=\"Delete Project\" onClick={() => { deleteTask(row) }} className=\"delete-button\">Delete</a></div>)\n        }\n    ];\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        setData([\n            {\n                title: \"Email Download\",\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\n                client: \"Christ Fernandiz\",\n                status: \"In Progress\"\n            },\n            {\n                title: \"Navigation\",\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\n                client: \"Shaun Bishop\",\n                status: \"Pending\"\n            },\n            {\n                title: \"Upgrade Database\",\n                description: \"Providing this service will migrate data to AWS.\",\n                client: \"Joseph Robinson\",\n                status: \"Completed\"\n            },\n            {\n                title: \"Email Download\",\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\n                client: \"Christ Fernandiz\",\n                status: \"In Progress\"\n            },\n            {\n                title: \"Navigation\",\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\n                client: \"Shaun Bishop\",\n                status: \"Pending\"\n            },\n            {\n                title: \"Upgrade Database\",\n                description: \"Providing this service will migrate data to AWS.\",\n                client: \"Joseph Robinson\",\n                status: \"Completed\"\n            },\n            {\n                title: \"Email Download\",\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\n                client: \"Christ Fernandiz\",\n                status: \"In Progress\"\n            },\n            {\n                title: \"Navigation\",\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\n                client: \"Shaun Bishop\",\n                status: \"Pending\"\n            },\n            {\n                title: \"Upgrade Database\",\n                description: \"Providing this service will migrate data to AWS.\",\n                client: \"Joseph Robinson\",\n                status: \"Completed\"\n            },\n            {\n                title: \"Email Download\",\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\n                client: \"Christ Fernandiz\",\n                status: \"In Progress\"\n            },\n            {\n                title: \"Navigation\",\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\n                client: \"Shaun Bishop\",\n                status: \"Pending\"\n            },\n            {\n                title: \"Upgrade Database\",\n                description: \"Providing this service will migrate data to AWS.\",\n                client: \"Joseph Robinson\",\n                status: \"Completed\"\n            },\n        ])\n    }, []);\n\n    const [project, setProject] = useState({\n        title: \"\",\n        description: \"\",\n        client: \"\",\n        status: \"\"\n    });\n\n\n    const deleteTask = (project) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            newData.splice(project.index, 1);\n            console.log(newData);\n            setData(newData);\n        }\n    };\n\n    const [checkForm, setCheckForm] = useState(true);\n\n    const validate = () => {\n        setCheckForm(false);\n    }\n\n    const history = useHistory();\n\n    async function editProject(id) {\n        let url = \"/projects/edit/\" + id;\n        history.push(url);\n    }\n\n    return (\n        <div className=\"page-container projects-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div className=\"page-content\">\n\n                <Row className=\"button-container\">\n                    <Col>\n                        <a href=\"/projects/add\" title=\"Add Project\" className=\"primary-button\">Add Project</a>\n                    </Col>\n                </Row>\n                <Row className=\"data-table-container\">\n                    <Col>\n                        <Datatable columns={columns} data={data} />\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </div>\n    )\n}","import {useState, React} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\n\nconst EditProjects = (prop) => {\n\n    const param = useParams();\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            invoice: \"\",\n            rate: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.rate.value > 0){\n            newProjectError.rate = \"Rate is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.rate = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            Redirect(\"/projects\");\n        }\n        return valid;\n    };\n\n    return (\n        <div>\n            <PageHeader title=\"Edit Project\"/>\n            \n            <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-md-10\">\n\n              <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\n                        <p className=\"text-danger\">{projectError.title}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                            <option value=\"\">Select Client</option>\n                            <option value=\"client1\">Client1</option>\n                            <option value=\"client2\">Client2</option>\n                            <option value=\"client3\">Client3</option>\n                            <option value=\"client4\">Client4</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.client}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                                      className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                        <p className=\"text-danger\">{projectError.description}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                        <p className=\"text-danger\">{projectError.rate}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                            <option value=\"\">Select Invoice Duration</option>\n                            <option value=\"Daily\">Daily</option>\n                            <option value=\"Weekly\">Weekly</option>\n                            <option value=\"Monthly\">Monthly</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.invoice}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                            <option value=\"\">Select Project Status</option>\n                            <option value=\"In Progress\">In Progress</option>\n                            <option value=\"Pending\">Pending</option>\n                            <option value=\"Completed\">Completed</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.status}</p>\n                    </div>\n                </div>\n                    \n                <div className=\"form-group row\">\n                    <div className=\"col-md-5\"></div>\n                    <div className=\"col-md-2\">\n                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n              </center></form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditProjects;","import React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {curl_init} from 'react';\nimport {curl_getinfo} from 'react';\nimport {CURLINFO_HTTP_CODE} from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nexport class AddClient extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            clientName: \"\",\n            clientNameError: \"\",\n            organizationName: \"\",\n            organizationNameError: \"\",\n            contactNo: \"\",\n            contactNoError: \"\",\n            websiteName: \"\",\n            websiteNameError: \"\",\n            emailId: \"\",\n            emailIdError: \"\",\n            street: \"\",\n            streetError: \"\",\n            businessDescription: \"\",\n            postalCode: \"\",\n            PostalCodeError: \"\",\n            meetingPlatform: \"\",\n            meetingPlatformError: \"\",\n            country: \"\",\n            region: \"\"\n        }       \n    }\n\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    selectCountry (val) {\n      this.setState({ country: val });\n    }\n  \n    selectRegion (val) {\n      this.setState({ region: val });\n    }\n\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.client) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateOrganization = (event) => {\n      let isValid = true;\n      if (!this.state.organizationName) {\n          this.setState({ organizationNameError: \"Organization Name is required\" })\n          isValid = false;\n      }\n      return isValid;\n    }\n\n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if(result===false){\n          this.setState({\n            isValid:false,\n            contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n          })\n        }\n        return isValid;\n    }\n\n    validateWebsiteName = (event) => {\n      let isValid = true;\n      const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n      const result = pattern.test(this.state.websiteName);\n      if(result===false){\n        this.setState({\n          isValid:false,\n          websiteNameError: \"Provided website is invalid\"\n        })\n      }\n      return isValid;\n    }\n\n    validateEmailId = (event) => {\n      let isValid = true;\n      if (!this.state.emailId) {\n          this.setState({ emailIdError: \"Email Id is required\" })\n          isValid = false;\n      }\n      const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n      const result = pattern.test(this.state.emailId);\n      if(result===false){\n        this.setState({\n          isValid:false,\n          emailIdError: \"Provided email Id is invalid\"    \n        })\n      } \n      return isValid;\n    }\n\n    validateLinkedInProfile = (event) => \n    {\n        let isValid = true;\n        const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n        const result = pattern.test(this.state.linkedInProfile);\n        if(result===false){\n          this.setState({\n            isValid:false,\n            linkedInProfileError: \"LinkedIn Profile is not valid\"\n          })\n        }\n        /*const profileurl = this.state.linkedInProfile;\n        const fp = curl_init(profileurl);\n        const response_code = curl_getinfo(fp, CURLINFO_HTTP_CODE);\n  \n        if(response_code===200){\n          this.setState({\n            isValid:false,\n            linkedInProfileError: \"Provided Linkedin profile is invalid\"    \n          })\n        }*/\n    }\n\n    validateStreet = (event) => {\n      let isValid = true;\n      const pattern = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/g;\n      const result = pattern.test(this.state.street);\n      if(result===false){\n        this.setState({\n          isValid:false,\n          streetError: \"Street should not contain special characters\"\n        })\n      }\n      return isValid;\n    }\n\n    validatePostalcode = (event) => {\n      let isValid = true;\n      const pattern = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/g;\n      const result = pattern.test(this.state.postalCode);\n      if(result===false){\n        this.setState({\n          isValid:false,\n          PostalCodeError: \"Postal code should not contain special characters\"\n        })\n      }\n      return isValid;\n    }\n\n    validateMeetingPlatform = (event) => {\n      let isValid = true;\n      if (!this.state.meetingPlatform) {\n          this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n          isValid = false;\n      }\n      return isValid;\n    }\n\n    validateForm = (event) => {\n      let isValid = true\n      if (!this.validateClient()) {\n          isValid = false;\n      }\n      if (!this.validateOrganization()) {\n          isValid = false;\n      }\n      if (!this.validateContactNo()) {\n          isValid = false;\n      }\n      if (!this.validateWebsiteName()) {\n          isValid = false;\n      }\n      if (!this.validateEmailId()) {\n        isValid = false;\n      }\n      if (!this.validateLinkedInProfile()) {\n        isValid = false;\n      }\n      if (!this.validateStreet()) {\n        isValid = false;\n      }\n      if (!this.validatePostalcode()) {\n        isValid = false;\n      }\n      if (!this.validateMeetingPlatform()) {\n        isValid = false;\n      }\n      return isValid;\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n            alert(\"Details Successfully Saved!!\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                   <PageHeader title=\"New Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.clientName} onChange={this.onValueChange}\n                                                    onBlur={this.validateClientName}\n                                                    isInvalid = {this.state.clientNameError}/>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.organizationName} onChange={this.onValueChange}\n                                                    onBlur={this.validateOrganization}\n                                                    isInvalid = {this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>        \n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.contactNo} onChange={this.onValueChange}\n                                                    onBlur={this.validateContactNo}\n                                                    isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.websiteName} onChange={this.onValueChange}\n                                                    onBlur={this.validateWebsiteName}\n                                                    isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.emailId} onChange={this.onValueChange}\n                                                    onBlur={this.validateEmailId}\n                                                    isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"LinkedInProfile\" placeholder=\"Enter Clienet Name\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                    onBlur={this.validateLinkedInProfile}\n                                                    isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.street} onChange={this.onValueChange}\n                                                    onBlur={this.validateStreet}\n                                                    isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.businessDescription} onChange={this.onValueChange}\n                                                    onBlur={this.validatebusinessDescription}\n                                                     />\n                                               \n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.postalCode} onChange={this.onValueChange}\n                                                    onBlur={this.validatePostalcode}\n                                                    isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.meetingPlatform} onChange={this.onValueChange}\n                                                    onBlur={this.validateMeetingPlatform}\n                                                    isInvalid={this.state.meetingPlatformError}>\n                                                      <option>Select Project</option>\n                                                    <option value=\"1\">Google Meet</option>\n                                                    <option value=\"2\">Skype</option>\n                                                    <option value=\"3\">Zoom</option>\n                                                    <option value=\"4\">In person</option>\n                                                  </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n                                              \n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Country </Form.Label>\n                                                <CountryDropdown as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country} \n                                                                 onChange={(name, value) => this.selectCountry(name, value)}\n                                                />\n                                            </Form.Group>\n                                        \n                                            <Form.Group>\n                                                <Form.Label>Region </Form.Label>\n                                                <RegionDropdown\n                                                       country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                       as=\"select\" name=\"region\" value={this.state.region} onChange={(name, value) => this.selectRegion(name,value)}>\n                                                </RegionDropdown>                            \n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    \n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"primary-button\" onClick={this.onSubmit}>\n                                            Submit\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AddClient);","import React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport \"../styles/Clients.scss\";\nimport './AddClient'\nimport { Component } from \"react\";\n\nexport class Clients extends Component {\n  //constructor for props\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.handleNewClient = this.handleNewClient.bind(this);\n\n    this.columns = [\n      { Header: 'Client Name', accessor: 'ClientName' },\n      { Header: 'Organization', accessor: 'organization' },\n      { Header: 'Contact No', accessor: 'ContactNo' },\n      { Header: 'Email', accessor: 'Emailid' },\n      {\n        Header: 'Action', accessor: 'row',\n        Cell: ({ row }) => (\n          <div className=\"generate-button-container\">\n            <Button className=\"secondary-button\" align=\"right\">View</Button>\n            <Button className=\"secondary-button\" align=\"right\">Edit</Button>\n            <Button className=\"delete-button\" align=\"right\">Delete</Button>\n          </div>\n        )\n      }];\n    this.setData();\n  }\n\n  setData = () => {\n    this.data = [{\n      ClientName: \"Jill Dupre\",\n      organization: \"Elegant Microweb\",\n      ContactNo: \"(+1)902-412-7654\",\n      Emailid: \"JillDupre@gmail.com\"\n    },\n    {\n      ClientName: \"Herry Chopra\",\n      organization: \"Meditab\",\n      ContactNo: \"(+1) 777-987-2345\",\n      Emailid: \"hhs12@yahoo.co.in\"\n    },\n    {\n      ClientName: \"Nayan Patel\",\n      organization: \"IBM\",\n      ContactNo: \"(+91) 9601739976\",\n      Emailid: \"nayan007@gmail.com\"\n    }];\n  }\n  handleNewClient = (e) => {\n    e.preventDefault();\n    this.props.history.push({ pathname: '/Addclient' });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-container clients-container\">\n          <div className=\"page-header-container\">\n            <PageHeader title=\"Clients\" subtitle=\"\" />\n          </div>\n          <div className=\"page-content-container\">\n            <div className=\"page-content\">\n              <Row className=\"button-container\">\n                <Col>\n                  <Button className=\"primary-button\" type=\"button\" align=\"right\" onClick={this.handleNewClient} >Add New</Button>\n                </Col>\n              </Row>\n              <Row className=\"data-table-container\">\n                <Col>\n                  <Datatable columns={this.columns} data={this.data} />\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Clients);","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Datatable from '../components/Datatable';\nimport emailjs from 'emailjs-com';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\"\nconst Testimonials = () => {\n\n    const columns = [\n        { Header: '#', accessor: 'no' },\n        { Header: 'Project', accessor: 'project' },\n        { Header: 'Status', accessor: 'status' },\n        { Header: 'Requested on', accessor: 'requestedOn' },\n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <button className=\"secondary-button\" onClick={() => setLgShow(true)}>Re-Request</button>\n                        {/* <a href=\"#\">Re-Request</a> */}\n                    </div>\n\n                    <div className=\"col-md-3\">\n                        <button className=\"delete-button\" onClick={deleteTask} >Delete</button>\n                        {/* <a href=\"#\">Delete</a> */}\n                    </div>\n                </div>\n            )\n        }\n    ];\n\n\n    function sendEmail(e) {\n        e.preventDefault();\n\n        // console.log(e.target.data);\n        var mailParams = {\n            //Mail Sender Details\n            freelancerName: 'Freelancer_Deep',\n            freelancerMail: 'deepatel1607@gmail.com',\n\n            //Mail Reciver Details\n            clientName: 'Client_Deep',\n            clientMail: 'dee16798ppatel@gmail.com',\n\n            //Attachment Messages\n            message: 'Success!!'\n        };\n\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n            .then(function (response) {\n                alert(\"Email Sent\");\n                console.log('SUCCESS!', response.status, response.text);\n\n            }, function (error) {\n                alert(\"Error: \" + error);\n                console.log('FAILED...', error);\n            });\n    }\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        setData([\n            {\n                no: \"1\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"2\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"3\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"4\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"5\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"6\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"7\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"8\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"9\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"10\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"11\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"12\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"13\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            }\n        ])\n    }, []);\n\n    const [testimonial, setTestimonial] = useState({\n        no: \"\",\n        project: \"\",\n        client: \"\",\n        requestedOn: \"\",\n        status: \"\"\n    });\n\n    const deleteTask = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            newData.splice(testimonial.index, 1);\n            console.log(newData);\n            setData(newData);\n        }\n    };\n\n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <div className=\"page-container add-testimonial-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonials\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col xs={12}>\n                            <div className=\"col-md-2 button-container\">\n                                <div className=\"row my-add-btn\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-7\">\n                                        <div className=\"add-testimonial-container\">\n                                            <div className=\"generate-button-container\">\n                                                <button className=\"primary-button\" type=\"button\" align=\"right\" onClick={() => setLgShow(true)}> Request</button>\n                                            </div>\n                                        </div>\n                                        <Modal\n                                            size=\"lg\"\n                                            show={lgShow}\n                                            onHide={() => setLgShow(false)}\n                                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                                        >\n                                            <Modal.Header closeButton>\n                                                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                                                    Request Testimonial\n                                                </Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                <Form id=\"contact-form\">\n\n                                                    <input type=\"hidden\" name=\"freelancerName\" id=\"freelancerName\" value=\"Freelancer_Deep\" />\n                                                    <input type=\"hidden\" name=\"freelancerMail\" id=\"freelancerMail\" value=\"deepatel1607@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"clientName\" id=\"clientName\" value=\"Client_Deep\" />\n                                                    <input type=\"hidden\" name=\"clientMail\" id=\"clientMail\" value=\"dee16798ppatel@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"message\" id=\"message\" value=\"From hidden\" />\n\n                                                    <Form.Group>\n                                                        <Form.Label>Project</Form.Label>\n                                                        <Form.Control as=\"select\">\n                                                            <option>Project 1</option>\n                                                            <option>Project 2</option>\n                                                            <option>Project 3</option>\n                                                            <option>Project 4</option>\n                                                            <option>Project 5</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label>Client</Form.Label>\n                                                        <Form.Control as=\"select\">\n                                                            <option>Client 1</option>\n                                                            <option>Client 2</option>\n                                                            <option>Client 3</option>\n                                                            <option>Clientv 4</option>\n                                                            <option>Clientv 5</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label>Request Message</Form.Label>\n                                                        <Form.Control as=\"textarea\" name=\"message\" rows={3} id=\"message\" />\n                                                    </Form.Group>\n\n                                                    <Button variant=\"primary\" type=\"submit\" id=\"button\" value=\"Send\" onClick={sendEmail}>\n                                                        Send\n                                                    </Button>\n                                                </Form>\n                                            </Modal.Body>\n                                        </Modal>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col xs={12}>\n                            <Datatable columns={columns} data={data} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Testimonials\n","import React,{Component} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport {Button,Col,Row} from \"react-bootstrap\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/DashboardNavbar.scss\";\nimport \"../styles/InvoiceManagement.scss\"\nexport class InvoiceManagement extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state={\n        checkbox : 'false',\n        columns : [\n            { Header: 'Invoice Number', accessor: 'invoicename'},\n            { Header: 'Generated Date', accessor: 'generateddate'},\n            { Header: 'Due Date', accessor: 'duedate'},\n            { Header: 'Client Name', accessor: 'clientname'},\n            { Header: 'Project Name', accessor: 'projectname'},\n            { Header: 'Payment Status', accessor: 'paymentstatus'},\n            { Header: 'Action', accessor: 'button1',\n                Cell: ({button1}) => (<div><Button  className=\"secondary-button\">Edit</Button><Button  className=\"delete-button\">Delete</Button></div>)},\n        ],\n\n       data:[{    \n        invoicename: \"1EDJJHE\",\n        generateddate: \"03-02-2021\",\n        duedate: \"03-03-2021\",\n        clientname:\"Bob Marker\",\n        projectname:\"Project Management\",\n        paymentstatus:\"Unpaid\"\n      },\n      {\n        invoicename: \"2XFDSFW\",\n        generateddate: \"03-02-2021\",\n        duedate: \"03-03-2021\",\n        clientname:\"Mark Velly\",\n        projectname:\"Tic-Toe\",\n        paymentstatus:\"Paid\"\n      },\n      {\n        invoicename: \"3ECERCC\",\n        generateddate: \"03-02-2021\",\n        duedate: \"03-03-2021\",\n        clientname:\"Lelly Vince\",\n        projectname:\"Invoice Generator\",\n        paymentstatus:\"Unpaid\"\n      },\n      {\n        invoicename: \"4ERDFTH\",\n        generateddate: \"03-02-2021\",\n        duedate: \"03-03-2021\",\n        clientname:\"Chrissy MAcdonalds\",\n        projectname:\"Client Management\",\n        paymentstatus:\"Unpaid\"\n      }]\n        }\n    }\n    handleClick=(e)=>{\n        this.setState({checkbox:'true'})\n    }\n\nrender() {\n    return (\n\n    <div className=\"page-container-container\">\n        <div className=\"page-header-container\">\n           <PageHeader title=\"Invoice Management\" subtitle=\"\" />\n        </div>\n        <div className=\"page-content-container\">\n            <div className=\"page-content\"></div>\n            <Row>\n                <Col>\n                <input  type=\"text\" placeholder=\"Filter\" name=\"textforfiletr\" />\n                </Col>\n                \n            </Row>\n            <Datatable columns={this.state.columns} data={this.state.data} allowCSV=\"false\" allowSearch=\"false\"/>\n        </div>\n    </div>\n)\n        }\n}\nexport default withRouter(InvoiceManagement)","import React, { useState }  from 'react'\nimport { withRouter } from \"react-router\";\nimport {Container,Col,Row,Button}  from 'react-bootstrap'\nimport { Card,CardBody,CardTitle} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport PageHeader from \"../components/PageHeader\";\nimport \"../styles/TodoList.scss\";\n\nexport default function TodoList(){\n    \n        \n         const incompletetask=[\n            {\n                id: 1,\n                title: \"I will cut vegetable\",\n            },\n            {\n                id: 2,\n                title: \"I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan\",\n            },\n            {\n                id: 3,\n                title: \"I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan\",\n            }\n          ];\n\n        const completetask=[\n            {\n                id: 3,\n                title: \"I am done with snacks\",\n            },\n            {\n                id: 2,\n                title: \"I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan.I will make batter from besan\",\n            }\n        ];\n        \n         // this.handleClick=this.handleClick.bind(this)\n    \n    const [modal, setModal] = useState(false);\n    \n    const toggle = () => setModal(!modal);\n\n            return(\n                <div className=\"page-container\">\n                    <div className=\"page-header-container\">\n                        <PageHeader title=\"Todo List\" subtitle=\"\" />\n                    </div>\n                    <div className=\"page-content-container\">\n                        <div className=\"page-content\">\n                            <Container>\n                                <Row className=\"card-row\">\n                                    <Col>\n                                    </Col>\n                                    <Col className=\"newtask-col\">\n                                        <div className=\"alignment\">\n                                            <Button   onClick={toggle} className=\"primary-button\">Add</Button>\n                                        </div>\n                                       \n                                    </Col>\n                                </Row>\n                                <Row className=\"card-row\">\n                                    <Col className=\"card-col\"> \n                                         <div>\n                                            {incompletetask.map(incompletetaskRows => (\n                                            <Card className=\"cards\">\n                                                <div className=\"card-col-intask\">\n                                                    <div className=\"checkbox-col\">\n                                                         <input type=\"checkbox\" id=\"defaultUnchecked\"></input>\n                                                    </div>\n                                                    <div className=\"text-col\">\n                                                        <CardBody>\n                                                            <CardTitle>{incompletetaskRows.title}</CardTitle>\n                                                        </CardBody>\n                                                    </div>\n                                                    <div className=\"button-col\">\n                                                        <Button  className=\"delete-button\">Delete</Button>\n                                                    </div>\n                                                </div>\n                                            </Card>\n                                            ))}                              \n                                         </div>\n                                    </Col>\n                                    <span className=\"vertical-break\"></span>\n                                    <Col className=\"card-col\"> \n                                        <div>\n                                        {completetask.map(completetaskRows => (\n                                        <Card className=\"cards\">\n                                            <CardBody>\n                                                <CardTitle className = \"text-todo\">{completetaskRows.title}</CardTitle>\n                                            </CardBody>\n                                        </Card>\n                                        ))}                              \n                                        </div>\n                                    </Col>\n                                </Row>\n                           \n                            <Modal size= \"xl\" isOpen={modal} toggle={toggle} className=\"modal\">\n                                <ModalHeader toggle={toggle} className=\"modal-header\">Add Task</ModalHeader>\n                                <ModalBody>\n                                <input type=\"text\" palceholder =\"Add task\" name=\"tasktag\" />\n                                </ModalBody>\n                                <ModalFooter>\n                                <Button color=\"primary\" className=\"primary-button\" onClick={toggle}>Save</Button>{' '}\n                                </ModalFooter>\n                            </Modal>\n                            </Container>\n                        </div>\n                    </div>\n                </div>\n            )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nexport default function Calendar(){\n    \n    const events = [{ title: \"today's event\", date: new Date() }];\n\n    const handleDateClick = (arg) => {\n        var dateevent = prompt(\"Enter an event for date: \"+arg.dateStr);\n    }\n\n    return (\n        <div>\n            <PageHeader title=\"Calendar\"/>\n            <FullCalendar\n                defaultView=\"dayGridMonth\"\n                plugins={[dayGridPlugin, interactionPlugin]}\n                events={events}\n                dateClick={handleDateClick}\n            />\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AppLayout from \"./layouts/AppLayout\";\nimport DashboardLayout from \"./layouts/DashboardLayout\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport InvoiceGeneration from \"./pages/InvoiceGeneration\";\nimport Timelogs from \"./pages/Timelogs\";\nimport Projects from \"./pages/Projects\";\nimport AddProject from \"./pages/AddProject\";\nimport EditProject from \"./pages/EditProject\";\nimport Clients from \"./pages/Clients\";\nimport AddClient from \"./pages/AddClient\";\nimport Testimonials from \"./pages/Testimonials\";\nimport InvoiceManagement from \"./pages/InvoiceManagement\"\nimport TodoList from \"./pages/TodoList\"\nimport Calendar from \"./pages/Calendar\";\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <AppLayout>\n                        <Home />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/login\">\n                    <AppLayout>\n                        <Login />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/register\">\n                    <AppLayout>\n                        <Register />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/dashboard\">\n                    <DashboardLayout>\n                        <Dashboard />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/projects\">\n                    <DashboardLayout>\n                        <Projects />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/add\">\n                    <DashboardLayout>\n                        <AddProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/edit/:id\">\n                    <DashboardLayout>\n                        <EditProject />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/timelogs\">\n                    <DashboardLayout>\n                        <Timelogs />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/invoice-generation\">\n                    <DashboardLayout>\n                        <InvoiceGeneration />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/clients\">\n                    <DashboardLayout>\n                        <Clients />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/AddClient\">\n                    <DashboardLayout>\n                        <AddClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/testimonials\">\n                    <DashboardLayout>\n                        <Testimonials />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/invoicemanagement\">\n                    <DashboardLayout>\n                        <InvoiceManagement />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/todolist\">\n                    <DashboardLayout>\n                        <TodoList />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/calendar\">\n                    <DashboardLayout>\n                        <Calendar />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/\">\n                    <div>404 Page not found.</div>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/bootstrap_custom.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/style.scss';\nimport './styles/button_style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}