{"version":3,"sources":["components/AppNavbar.js","layouts/AppLayout.js","components/DashboardNavbar.js","components/DashboardSidebar.js","layouts/DashboardLayout.js","pages/Home.js","pages/Login.js","pages/Register.js","components/PageHeader.js","pages/Dashboard.js","components/Datatable.js","pages/InvoiceGeneration.js","services/timelogServices.js","services/projectServices.js","pages/Timelogs.js","pages/AddProject.js","pages/Projects.js","pages/EditProject.js","pages/AddClient.js","pages/Clients.js","pages/Testimonials.js","pages/InvoiceManagement.js","services/TodoListService.js","pages/TodoList.js","pages/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Navbar","className","Container","Brand","href","Nav","Link","AppLayout","children","DashboardNavbar","title","Sidebar","props","useState","index","setIndex","open","setOpen","setActiveItem","console","log","Toggle","onClick","Collapse","in","Overflow","ToC","Header","Item","DashboardLayout","fluid","Row","Col","md","as","DashboardSidebar","Home","Login","history","useHistory","email","setEmail","password","setPassword","handleSubmit","e","a","preventDefault","push","onSubmit","type","placeholder","id","name","value","onChange","target","Button","variant","Register","checkEmail","checkPassword","confirmPassword","registrationInfo","setRegistrationInfo","nameError","emailError","passwordError","confirmPasswordError","registrationErrors","setRegistrationErrors","handleChange","newRegistration","valid","newRegError","test","alert","Form","Label","required","PageHeader","subtitle","Dashboard","Datatable","columns","data","allowCSV","allowSearch","tableInstance","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","globalFilter","span","filename","offset","Group","Control","Table","bordered","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","style","width","Number","Pagination","First","disabled","Prev","Array","fill","v","Next","Last","length","InvoiceGeneration","onValueChange","event","setState","validateClient","isValid","client","clientError","validateProject","project","projectError","validateDate","validateStartDate","validateEndDate","startDate","today","Date","startDateError","endDate","endDateError","validateHourlyRate","hourlyRate","hourlyRateError","validateForm","generateInvoice","setDummyData","accessor","dummyData","this","description","hours","total","onBlur","isInvalid","Feedback","Component","withRouter","axios","get","result","projectId","post","put","_id","delete","Timelogs","moment","startAt","format","endAt","Cell","deleteTask","setData","useEffect","timelogServices","list","then","res","lastTask","setTask","restartTimer","timerState","setTimerState","now","timerStart","setTimerStart","setTimerEnd","timerString","setTimerString","timer","setTimer","centiseconds","Math","floor","slice","seconds","minutes","setInterval","projects","setProjects","projectServices","task","taskError","setTaskError","showModal","setShowModal","newTask","handleModalClose","startTask","newTaskError","isTaskValid","add","window","confirm","newData","remove","message","splice","Card","Body","Title","fontSize","Subtitle","clearInterval","update","Modal","show","onHide","closeButton","Text","filter","includes","Footer","AddProjects","invoice","rate","status","setProject","setProjectError","newProject","newProjectError","Redirect","isProjectValid","min","Projects","editProject","url","EditProjects","prop","useParams","AddClient","clientNameError","validateOrganization","organizationName","organizationNameError","validateContactNo","contactNo","contactNoError","RegExp","validateWebsiteName","websiteName","websiteNameError","validateEmailId","emailId","emailIdError","validateLinkedInProfile","linkedInProfile","linkedInProfileError","validateStreet","street","streetError","validatePostalcode","postalCode","PostalCodeError","validateMeetingPlatform","meetingPlatform","meetingPlatformError","clientName","businessDescription","country","region","val","validateClientName","validatebusinessDescription","defaultOptionLabel","selectCountry","blankOptionLabel","selectRegion","Clients","ClientName","organization","ContactNo","Emailid","handleNewClient","pathname","bind","align","Testimonials","setLgShow","no","requestedOn","testimonial","lgShow","xs","size","aria-labelledby","emailjs","send","freelancerName","freelancerMail","clientMail","response","text","error","InvoiceManagement","handleClick","checkbox","button1","invoicename","generateddate","duedate","clientname","projectname","paymentstatus","date","saveData","TodoList","saveItem","todoListService","saveTask","getAllData","getPreviousDate","previousDate","subtract","getNextDate","nextDate","currentDate","completeTasks","incompleteTasks","item","getAllTasks","completeTask","incompleteTask","forEach","rowData","markTaskAsDone","palceholder","lg","checked","taskItemComplete","taskItemDelete","Calendar","events","defaultView","plugins","dayGridPlugin","interactionPlugin","dateClick","arg","prompt","dateStr","App","exact","path","EditProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"odAKe,SAASA,IACpB,OACI,cAACC,EAAA,EAAD,CAAQC,UAAU,wBAAlB,SACI,eAACC,EAAA,EAAD,WACI,cAACF,EAAA,EAAOG,MAAR,CAAcF,UAAU,mBAAmBG,KAAK,IAAhD,iCACA,eAACC,EAAA,EAAD,CAAKJ,UAAU,UAAf,UACI,cAACI,EAAA,EAAIC,KAAL,CAAUL,UAAU,mBAAmBG,KAAK,QAA5C,mBACA,cAACC,EAAA,EAAIC,KAAL,CAAUL,UAAU,mBAAmBG,KAAK,WAA5C,8BCLpB,IAeeG,EAfE,SAAC,GAAe,IAAdC,EAAa,EAAbA,SACf,OACI,qCACI,iCACI,cAAC,EAAD,MAEJ,+BACI,cAACN,EAAA,EAAD,UACKM,U,MCVN,SAASC,IACpB,OACI,cAACT,EAAA,EAAD,CAAQC,UAAU,oBAAlB,SACI,eAACC,EAAA,EAAD,WACI,cAACF,EAAA,EAAOG,MAAR,CAAcF,UAAU,eAAeG,KAAK,IAA5C,iCACA,eAACC,EAAA,EAAD,CAAKJ,UAAU,UAAf,UACI,cAACI,EAAA,EAAIC,KAAL,CAAUI,MAAM,eAAeT,UAAU,eAAeG,KAAK,gBAA7D,SACI,mBAAGH,UAAU,kBAEjB,cAACI,EAAA,EAAIC,KAAL,CAAUI,MAAM,UAAUT,UAAU,eAAeG,KAAK,WAAxD,SACI,mBAAGH,UAAU,kBAEjB,cAACI,EAAA,EAAIC,KAAL,CAAUI,MAAM,UAAUT,UAAU,eAAeG,KAAK,IAAxD,SACI,mBAAGH,UAAU,kC,2CCVtB,SAASU,EAAQC,GAC5B,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAIMC,EAAgB,SAACJ,GACnBK,QAAQC,IAAIN,GACZC,EAASD,IAGb,OACI,eAAC,SAAD,2BAAaF,GAAb,cACI,cAAC,SAAOS,OAAR,CAAeC,QATF,kBAAML,GAASD,MAW5B,cAACO,EAAA,EAAD,CAAUC,GAAKR,EAAf,SACI,cAAC,SAAOS,SAAR,UACI,eAAC,SAAOC,IAAR,WACI,cAAC,SAAOC,OAAR,CAAevB,KAAK,aAApB,uBAEA,eAAC,SAAOC,IAAR,WACI,cAAC,SAAOuB,KAAR,CAAa3B,UAAS,UAAe,IAAVa,EAAc,kBAAoB,IAAMV,KAAK,WAAWkB,QAAS,WAAQJ,EAAc,IAAlH,qBACA,cAAC,SAAOU,KAAR,CAAa3B,UAAS,UAAe,IAAVa,EAAc,kBAAoB,IAAMV,KAAK,YAAYkB,QAAS,WAAQJ,EAAc,IAAnH,sBACA,cAAC,SAAOU,KAAR,CAAa3B,UAAS,UAAe,IAAVa,EAAc,kBAAoB,IAAMV,KAAK,YAAYkB,QAAS,kBAAMJ,EAAc,IAAjH,uBACA,cAAC,SAAOU,KAAR,CAAa3B,UAAS,UAAe,IAAVa,EAAc,kBAAoB,IAAMV,KAAK,qBAAqBkB,QAAS,kBAAMJ,EAAc,IAA1H,sBACA,cAAC,SAAOU,KAAR,CAAa3B,UAAS,UAAe,IAAVa,EAAc,kBAAoB,IAAMV,KAAK,sBAAsBkB,QAAS,kBAAMJ,EAAc,IAA3H,gCACA,cAAC,SAAOU,KAAR,CAAa3B,UAAS,UAAe,IAAVa,EAAc,kBAAoB,IAAMV,KAAK,gBAAgBkB,QAAS,kBAAMJ,EAAc,IAArH,0BACA,sBAAMjB,UAAU,qBAChB,cAAC,SAAO2B,KAAR,CAAa3B,UAAS,UAAe,IAAVa,EAAc,kBAAoB,IAAMV,KAAK,YAAYkB,QAAS,kBAAMJ,EAAc,IAAjH,kBACA,cAAC,SAAOU,KAAR,CAAa3B,UAAS,UAAe,IAAVa,EAAc,kBAAoB,IAAMV,KAAK,YAAYkB,QAAS,kBAAMJ,EAAc,IAAjH,oC,oBCXbW,EApBQ,SAAC,GAAe,IAAdrB,EAAa,EAAbA,SACrB,OACI,qCACI,iCACI,cAAC,EAAD,MAEJ,+BACI,cAACN,EAAA,EAAD,CAAW4B,OAAK,EAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAIC,IAChB,cAACH,EAAA,EAAD,CAAKC,GAAI,GAAT,SACKzB,eCjBd,SAAS4B,IACpB,OACI,4C,qCCCO,SAASC,IAEpB,IAAIC,EAAUC,cAEd,EAA0B1B,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAAgC5B,mBAAS,IAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KACA,EAAwB9B,qBAAxB,mBAEM+B,GAFN,UAEkB,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sDACjBD,EAAEE,iBAEW,oBAAVP,GAA4C,cAAbE,GAC9BJ,EAAQU,KAAK,aAAaR,GAJb,2CAAH,uDAQlB,OACI,gCACI,sBAAKvC,UAAU,MAAf,cAAuB,uBAAvB,OAEA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,uBAAMgD,SAAUL,EAAhB,UACI,uBACA,uBACA,wCAEA,sBAAK3C,UAAU,aAAf,UACI,0CACA,uBACIiD,KAAK,QACLjD,UAAU,eACVkD,YAAY,qCACZC,GAAK,QACLC,KAAO,QACPC,MAAOd,EACPe,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBf,EAASe,EAAOF,aAIlD,sBAAKrD,UAAU,aAAf,UACI,6CACA,uBACIiD,KAAK,WACLjD,UAAU,eACVkD,YAAY,+BACZC,GAAK,WACLC,KAAO,WACPC,MAAOZ,EACPa,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBb,EAAYa,EAAOF,aAIrD,qBAAKrD,UAAU,aAAf,SACI,gCACI,uBAAOiD,KAAK,WAAWE,GAAG,iBAC1B,qDAIR,cAACK,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,SAASjD,UAAU,YAAlD,qBACA,oBAAGA,UAAU,6BAAb,oBACW,mBAAGG,KAAK,IAAR,+BAInB,qBAAKH,UAAU,mB,mBCnEhB,SAAS0D,IAEpB,IAAIrB,EAAUC,cAERqB,EAAa,wJACbC,EAAgB,iEAEtB,EAAgDhD,mBAAS,CACrDwC,KAAM,GACNb,MAAO,GACPE,SAAU,GACVoB,gBAAiB,KAJrB,mBAAOC,EAAP,KAAyBC,EAAzB,KAOA,EAAoDnD,mBAAS,CACzDoD,UAAW,GACXC,WAAY,GACZC,cAAe,GACfC,qBAAsB,KAJ1B,mBAAOC,EAAP,KAA2BC,EAA3B,KAOMC,EAAe,SAAC1B,GAClB,IAAI2B,EAAe,2BAAOT,GAAP,kBAA0BlB,EAAEW,OAAOH,KAAOR,EAAEW,OAAOF,QACtEU,EAAoBQ,IAqFxB,OACI,gCACI,sBAAKvE,UAAU,MAAf,cAAuB,uBAAvB,OACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,uBAAMgD,SAxFD,SAACJ,GAClBA,EAAEE,iBACF,IAAI0B,GAAQ,EAEZH,EAAsB,CAClBL,UAAW,GACXC,WAAY,GACZC,cAAe,GACfC,qBAAsB,KAG1B,IAAIM,EAAW,eAAOL,GAEO,KAA1BN,EAAiBV,MAChBqB,EAAYT,UAAY,sBACxBK,EAAsBI,GACtBD,GAAQ,IAGRC,EAAYT,UAAY,GACxBK,EAAsBI,IAGI,KAA3BX,EAAiBvB,OAChBkC,EAAYR,WAAa,uBACzBI,EAAsBI,GACtBD,GAAQ,GAGJb,EAAWe,KAAKZ,EAAiBvB,QAMjCkC,EAAYR,WAAa,GACzBI,EAAsBI,KANtBA,EAAYR,WAAa,kBACzBI,EAAsBI,GACtBD,GAAQ,GASiB,KAA9BV,EAAiBrB,UAChBgC,EAAYP,cAAgB,0BAC5BG,EAAsBI,GACtBD,GAAQ,GAGJZ,EAAcc,KAAKZ,EAAiBrB,WAMpCgC,EAAYP,cAAgB,GAC5BG,EAAsBI,KANtBA,EAAYP,cAAgB,qBAC5BG,EAAsBI,GACtBD,GAAQ,GAQwB,KAArCV,EAAiBD,iBAChBY,EAAYN,qBAAuB,0BACnCE,EAAsBI,GACtBD,GAAQ,GAGJV,EAAiBrB,WAAeqB,EAAiBD,iBACjDY,EAAYN,qBAAuB,4BACnCE,EAAsBI,GACtBD,GAAQ,IAGRC,EAAYN,qBAAuB,GACnCE,EAAsBI,KAKjB,IAAVD,IACCG,MAAM,6BACNtC,EAAQU,KAAK,YAUL,UACI,uBACA,uBACA,0CAEA,sBAAK/C,UAAU,aAAf,UACI,cAAC4E,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,kBACA,uBACIiD,KAAK,OACLjD,UAAU,eACVkD,YAAY,aACZC,GAAK,OACLC,KAAO,OACP0B,SAAS,WACTxB,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,MAElC,mBAAG5C,UAAU,cAAb,SAA4BoE,EAAmBJ,eAGnD,sBAAKhE,UAAU,aAAf,UACA,cAAC4E,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,mBACI,uBACIiD,KAAK,OACLjD,UAAU,eACVkD,YAAY,cACZC,GAAK,QACLC,KAAO,QACPE,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,MAElC,mBAAG5C,UAAU,cAAb,SAA4BoE,EAAmBH,gBAGnD,sBAAKjE,UAAU,aAAf,UACA,cAAC4E,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,sBACI,uBACIiD,KAAK,WACLjD,UAAU,eACVkD,YAAY,iBACZC,GAAK,WACLC,KAAO,WACPE,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,MAElC,mBAAG5C,UAAU,cAAb,SAA4BoE,EAAmBF,mBAGnD,sBAAKlE,UAAU,aAAf,UACA,cAAC4E,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,8BACI,uBACIiD,KAAK,WACLjD,UAAU,eACVoD,KAAK,kBACLD,GAAG,kBACHD,YAAY,wBACZI,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,MAElC,mBAAG5C,UAAU,cAAb,SAA4BoE,EAAmBD,0BAInD,cAACX,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,SAASjD,UAAW,YAAnD,6BAGR,qBAAKA,UAAU,mB,WCxKhB+E,EATG,SAACpE,GACf,OACI,qCACI,qBAAKX,UAAU,oBAAf,SAAoCW,EAAMF,QAC1C,qBAAKT,UAAU,uBAAf,SAAuCW,EAAMqE,eCL1C,SAASC,IAEpB,OACI,sBAAKjF,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYS,MAAM,YAAYuE,SAAS,OAE3C,qBAAKhF,UAAU,8B,qEC+HZkF,EAjIG,SAACvE,GAEf,IAAMwE,EAAUxE,EAAMwE,QAChBC,EAAOzE,EAAMyE,KACbC,EAA6B,SAAlB1E,EAAM0E,SACjBC,EAAmC,SAArB3E,EAAM2E,YACpBC,EAAgBC,mBAAS,CAAEL,UAASC,OAAMK,aAAc,CAAEC,SAAU,IACtEC,kBACAC,YACAC,iBAEAC,EAeAP,EAfAO,cACAC,EAcAR,EAdAQ,kBACAC,EAaAT,EAbAS,aACAC,EAYAV,EAZAU,KACAC,EAWAX,EAXAW,WACAC,EAUAZ,EAVAY,gBACAC,EASAb,EATAa,KACAC,EAQAd,EARAc,gBACAC,EAOAf,EAPAe,YACAC,EAMAhB,EANAgB,UACAC,EAKAjB,EALAiB,SACAC,EAIAlB,EAJAkB,SACAC,EAGAnB,EAHAmB,aACAC,EAEApB,EAFAoB,YAdJ,EAgBIpB,EADAqB,MAASlB,EAfb,EAeaA,SAAUmB,EAfvB,EAeuBA,aAGvB,OACI,gCACI,eAAC/E,EAAA,EAAD,WAEKuD,EACI,cAACtD,EAAA,EAAD,CAAKC,GAAI,CAAE8E,KAAM,GAAK9G,UAAU,OAAhC,SACG,cAAC,UAAD,CAASoF,KAAMA,EAAM2B,SAAU,aAAc/G,UAAU,qCAAqCuD,OAAO,SAAnG,0BAID,6BAIN+B,EACI,cAACvD,EAAA,EAAD,CAAKC,GAAI,CAAE8E,KAAM,EAAGE,OAAQ,GAA5B,SACG,cAACpC,EAAA,EAAKqC,MAAN,UACI,cAACrC,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,SAASC,YAAY,SAC1BG,MAAOwD,GAAgB,GACvBvD,SAAU,SAAAV,GAAC,OAAIuD,EAAgBvD,EAAEW,OAAOF,cAG3D,gCAKX,qBAAKrD,UAAU,mBAAf,SACI,eAACmH,EAAA,EAAD,yBAAOC,UAAQ,EAACC,SAAO,GAAKvB,KAA5B,cACI,gCACCE,EAAasB,KAAI,SAAAC,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC3B,+CAAQA,EAAOC,eAAeD,EAAOE,yBAArC,cACKF,EAAOG,OAAO,UACf,+BAAOH,EAAOI,SACVJ,EAAOK,aACH,gBAAO,gBACT,oBAMtB,iDAAWhC,KAAX,aACCK,EAAKkB,KAAI,SAACU,EAAKC,GAEZ,OADA/B,EAAW8B,GAEP,8CAAQA,EAAIE,eAAZ,aACKF,EAAIG,MAAMb,KAAI,SAACc,GACZ,OACI,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKP,OAAO,6BAWtE,eAAC/F,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC6C,EAAA,EAAKqC,MAAN,UACI,cAACrC,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,SAASqG,MAAO,CAAEC,MAAO,SAC5BlF,MAAOqC,EACPpC,SAAU,SAACV,GACP+D,EAAY6B,OAAO5F,EAAEW,OAAOF,SAH9C,SAKK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIiE,KAAI,SAAC5B,GAAD,OACzB,yBAAuBrC,MAAOqC,EAA9B,kBACUA,IADGA,YAO7B,cAAC3D,EAAA,EAAD,UACI,eAAC0G,EAAA,EAAD,CAAYzI,UAAU,sBAAtB,UACI,cAACyI,EAAA,EAAWC,MAAZ,CAAkBrH,QAAS,kBAAMmF,EAAS,IAAImC,UAAWtC,IACzD,cAACoC,EAAA,EAAWG,KAAZ,CAAiBvH,QAAS,kBAAMqF,KAAgBiC,UAAWtC,IAC1DwC,MAAMtC,GAAWuC,OAAOxB,KAAI,SAACyB,EAAEd,GAAH,OACzB,cAACQ,EAAA,EAAW9G,KAAZ,CAAiBN,QAAS,kBAAMmF,EAASyB,IAAzC,SAA8CA,EAAE,OAEpD,cAACQ,EAAA,EAAWO,KAAZ,CAAiB3H,QAAS,kBAAMoF,KAAYkC,UAAWrC,IACvD,cAACmC,EAAA,EAAWQ,KAAZ,CAAiB5H,QAAS,kBAAMmF,EAASD,EAAY,IAAIoC,UAAWrC,YAMhF,cAACxE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,4CAAe2D,EAAf,eAAqCO,EAAKiD,OAA1C,mBCvHPC,G,OAAb,kDAEI,WAAYxI,GAAQ,IAAD,8BACf,cAAMA,IAsDVyI,cAAgB,SAACC,GACb,EAAKC,SAAL,eACKD,EAAM9F,OAAOH,KAAOiG,EAAM9F,OAAOF,SAzDvB,EA6DnBkG,eAAiB,SAACF,GACd,IAAIG,GAAU,EAKd,OAJK,EAAK5C,MAAM6C,SACZ,EAAKH,SAAS,CAAEI,YAAa,uBAC7BF,GAAU,GAEPA,GAnEQ,EAsEnBG,gBAAkB,SAACN,GACf,IAAIG,GAAU,EAKd,OAJK,EAAK5C,MAAMgD,UACZ,EAAKN,SAAS,CAAEO,aAAc,wBAC9BL,GAAU,GAEPA,GA5EQ,EA+EnBM,aAAe,SAACT,GACZ,IAAIG,GAAU,EAOd,OANK,EAAKO,sBACNP,GAAU,GAET,EAAKQ,oBACNR,GAAU,GAEPA,GAvFQ,EA0FnBO,kBAAoB,SAACV,GACjB,IAAIG,GAAU,EACd,GAAI,EAAK5C,MAAMqD,UAAW,CACtB,IAAMC,EAAQ,IAAIC,KACG,IAAIA,KAAK,EAAKvD,MAAMqD,WACtBC,GACf,EAAKZ,SAAS,CAAEc,eAAgB,qCAChCZ,GAAU,GAEV,EAAKF,SAAS,CAAEc,eAAgB,UAGpC,EAAKd,SAAS,CAAEc,eAAgB,2BAChCZ,GAAU,EAEd,OAAOA,GAzGQ,EA4GnBQ,gBAAkB,SAACX,GACf,IAAIG,GAAU,EACRS,EAAY,IAAIE,KAAK,EAAKvD,MAAMqD,WAChCI,EAAU,IAAIF,KAAK,EAAKvD,MAAMyD,SAYpC,OAXIJ,GAAaI,EACTJ,EAAYI,GACZ,EAAKf,SAAS,CAAEgB,aAAc,4CAC9Bd,GAAU,GAEV,EAAKF,SAAS,CAAEgB,aAAc,MAGlC,EAAKhB,SAAS,CAAEgB,aAAc,yBAC9Bd,GAAU,GAEPA,GA3HQ,EA8HnBe,mBAAqB,SAAClB,GAClB,IAAIG,GAAU,EAKd,OAJK,EAAK5C,MAAM4D,aACZ,EAAKlB,SAAS,CAAEmB,gBAAiB,4BACjCjB,GAAU,GAEPA,GApIQ,EAuInBkB,aAAe,SAACrB,GACZ,IAAIG,GAAU,EAad,OAZK,EAAKD,mBACNC,GAAU,GAET,EAAKG,oBACNH,GAAU,GAET,EAAKM,iBACNN,GAAU,GAET,EAAKe,uBACNf,GAAU,GAEPA,GArJQ,EAwJnBmB,gBAAkB,SAACtB,GACfA,EAAMvG,iBACF,EAAK4H,gBACL,EAAKE,gBAxJT,EAAKhE,MAAQ,CACT6C,OAAQ,GACRC,YAAa,GACbO,UAAW,GACXG,eAAgB,GAChBC,QAAS,GACTC,aAAc,GACdE,WAAY,GACZC,gBAAiB,GACjBb,QAAS,GACTC,aAAc,IAGlB,EAAK1E,QAAU,CACX,CAAEzD,OAAQ,cAAemJ,SAAU,eACnC,CAAEnJ,OAAQ,eAAgBmJ,SAAU,SACpC,CAAEnJ,OAAQ,QAASmJ,SAAU,UAGjC,EAAKC,UAAY,GAtBF,EAFvB,gDA2BI,WACIC,KAAKD,UAAY,CACb,CACIE,YAAa,YACbC,MAAO,EACPC,MAA+B,EAAxBH,KAAKnE,MAAM4D,YAEtB,CACIQ,YAAa,UACbC,MAAO,EACPC,MAA+B,EAAxBH,KAAKnE,MAAM4D,YAEtB,CACIQ,YAAa,WACbC,MAAO,EACPC,MAA+B,EAAxBH,KAAKnE,MAAM4D,YAEtB,CACIQ,YAAa,WACbC,MAAO,EACPC,MAA+B,EAAxBH,KAAKnE,MAAM4D,YAEtB,CACIQ,YAAa,qBACbC,MAAO,GACPC,MAA+B,GAAxBH,KAAKnE,MAAM4D,eApDlC,oBAiKI,WACI,OACI,sBAAKxK,UAAU,8CAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYS,MAAM,qBAAqBuE,SAAS,OAEpD,qBAAKhF,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAAC8B,EAAA,EAAD,CAAK9B,UAAU,6BAAf,SACI,cAAC+B,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAD,WACI,sBAAK5E,UAAU,iBAAf,UACI,eAAC8B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,oBACA,eAAC4E,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,SAASmB,KAAK,SAASC,MAAO0H,KAAKnE,MAAM6C,OAAQnG,SAAUyH,KAAK3B,cAC7E+B,OAAQJ,KAAKxB,eACb6B,UAAWL,KAAKnE,MAAM8C,YAF1B,UAGI,mDACA,wBAAQrG,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,mBAEJ,cAACuB,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAM8C,mBAIxB,cAAC3H,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,qBACA,eAAC4E,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,SAASmB,KAAK,UAAUC,MAAO0H,KAAKnE,MAAMgD,QAAStG,SAAUyH,KAAK3B,cAC/E+B,OAAQJ,KAAKpB,gBACbyB,UAAWL,KAAKnE,MAAMiD,aAF1B,UAGI,oDACA,wBAAQxG,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,mBAEJ,cAACuB,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAMiD,uBAK5B,eAAC/H,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,8BACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,gCAEJ,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,cAAC4E,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOjD,UAAU,aAAaoD,KAAK,YAAYF,YAAY,aAAaG,MAAO0H,KAAKnE,MAAMqD,UAAW3G,SAAUyH,KAAK3B,cACnI+B,OAAQJ,KAAKjB,aACbsB,UAAWL,KAAKnE,MAAMwD,iBAC1B,cAACxF,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAMwD,oBAGpB,sBAAKpK,UAAU,mBAAf,UACI,cAAC4E,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,UAAUF,YAAY,WAAWG,MAAO0H,KAAKnE,MAAMyD,QAAS/G,SAAUyH,KAAK3B,cACtG+B,OAAQJ,KAAKjB,aACbsB,UAAWL,KAAKnE,MAAM0D,eAC1B,cAAC1F,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAM0D,0BAMhC,cAACvI,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,yBACA,cAAC4E,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,SAASG,KAAK,aAAaF,YAAY,cAAcG,MAAO0H,KAAKnE,MAAM4D,WAAYlH,SAAUyH,KAAK3B,cACjH+B,OAAQJ,KAAKR,mBACba,UAAWL,KAAKnE,MAAM6D,kBAC1B,cAAC7F,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAM6D,6BAMhC,qBAAKzK,UAAU,mBAAf,SACI,eAAC8B,EAAA,EAAD,CAAK9B,UAAU,4BAAf,UACI,cAACwD,EAAA,EAAD,CAAQxD,UAAU,iBAAiBqB,QAAS0J,KAAKJ,gBAAjD,8BAGA,cAACnH,EAAA,EAAD,CAAQxD,UAAU,mBAAlB,kBAGA,cAACwD,EAAA,EAAD,CAAQxD,UAAU,mBAAlB,sBAGA,cAACwD,EAAA,EAAD,CAAQxD,UAAU,mBAAlB,8BAQpB,cAAC8B,EAAA,EAAD,CAAK9B,UAAU,uBAAf,SACI,cAAC+B,EAAA,EAAD,UACI,cAAC,EAAD,CAAWoD,QAAS4F,KAAK5F,QAASC,KAAM2F,KAAKD,UAAWzF,SAAS,QAAQC,YAAY,0BA3QrH,GAAuCgG,cAqRxBC,cAAWpC,G,4DC/PX,MA7Bf,2HAEI,4BAAAtG,EAAA,sEACyB2I,IAAMC,IAAI,iBADnC,cACUC,EADV,yBAEWA,EAAOtG,MAFlB,2CAFJ,8GAQI,WAAUA,GAAV,eAAAvC,EAAA,6DACIuC,EAAKuG,UAAYvG,EAAKwE,QAD1B,SAEyB4B,IAAMI,KAAK,oBAAoBxG,GAFxD,cAEUsG,EAFV,yBAGWA,EAAOtG,MAHlB,2CARJ,kHAeI,WAAaA,GAAb,eAAAvC,EAAA,6DACIuC,EAAKuG,UAAYvG,EAAKwE,QACtB1I,QAAQC,IAAIiE,GAFhB,SAGyBoG,IAAMK,IAAI,wBAAwBzG,EAAK0G,IAAI1G,GAHpE,cAGUsG,EAHV,yBAIWA,EAAOtG,MAJlB,2CAfJ,kHAuBI,WAAaA,GAAb,eAAAvC,EAAA,sEACyB2I,IAAMO,OAAO,wBAAwB3G,EAAK0G,IAAI1G,GADvE,cACUsG,EADV,yBAEWA,EAAOtG,MAFlB,2CAvBJ,+DCKe,OAPf,2HACI,4BAAAvC,EAAA,sEACyB2I,IAAMC,IAAI,iBADnC,cACUC,EADV,yBAEWA,EAAOtG,MAFlB,2CADJ,8DCSe,SAAS4G,KAEpB,IAAM7G,EAAU,CACZ,CAAEzD,OAAQ,UAAWmJ,SAAU,gBAC/B,CAAEnJ,OAAQ,SAAUmJ,SAAU,kBAC9B,CAAEnJ,OAAQ,OAAQmJ,SAAU,QAC5B,CAAEnJ,OAAQ,WAAYmJ,SAAU,SAAA7C,GAAG,OAAIiE,IAAOjE,EAAIkE,SAASC,OAAO,yBAClE,CAAEzK,OAAQ,SAAUmJ,SAAU,SAAA7C,GAAG,OAAIA,EAAIoE,MAAQH,IAAOjE,EAAIoE,OAAOD,OAAO,uBAAuB,MACjG,CAAEzK,OAAQ,SAAUyB,GAAI,SAAU0H,SAAU,MACxCwB,KAAM,gBAAGrE,EAAH,EAAGA,IAAH,OAAc,cAACxE,EAAA,EAAD,CAAQxD,UAAU,gBAAgBqB,QAAS,WAAQiL,GAAWtE,IAA9D,uBAG5B,EAAwBpH,mBAAS,IAAjC,mBAAOwE,EAAP,KAAamH,EAAb,KAEAC,qBAAU,WACNC,EAAgBC,OAAOC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIxH,WACjD,IAEFoH,qBAAU,WACN,GAAGpH,EAAK8D,OAAO,CACX,IAAI2D,EAAWzH,EAAK,GACjByH,IAAaA,EAAST,QACrBU,EAAQD,GACRE,EAAa,IAAI5C,KAAK0C,EAASX,cAGzC,CAAC9G,IAGH,MAAoCxE,mBAAS,GAA7C,mBAAOoM,EAAP,KAAmBC,EAAnB,KACA,EAAoCrM,mBAASuJ,KAAK+C,OAAlD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCxM,mBAASuJ,KAAK+C,OAA9C,mBAAiBG,GAAjB,WACA,EAAsCzM,mBAAS,qBAA/C,mBAAO0M,EAAP,KAAoBC,EAApB,KACA,EAA0B3M,mBAAS,GAAnC,mBAAO4M,EAAP,KAAcC,EAAd,KACAjB,qBAAU,WACN,IAAIkB,GAAgB,IAAOC,KAAKC,MAAMJ,EAAQ,IAAM,KAAMK,OAAO,GAC7DC,GAAW,IAAOH,KAAKC,MAAMJ,EAAQ,KAAQ,IAAKK,OAAO,GACzDE,GAAW,IAAOJ,KAAKC,MAAMJ,EAAQ,KAAS,IAAKK,OAAO,GAC1D5C,GAAS,IAAM0C,KAAKC,MAAMJ,EAAQ,OAAUK,OAAO,GACvDN,EAAetC,EAAQ,MAAQ8C,EAAU,MAAQD,EAAU,MAAQJ,KACpE,CAACF,IACJ,IAUMT,EAAe,SAACb,GACC,IAAfc,IACAI,EAAclB,EAAUsB,GACxBC,EAAStD,KAAK+C,MAAQhB,GACtBe,EACIe,aAAY,WACRP,EAAUtD,KAAK+C,MAAQhB,KACxB,OAYf,EAAgCtL,mBAAS,IAAzC,mBAAOqN,EAAP,KAAiBC,EAAjB,KACA1B,qBAAU,WACN2B,GAAgBzB,OAAOC,MAAK,SAAAC,GAAG,OAAIsB,EAAYtB,EAAIxH,WACrD,IACF,MAAwBxE,mBAAS,CAC7BgJ,QAAS,GACTH,OAAQ,GACR2E,KAAM,GACNlC,QAAS,GACTE,MAAO,KALX,mBAAOgC,EAAP,KAAatB,EAAb,KAOA,EAAkClM,mBAAS,CACvCgJ,QAAS,GACTH,OAAQ,GACR2E,KAAM,KAHV,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,GAAkC1N,oBAAS,GAA3C,qBAAO2N,GAAP,MAAkBC,GAAlB,MAGMlK,GAAe,SAAC1B,GAClB,IAAI6L,EAAO,2BAAQL,GAAR,kBAAexL,EAAEW,OAAOH,KAAOR,EAAEW,OAAOF,QACnDyJ,EAAQ2B,IAkCNC,GAAmB,kBAAMF,IAAa,IAItCG,GAAY,SAAC/L,GACfA,EAAEE,iBArCc,WAChB,IAAI0B,GAAQ,EAOZ,GANA8J,EAAa,CACT1E,QAAS,GACTH,OAAQ,GACR2E,KAAM,MAGLA,EAAKxE,QAAQV,OAAS,EAAG,CAC1B,IAAI0F,EAAY,eAAQP,GACxBO,EAAahF,QAAU,sBACvB0E,EAAaM,GACbpK,GAAQ,EAGZ,IAAK4J,EAAK3E,OAAOP,OAAS,EAAG,CACzB,IAAI0F,EAAY,eAAQP,GACxBO,EAAanF,OAAS,qBACtB6E,EAAaM,GACbpK,GAAQ,EAGZ,IAAK4J,EAAKA,KAAKlF,OAAS,EAAG,CACvB,IAAI0F,EAAY,eAAQP,GACxBO,EAAaR,KAAO,mBACpBE,EAAaM,GACbpK,GAAQ,EAEZ,OAAOA,EAUHqK,KAzFe,IAAf7B,IACAI,EAAcjD,KAAK+C,MAAQM,GAC3BP,EACIe,aAAY,WACRP,EAAStD,KAAK+C,MAAQC,KACvB,MAsFPiB,EAAKlC,QAAU/B,KAAK+C,MACpBT,EAAgBqC,IAAIV,GAAMzB,MAAK,SAAAC,GAAQwB,EAAKtC,IAAMc,EAAIxH,KAAK0G,IAAKsC,EAAKxE,QAAUgD,EAAIxH,KAAKwE,WACxF2C,GAAQ,SAAAnH,GAAI,OAAKgJ,GAAL,mBAAchJ,OAC1BsJ,OAiBFpC,GAAa,SAAC8B,GAChB,GAAIW,OAAOC,QAAQ,iBAAkB,CACjC,IAAIC,EAAO,YAAO7J,GAClBqH,EAAgByC,OAAOD,EAAQ,IAAItC,MAAK,SAAAC,GAAG,OAAIjI,MAAMiI,EAAIuC,YACzDF,EAAQG,OAAOhB,EAAKvN,MAAO,GAC3B0L,EAAQ0C,KAIhB,OACI,sBAAKjP,UAAU,oCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYS,MAAM,YAAYuE,SAAS,OAE3C,qBAAKhF,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAAC8B,EAAA,EAAD,CAAK9B,UAAU,yBAAf,SACI,cAAC+B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACqN,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,CAAWtP,UAAU,cAArB,UACI,cAACqP,EAAA,EAAKE,MAAN,CAAYjH,MAAO,CAAEkH,SAAU,UAA/B,SAA4ClC,IAC3CE,GAAS,GACN,cAAChK,EAAA,EAAD,CAAQxD,UAAU,qBAAqBqB,QAjDnD,kBAAMmN,IAAa,IAiDP,mBAEHhB,EAAQ,GACL,qCACI,eAAC6B,EAAA,EAAKI,SAAN,CAAezP,UAAU,kBAAzB,mBAAkDoO,EAAKA,QACvD,cAAC5K,EAAA,EAAD,CAAQxD,UAAU,oBAAoBqB,QAzC7D,WA5EbgM,EAAYlD,KAAK+C,OACjBwC,cAAc1C,GACdC,EAAc,GACdQ,EAAS,GA2ET,IAAIwB,EAAO,YAAO7J,GAClB6J,EAAQ,GAAG7C,MAAQjC,KAAK+C,MACxBT,EAAgBkD,OAAOV,EAAQ,IAAItC,MAAK,SAAAC,GAAG,OAAIjI,MAAMiI,EAAIuC,YACzD5C,EAAQ0C,GACRnC,EAAQ,CACJlD,QAAS,GACTH,OAAQ,GACR2E,KAAM,GACNlC,QAAS,GACTE,MAAO,MA8ByB,8BAOxB,cAACwD,EAAA,EAAD,CAAOC,KAAMtB,GAAWuB,OAAQpB,GAAhC,SACI,eAAC9J,EAAA,EAAD,CAAM5B,SAAU,SAACJ,GAAD,OAAO+L,GAAU/L,IAAjC,UACI,cAACgN,EAAA,EAAMlO,OAAP,CAAcqO,aAAW,EAAzB,SACI,cAACH,EAAA,EAAML,MAAP,yBAEJ,cAACK,EAAA,EAAMN,KAAP,CAAYtP,UAAU,YAAtB,SACI,eAACC,EAAA,EAAD,WACI,eAAC6B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,CAAYjH,UAAU,OAAtB,UACI,cAAC4E,EAAA,EAAKC,MAAN,qBACA,eAACD,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,SAASmB,KAAK,SAC3BE,SAAU,SAACV,GAAD,OAAO0B,GAAa1B,IAC9B5C,UAAWqO,EAAU5E,OAAOP,OAAS,EAAI,aAAe,GAF5D,UAGI,wBAAQ7F,MAAM,GAAd,2BACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,qBAAd,gCACA,wBAAQA,MAAM,oBAAd,kCAEJ,cAACuB,EAAA,EAAKoL,KAAN,CAAWhQ,UAAU,cAArB,SAAoCqO,EAAU5E,cAGtD,cAAC1H,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,CAAYjH,UAAU,OAAtB,UACI,cAAC4E,EAAA,EAAKC,MAAN,sBACA,eAACD,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,SAASmB,KAAK,UAC3BE,SAAU,SAACV,GAAD,OAAO0B,GAAa1B,IAC9B5C,UAAWqO,EAAUzE,QAAQV,OAAS,EAAI,aAAe,GAF7D,UAGI,wBAAQ7F,MAAM,GAAd,4BACC4K,EAASgC,QAAO,SAAArG,GAAO,OAAIA,EAAQH,OAAOyG,SAAS9B,EAAK3E,WAASnC,KAAI,SAASsC,EAAQ/I,GACnF,OAAO,wBAAoBwC,MAAOuG,EAAQkC,IAAnC,SAAyClC,EAAQxG,MAApCvC,SAG5B,cAAC+D,EAAA,EAAKoL,KAAN,CAAWhQ,UAAU,cAArB,SAAoCqO,EAAUzE,kBAI1D,cAAC9H,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,CAAYjH,UAAU,OAAtB,UACI,cAAC4E,EAAA,EAAKC,MAAN,mBACA,cAACD,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,OAAOF,YAAY,sBAC9CI,SAAU,SAACV,GAAD,OAAO0B,GAAa1B,IAC9B5C,UAAWqO,EAAUD,KAAKlF,OAAS,EAAI,aAAe,KAC1D,cAACtE,EAAA,EAAKoL,KAAN,CAAWhQ,UAAU,cAArB,SAAoCqO,EAAUD,mBAMlE,eAACwB,EAAA,EAAMO,OAAP,WACI,cAAC3M,EAAA,EAAD,CAAQxD,UAAU,mBAAmBiD,KAAK,QAAQ5B,QAASqN,GAA3D,mBAGA,cAAClL,EAAA,EAAD,CAAQxD,UAAU,iBAAiBiD,KAAK,SAAxC,2BAOZ,cAAC,EAAD,CAAWkC,QAASA,EAASC,KAAMA,YC/PxC,SAASgL,KAAc,IAAD,QAE3B/N,EAAUC,cAFiB,4CAIjC,sBAAAO,EAAA,sDACc,YACVR,EAAQU,KADE,aADd,4CAJiC,sBASjC,MAA8BnC,mBAAS,CACnCH,MAAO,GACPgJ,OAAQ,GACRuB,YAAa,GACbqF,QAAS,GACTC,KAAM,GACNC,OAAQ,KANZ,mBAAO3G,EAAP,KAAgB4G,EAAhB,KASA,EAAwC5P,mBAAS,CAC7CH,MAAO,GACPgJ,OAAQ,GACRuB,YAAa,GACbqF,QAAS,GACTC,KAAM,GACNC,OAAQ,KANZ,mBAAO1G,EAAP,KAAqB4G,EAArB,KASMnM,EAAe,SAAC1B,GAClB,IAAI8N,EAAU,2BAAO9G,GAAP,kBAAiBhH,EAAEW,OAAOH,KAAOR,EAAEW,OAAOF,QACxDmN,EAAWE,IAkFf,OACI,gCACI,cAAC,EAAD,CAAYjQ,MAAM,gBAElB,qBAAKT,UAAU,aAEf,qBAAKA,UAAU,YAAf,SAEE,sBAAMgD,SAAU,SAACJ,GAAD,OAvFH,SAACA,GACpBA,EAAEE,iBACF,IAAI0B,GAAQ,EACZiM,EAAgB,CACZhQ,MAAO,GACPgJ,OAAQ,GACRuB,YAAa,GACbqF,QAAS,GACTC,KAAM,GACNC,OAAQ,KAEZ,IAAII,EAAe,eAAO9G,GAiE1B,OA/DID,EAAQnJ,MAAMyI,OAAS,GACvByH,EAAgBlQ,MAAQ,4BACxBgQ,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBlQ,MAAQ,GACxBgQ,EAAgBE,KAGhB/G,EAAQH,OAAOP,OAAS,GACxByH,EAAgBlH,OAAS,0BACzBgH,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBlH,OAAS,GACzBgH,EAAgBE,KAGhB/G,EAAQoB,YAAY9B,OAAS,GAC7ByH,EAAgB3F,YAAc,kCAC9ByF,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgB3F,YAAc,GAC9ByF,EAAgBE,KAGhB/G,EAAQ0G,KAAKjN,MAAQ,GACrBsN,EAAgBL,KAAO,mBACvBG,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBL,KAAO,GACvBG,EAAgBE,KAGhB/G,EAAQyG,QAAQnH,OAAS,GACzByH,EAAgBN,QAAU,+BAC1BI,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBN,QAAU,GAC1BI,EAAgBE,KAGhB/G,EAAQ2G,OAAOrH,OAAS,GACxByH,EAAgBJ,OAAS,6BACzBE,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBJ,OAAS,GACzBE,EAAgBE,KAGP,IAAVnM,GACCoM,YAAS,aAENpM,EAWsBqM,CAAejO,IAAtC,SAA0C,mCAExC,sBAAK5C,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,8BACA,sBAAKA,UAAU,YAAf,UACI,uBAAOS,MAAM,gBAAgByC,YAAY,sBAAsBI,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAC/D5C,UAAW6J,EAAapJ,MAAMyI,OAAS,EAAI,0BAA4B,eAAgBjG,KAAK,OAAOG,KAAK,QAAQD,GAAG,UACjJ,mBAAGnD,UAAU,cAAb,SAA4B6J,EAAapJ,cAIjD,sBAAKT,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,0BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQS,MAAM,cAAc6C,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAC5B5C,UAAW6J,EAAaJ,OAAOP,OAAS,EAAI,0BAA4B,gBADtG,sBAC4H,UAD5H,qBAC0I,UAD1I,0BAC6J,gBAD7J,0BAEI,wBAAQ7F,MAAM,GAAd,2BACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,uBANJ,IAQA,mBAAGrD,UAAU,cAAb,SAA4B6J,EAAaJ,eAIjD,sBAAKzJ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,2BACA,sBAAKA,UAAU,YAAf,UACI,6BAAUS,MAAM,sBAAsByC,YAAY,4BAA6BI,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAC/E5C,UAAW6J,EAAamB,YAAY9B,OAAS,EAAI,0BAA4B,eAAgBjG,KAAK,WAAWgD,KAAK,KADhJ,sBAC0J,eAD1J,qBAC6K,eAD7K,mBAC8L,eAD9L,IAEA,mBAAGjG,UAAU,cAAb,SAA4B6J,EAAamB,oBAIjD,sBAAKhL,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,4BACA,sBAAKA,UAAU,YAAf,UACI,uBAAOS,MAAM,eAAeqQ,IAAI,IAAI5N,YAAY,6BAA6BI,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAAI5C,UAAW6J,EAAayG,KAAKpH,OAAS,EAAI,0BAA4B,eAAgBjG,KAAK,SAASG,KAAK,OAAOD,GAAG,SAClO,mBAAGnD,UAAU,cAAb,SAA4B6J,EAAayG,aAIjD,sBAAKtQ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,+BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQS,MAAM,mBAAmB6C,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAAI5C,UAAW6J,EAAawG,QAAQnH,OAAS,EAAI,0BAA4B,eAAgB9F,KAAK,WAAjK,sBAAiL,WAAjL,0BAAqM,gBAArM,0BACI,wBAAQC,MAAM,GAAd,qCACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,uBAJJ,IAMA,mBAAGrD,UAAU,cAAb,SAA4B6J,EAAawG,gBAIjD,sBAAKrQ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,6BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQS,MAAM,iBAAiB6C,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAAI5C,UAAW6J,EAAa0G,OAAOrH,OAAS,EAAI,0BAA4B,eAAgB9F,KAAK,UAA9J,sBAA6K,UAA7K,0BAAgM,gBAAhM,0BACI,wBAAQC,MAAM,GAAd,mCACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,yBAJJ,IAMA,mBAAGrD,UAAU,cAAb,SAA4B6J,EAAa0G,eAIjD,sBAAKvQ,UAAU,iBAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,wBAAQiD,KAAK,SAASxC,MAAM,SAAST,UAAU,kBAA/C,sBAEJ,qBAAKA,UAAU,WAAf,SACI,wBAAQiD,KAAK,SAASxC,MAAM,SAASY,QAlMxB,2CAkMyCrB,UAAU,iBAAhE,sBAEJ,qBAAKA,UAAU,0B,OC9LpB,SAAS+Q,KAEpB,IAAM5L,EAAU,CACZ,CAAEzD,OAAQ,gBAAiBmJ,SAAU,SACrC,CAAEnJ,OAAQ,cAAemJ,SAAU,eACnC,CAAEnJ,OAAQ,cAAemJ,SAAU,UACnC,CAAEnJ,OAAQ,SAAUmJ,SAAU,UAC9B,CACInJ,OAAQ,UAAWmJ,SAAU,MAC7BwB,KAAM,gBAAGrE,EAAH,EAAGA,IAAH,OAAc,sBAAKhI,UAAU,oBAAf,UAAmC,mBAAGS,MAAM,eAAeY,QAAS,kBATjE,2CASuE2P,CAAYhJ,EAAI7E,KAAKnD,UAAU,mBAAtE,kBAAiG,mBAAGS,MAAM,iBAAiBY,QAAS,WAAQiL,EAAWtE,IAAQhI,UAAU,gBAAxE,0BAIhK,EAAwBY,mBAAS,IAAjC,mBAAOwE,EAAP,KAAamH,EAAb,KACAC,qBAAU,WACND,EAAQ,CACJ,CACI9L,MAAO,iBACPuK,YAAa,8EACbvB,OAAQ,mBACR8G,OAAQ,eAEZ,CACI9P,MAAO,aACPuK,YAAa,iFACbvB,OAAQ,eACR8G,OAAQ,WAEZ,CACI9P,MAAO,mBACPuK,YAAa,mDACbvB,OAAQ,kBACR8G,OAAQ,aAEZ,CACI9P,MAAO,iBACPuK,YAAa,8EACbvB,OAAQ,mBACR8G,OAAQ,eAEZ,CACI9P,MAAO,aACPuK,YAAa,iFACbvB,OAAQ,eACR8G,OAAQ,WAEZ,CACI9P,MAAO,mBACPuK,YAAa,mDACbvB,OAAQ,kBACR8G,OAAQ,aAEZ,CACI9P,MAAO,iBACPuK,YAAa,8EACbvB,OAAQ,mBACR8G,OAAQ,eAEZ,CACI9P,MAAO,aACPuK,YAAa,iFACbvB,OAAQ,eACR8G,OAAQ,WAEZ,CACI9P,MAAO,mBACPuK,YAAa,mDACbvB,OAAQ,kBACR8G,OAAQ,aAEZ,CACI9P,MAAO,iBACPuK,YAAa,8EACbvB,OAAQ,mBACR8G,OAAQ,eAEZ,CACI9P,MAAO,aACPuK,YAAa,iFACbvB,OAAQ,eACR8G,OAAQ,WAEZ,CACI9P,MAAO,mBACPuK,YAAa,mDACbvB,OAAQ,kBACR8G,OAAQ,iBAGjB,IAEH,MAA8B3P,mBAAS,CACnCH,MAAO,GACPuK,YAAa,GACbvB,OAAQ,GACR8G,OAAQ,KAJZ,mBAQMjE,GARN,UAQmB,SAAC1C,GAChB,GAAImF,OAAOC,QAAQ,iBAAkB,CACjC,IAAIC,EAAO,YAAO7J,GAClB6J,EAAQG,OAAOxF,EAAQ/I,MAAO,GAC9BK,QAAQC,IAAI8N,GACZ1C,EAAQ0C,MAIhB,EAAkCrO,oBAAS,GAA3C,mBAMMyB,GANN,UAMgBC,eAlHe,4CAoH/B,WAA2Ba,GAA3B,eAAAN,EAAA,sDACQoO,EAAM,kBAAoB9N,EAC9Bd,EAAQU,KAAKkO,GAFjB,4CApH+B,sBAyH/B,OACI,sBAAKjR,UAAU,oCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYS,MAAM,eAEtB,qBAAKT,UAAU,yBAAf,SACA,sBAAKA,UAAU,eAAf,UAEI,cAAC8B,EAAA,EAAD,CAAK9B,UAAU,mBAAf,SACI,cAAC+B,EAAA,EAAD,UACI,mBAAG5B,KAAK,gBAAgBM,MAAM,cAAcT,UAAU,iBAAtD,6BAGR,cAAC8B,EAAA,EAAD,CAAK9B,UAAU,uBAAf,SACI,cAAC+B,EAAA,EAAD,UACI,cAAC,EAAD,CAAWoD,QAASA,EAASC,KAAMA,gBC9I3D,IA8Me8L,GA9MM,SAACC,GAEJC,cAFc,IAAD,QAIrB/O,EAAUC,cAJW,4CAM3B,sBAAAO,EAAA,sDACc,YACVR,EAAQU,KADE,aADd,4CAN2B,sBAW3B,MAA8BnC,mBAAS,CACnCH,MAAO,GACPgJ,OAAQ,GACRuB,YAAa,GACbqF,QAAS,GACTC,KAAM,GACNC,OAAQ,KANZ,mBAAO3G,EAAP,KAAgB4G,EAAhB,KASA,EAAwC5P,mBAAS,CAC7CH,MAAO,GACPgJ,OAAQ,GACRuB,YAAa,GACbqF,QAAS,GACTC,KAAM,GACNC,OAAQ,KANZ,mBAAO1G,EAAP,KAAqB4G,EAArB,KASMnM,EAAe,SAAC1B,GAClB,IAAI8N,EAAU,2BAAO9G,GAAP,kBAAiBhH,EAAEW,OAAOH,KAAOR,EAAEW,OAAOF,QACxDmN,EAAWE,IAkFf,OACI,gCACI,cAAC,EAAD,CAAYjQ,MAAM,iBAElB,qBAAKT,UAAU,aAEf,qBAAKA,UAAU,YAAf,SAEE,sBAAMgD,SAAU,SAACJ,GAAD,OAvFH,SAACA,GACpBA,EAAEE,iBACF,IAAI0B,GAAQ,EACZiM,EAAgB,CACZhQ,MAAO,GACPgJ,OAAQ,GACRuB,YAAa,GACbqF,QAAS,GACTC,KAAM,GACNC,OAAQ,KAEZ,IAAII,EAAe,eAAO9G,GAiE1B,OA/DID,EAAQnJ,MAAMyI,OAAS,GACvByH,EAAgBlQ,MAAQ,4BACxBgQ,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBlQ,MAAQ,GACxBgQ,EAAgBE,KAGhB/G,EAAQH,OAAOP,OAAS,GACxByH,EAAgBlH,OAAS,0BACzBgH,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBlH,OAAS,GACzBgH,EAAgBE,KAGhB/G,EAAQoB,YAAY9B,OAAS,GAC7ByH,EAAgB3F,YAAc,kCAC9ByF,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgB3F,YAAc,GAC9ByF,EAAgBE,KAGhB/G,EAAQ0G,KAAKjN,MAAQ,GACrBsN,EAAgBL,KAAO,mBACvBG,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBL,KAAO,GACvBG,EAAgBE,KAGhB/G,EAAQyG,QAAQnH,OAAS,GACzByH,EAAgBN,QAAU,+BAC1BI,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBN,QAAU,GAC1BI,EAAgBE,KAGhB/G,EAAQ2G,OAAOrH,OAAS,GACxByH,EAAgBJ,OAAS,6BACzBE,EAAgBE,GAChBnM,GAAQ,IAGRmM,EAAgBJ,OAAS,GACzBE,EAAgBE,KAGP,IAAVnM,GACCoM,YAAS,aAENpM,EAWsBqM,CAAejO,IAAtC,SAA0C,mCAExC,sBAAK5C,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,8BACA,sBAAKA,UAAU,YAAf,UACI,uBAAOS,MAAM,gBAAgByC,YAAY,sBAAsBI,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAC/D5C,UAAW6J,EAAapJ,MAAMyI,OAAS,EAAI,0BAA4B,eAAgBjG,KAAK,OAAOG,KAAK,QAAQD,GAAG,UACjJ,mBAAGnD,UAAU,cAAb,SAA4B6J,EAAapJ,cAIjD,sBAAKT,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,0BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQS,MAAM,cAAc6C,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAC5B5C,UAAW6J,EAAaJ,OAAOP,OAAS,EAAI,0BAA4B,gBADtG,sBAC4H,UAD5H,qBAC0I,UAD1I,0BAC6J,gBAD7J,0BAEI,wBAAQ7F,MAAM,GAAd,2BACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,uBANJ,IAQA,mBAAGrD,UAAU,cAAb,SAA4B6J,EAAaJ,eAIjD,sBAAKzJ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,2BACA,sBAAKA,UAAU,YAAf,UACI,6BAAUS,MAAM,sBAAsByC,YAAY,4BAA6BI,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAC/E5C,UAAW6J,EAAamB,YAAY9B,OAAS,EAAI,0BAA4B,eAAgBjG,KAAK,WAAWgD,KAAK,KADhJ,sBAC0J,eAD1J,qBAC6K,eAD7K,mBAC8L,eAD9L,IAEA,mBAAGjG,UAAU,cAAb,SAA4B6J,EAAamB,oBAIjD,sBAAKhL,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,4BACA,sBAAKA,UAAU,YAAf,UACI,uBAAOS,MAAM,eAAeqQ,IAAI,IAAI5N,YAAY,6BAA6BI,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAAI5C,UAAW6J,EAAayG,KAAKpH,OAAS,EAAI,0BAA4B,eAAgBjG,KAAK,SAASG,KAAK,OAAOD,GAAG,SAClO,mBAAGnD,UAAU,cAAb,SAA4B6J,EAAayG,aAIjD,sBAAKtQ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,+BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQS,MAAM,mBAAmB6C,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAAI5C,UAAW6J,EAAawG,QAAQnH,OAAS,EAAI,0BAA4B,eAAgB9F,KAAK,WAAjK,sBAAiL,WAAjL,0BAAqM,gBAArM,0BACI,wBAAQC,MAAM,GAAd,qCACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,uBAJJ,IAMA,mBAAGrD,UAAU,cAAb,SAA4B6J,EAAawG,gBAIjD,sBAAKrQ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,6BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQS,MAAM,iBAAiB6C,SAAU,SAACV,GAAD,OAAO0B,EAAa1B,IAAI5C,UAAW6J,EAAa0G,OAAOrH,OAAS,EAAI,0BAA4B,eAAgB9F,KAAK,UAA9J,sBAA6K,UAA7K,0BAAgM,gBAAhM,0BACI,wBAAQC,MAAM,GAAd,mCACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,yBAJJ,IAMA,mBAAGrD,UAAU,cAAb,SAA4B6J,EAAa0G,eAIjD,sBAAKvQ,UAAU,iBAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,wBAAQiD,KAAK,SAASxC,MAAM,SAAST,UAAU,kBAA/C,sBAEJ,qBAAKA,UAAU,WAAf,SACI,wBAAQiD,KAAK,SAASxC,MAAM,SAASY,QApM9B,2CAoM+CrB,UAAU,iBAAhE,sBAEJ,qBAAKA,UAAU,2B,kCC7LtBqR,GAAb,kDAEI,WAAY1Q,GAAQ,IAAD,8BACf,cAAMA,IAyBVyI,cAAgB,SAACC,GACb,EAAKC,SAAL,eACKD,EAAM9F,OAAOH,KAAOiG,EAAM9F,OAAOF,SA5BvB,EAwCnBkG,eAAiB,SAACF,GACd,IAAIG,GAAU,EAKd,OAJK,EAAK5C,MAAM6C,SACZ,EAAKH,SAAS,CAAEgI,gBAAiB,4BACjC9H,GAAU,GAEPA,GA9CQ,EAiDnB+H,qBAAuB,SAAClI,GACtB,IAAIG,GAAU,EAKd,OAJK,EAAK5C,MAAM4K,mBACZ,EAAKlI,SAAS,CAAEmI,sBAAuB,kCACvCjI,GAAU,GAEPA,GAvDU,EA0DnBkI,kBAAoB,SAACrI,GACjB,IAAIG,GAAU,EAad,OAZK,EAAK5C,MAAM+K,YACZ,EAAKrI,SAAS,CAAEsI,eAAgB,2BAChCpI,GAAU,IAIF,IAFE,IAAIqI,OAAO,cACFnN,KAAK,EAAKkC,MAAM+K,YAErC,EAAKrI,SAAS,CACZE,SAAQ,EACRoI,eAAgB,mEAGbpI,GAxEQ,EA2EnBsI,oBAAsB,SAACzI,GAUrB,OANY,IAFI,6NACO3E,KAAK,EAAKkC,MAAMmL,cAErC,EAAKzI,SAAS,CACZE,SAAQ,EACRwI,iBAAkB,iCANR,GA5EG,EAwFnBC,gBAAkB,SAAC5I,GACjB,IAAIG,GAAU,EACT,EAAK5C,MAAMsL,UACZ,EAAK5I,SAAS,CAAE6I,aAAc,yBAC9B3I,GAAU,GAUd,OANY,IAFI,gEACO9E,KAAK,EAAKkC,MAAMsL,UAErC,EAAK5I,SAAS,CACZE,SAAQ,EACR2I,aAAc,iCAGX3I,GAtGU,EAyGnB4I,wBAA0B,SAAC/I,IAKX,IAFI,8GACO3E,KAAK,EAAKkC,MAAMyL,kBAErC,EAAK/I,SAAS,CACZE,SAAQ,EACR8I,qBAAsB,mCAjHX,EAgInBC,eAAiB,SAAClJ,GAUhB,OANY,IAFI,2CACO3E,KAAK,EAAKkC,MAAM4L,SAErC,EAAKlJ,SAAS,CACZE,SAAQ,EACRiJ,YAAa,kDANH,GAjIG,EA6InBC,mBAAqB,SAACrJ,GAUpB,OANY,IAFI,2CACO3E,KAAK,EAAKkC,MAAM+L,aAErC,EAAKrJ,SAAS,CACZE,SAAQ,EACRoJ,gBAAiB,uDANP,GA9IG,EA0JnBC,wBAA0B,SAACxJ,GACzB,IAAIG,GAAU,EAKd,OAJK,EAAK5C,MAAMkM,kBACZ,EAAKxJ,SAAS,CAAEyJ,qBAAsB,iCACtCvJ,GAAU,GAEPA,GAhKU,EAmKnBkB,aAAe,SAACrB,GACd,IAAIG,GAAU,EA4Bd,OA3BK,EAAKD,mBACNC,GAAU,GAET,EAAK+H,yBACN/H,GAAU,GAET,EAAKkI,sBACNlI,GAAU,GAET,EAAKsI,wBACNtI,GAAU,GAET,EAAKyI,oBACRzI,GAAU,GAEP,EAAK4I,4BACR5I,GAAU,GAEP,EAAK+I,mBACR/I,GAAU,GAEP,EAAKkJ,uBACRlJ,GAAU,GAEP,EAAKqJ,4BACRrJ,GAAU,GAELA,GAhMU,EAmMnBxG,SAAW,SAACqG,GACRA,EAAMvG,iBACF,EAAK4H,gBACL/F,MAAM,iCAnMV,EAAKiC,MAAQ,CACToM,WAAY,GACZ1B,gBAAiB,GACjBE,iBAAkB,GAClBC,sBAAuB,GACvBE,UAAW,GACXC,eAAgB,GAChBG,YAAa,GACbC,iBAAkB,GAClBE,QAAS,GACTC,aAAc,GACdK,OAAQ,GACRC,YAAa,GACbQ,oBAAqB,GACrBN,WAAY,GACZC,gBAAiB,GACjBE,gBAAiB,GACjBC,qBAAsB,GACtBG,QAAS,GACTC,OAAQ,IAtBG,EAFvB,iDAkCI,SAAeC,GACbrI,KAAKzB,SAAS,CAAE4J,QAASE,MAnC/B,0BAsCI,SAAcA,GACZrI,KAAKzB,SAAS,CAAE6J,OAAQC,MAvC9B,oBA4MI,WAAU,IAAD,OACL,OACI,sBAAKpT,UAAU,sCAAf,UACI,qBAAKA,UAAU,wBAAf,SACG,cAAC,EAAD,CAAYS,MAAM,aAAauE,SAAS,OAE3C,qBAAKhF,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,cAAC8B,EAAA,EAAD,CAAK9B,UAAU,qBAAf,SACI,cAAC+B,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAD,WACI,eAAC9C,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,yBACA,cAAC4E,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,aAAaF,YAAY,oBAAoBG,MAAO0H,KAAKnE,MAAMoM,WAAY1P,SAAUyH,KAAK3B,cACrH+B,OAAQJ,KAAKsI,mBACbjI,UAAaL,KAAKnE,MAAM0K,kBAC5B,cAAC1M,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAM0K,uBAKxB,cAACvP,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,0BACA,cAAC4E,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,mBAAmBF,YAAY,0BAA0BG,MAAO0H,KAAKnE,MAAM4K,iBAAkBlO,SAAUyH,KAAK3B,cACvI+B,OAAQJ,KAAKwG,qBACbnG,UAAaL,KAAKnE,MAAM6K,wBAC5B,cAAC7M,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAM6K,gCAK5B,eAAC3P,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,wBACA,cAAC4E,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,YAAYF,YAAY,mBAAmBG,MAAO0H,KAAKnE,MAAM+K,UAAWrO,SAAUyH,KAAK3B,cAClH+B,OAAQJ,KAAK2G,kBACbtG,UAAWL,KAAKnE,MAAMgL,iBAC1B,cAAChN,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAMgL,sBAKxB,cAAC7P,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,sBACA,cAACD,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,cAAcF,YAAY,qBAAqBG,MAAO0H,KAAKnE,MAAMmL,YAAazO,SAAUyH,KAAK3B,cACxH+B,OAAQJ,KAAK+G,oBACb1G,UAAWL,KAAKnE,MAAMoL,mBAC1B,cAACpN,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAMoL,2BAM5B,eAAClQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,mBACA,cAAC4E,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,UAAUF,YAAY,iBAAiBG,MAAO0H,KAAKnE,MAAMsL,QAAS5O,SAAUyH,KAAK3B,cAC5G+B,OAAQJ,KAAKkH,gBACb7G,UAAWL,KAAKnE,MAAMuL,eAC1B,cAACvN,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAMuL,oBAKxB,cAACpQ,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,+BACA,cAACD,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,kBAAkBF,YAAY,qBAAqBG,MAAO0H,KAAKnE,MAAMyL,gBAAiB/O,SAAUyH,KAAK3B,cAChI+B,OAAQJ,KAAKqH,wBACbhH,UAAWL,KAAKnE,MAAM0L,uBAC1B,cAAC1N,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAM0L,+BAM5B,eAACxQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,qBACA,cAACD,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,SAASF,YAAY,oBAAoBG,MAAO0H,KAAKnE,MAAM4L,OAAQlP,SAAUyH,KAAK3B,cAC7G+B,OAAQJ,KAAKwH,eACbnH,UAAWL,KAAKnE,MAAM6L,cAC1B,cAAC7N,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAM6L,mBAKxB,cAAC1Q,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,mCACA,cAACD,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,sBAAsBF,YAAY,6BAA6BG,MAAO0H,KAAKnE,MAAMqM,oBAAqB3P,SAAUyH,KAAK3B,cAChJ+B,OAAQJ,KAAKuI,sCAQ7B,eAACxR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,0BACA,cAACD,EAAA,EAAKsC,QAAN,CAAcjE,KAAK,OAAOG,KAAK,aAAaF,YAAY,oBAAoBG,MAAO0H,KAAKnE,MAAM+L,WAAYrP,SAAUyH,KAAK3B,cACrH+B,OAAQJ,KAAK2H,mBACbtH,UAAWL,KAAKnE,MAAMgM,kBAC1B,cAAChO,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAMgM,uBAIxB,cAAC7Q,EAAA,EAAD,UACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,8BACA,eAAC4E,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,SAASmB,KAAK,kBAAkBF,YAAY,yBAAyBG,MAAO0H,KAAKnE,MAAMkM,gBAAiBxP,SAAUyH,KAAK3B,cACpI+B,OAAQJ,KAAK8H,wBACbzH,UAAWL,KAAKnE,MAAMmM,qBAF1B,UAGM,oDACF,wBAAQ1P,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,0BAEJ,cAACuB,EAAA,EAAKsC,QAAQmE,SAAd,CAAuBpI,KAAK,UAA5B,SACK8H,KAAKnE,MAAMmM,+BAQ5B,cAACjR,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,eAAC6C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,CAAY7E,UAAU,WAAtB,sBACA,cAAC,KAAD,CAAiBiC,GAAG,SAASmB,KAAK,UAAUmQ,mBAAmB,iBAAiBlQ,MAAO0H,KAAKnE,MAAMsM,QACjF5P,SAAU,SAACF,EAAMC,GAAP,OAAiB,EAAKmQ,cAAcpQ,EAAMC,SAIzE,eAACuB,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,sBACA,cAAC,KAAD,CACOqO,QAASnI,KAAKnE,MAAMsM,QAASO,iBAAiB,sBAAsBF,mBAAmB,gBACvFtR,GAAG,SAASmB,KAAK,SAASC,MAAO0H,KAAKnE,MAAMuM,OAAQ7P,SAAU,SAACF,EAAMC,GAAP,OAAiB,EAAKqQ,aAAatQ,EAAKC,cAMzH,cAACvB,EAAA,EAAD,CAAK9B,UAAU,4BAAf,SACI,cAACwD,EAAA,EAAD,CAAQxD,UAAU,iBAAiBqB,QAAS0J,KAAK/H,SAAjD,wCAlXxC,GAA+BsI,aAiYhBC,eAAW8F,ICnYbsC,GAAb,kDAEE,WAAYhT,GAAQ,IAAD,8BACjB,cAAMA,IAsBR4L,QAAU,WACR,EAAKnH,KAAO,CAAC,CACXwO,WAAY,aACZC,aAAc,mBACdC,UAAW,mBACXC,QAAS,uBAEX,CACEH,WAAY,eACZC,aAAc,UACdC,UAAW,oBACXC,QAAS,qBAEX,CACEH,WAAY,cACZC,aAAc,MACdC,UAAW,mBACXC,QAAS,wBAxCM,EA2CnBC,gBAAkB,SAACpR,GACjBA,EAAEE,iBACF,EAAKnC,MAAM0B,QAAQU,KAAK,CAAEkR,SAAU,gBA3CpC,EAAKrN,MAAQ,GACb,EAAKoN,gBAAkB,EAAKA,gBAAgBE,KAArB,iBAEvB,EAAK/O,QAAU,CACb,CAAEzD,OAAQ,cAAemJ,SAAU,cACnC,CAAEnJ,OAAQ,eAAgBmJ,SAAU,gBACpC,CAAEnJ,OAAQ,aAAcmJ,SAAU,aAClC,CAAEnJ,OAAQ,QAASmJ,SAAU,WAC7B,CACEnJ,OAAQ,SAAUmJ,SAAU,MAC5BwB,KAAM,cAAGrE,IAAH,OACJ,sBAAKhI,UAAU,4BAAf,UACE,cAACwD,EAAA,EAAD,CAAQxD,UAAU,mBAAmBmU,MAAM,QAA3C,kBACA,cAAC3Q,EAAA,EAAD,CAAQxD,UAAU,mBAAmBmU,MAAM,QAA3C,kBACA,cAAC3Q,EAAA,EAAD,CAAQxD,UAAU,gBAAgBmU,MAAM,QAAxC,0BAIR,EAAK5H,UApBY,EAFrB,0CAkDE,WACE,OACE,8BACE,sBAAKvM,UAAU,mCAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,CAAYS,MAAM,UAAUuE,SAAS,OAEvC,qBAAKhF,UAAU,yBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC8B,EAAA,EAAD,CAAK9B,UAAU,mBAAf,SACE,cAAC+B,EAAA,EAAD,UACE,cAACyB,EAAA,EAAD,CAAQxD,UAAU,iBAAiBiD,KAAK,SAASkR,MAAM,QAAQ9S,QAAS0J,KAAKiJ,gBAA7E,yBAGJ,cAAClS,EAAA,EAAD,CAAK9B,UAAU,uBAAf,SACE,cAAC+B,EAAA,EAAD,UACE,cAAC,EAAD,CAAWoD,QAAS4F,KAAK5F,QAASC,KAAM2F,KAAK3F,yBAlE/D,GAA6BkG,aA6EdC,eAAWoI,I,SCiLXS,I,OAhQM,WAEjB,IAAMjP,EAAU,CACZ,CAAEzD,OAAQ,IAAKmJ,SAAU,MACzB,CAAEnJ,OAAQ,UAAWmJ,SAAU,WAC/B,CAAEnJ,OAAQ,SAAUmJ,SAAU,UAC9B,CAAEnJ,OAAQ,eAAgBmJ,SAAU,eACpC,CACInJ,OAAQ,UAAWmJ,SAAU,MAC7BwB,KAAM,cAAGrE,IAAH,OACF,sBAAKhI,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,wBAAQA,UAAU,mBAAmBqB,QAAS,kBAAMgT,GAAU,IAA9D,0BAIJ,qBAAKrU,UAAU,WAAf,SACI,wBAAQA,UAAU,gBAAgBqB,QAASiL,EAA3C,4BAqCpB,MAAwB1L,mBAAS,IAAjC,mBAAOwE,EAAP,KAAamH,EAAb,KACAC,qBAAU,WACND,EAAQ,CACJ,CACI+H,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,IACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,KACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,KACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,KACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,WAEZ,CACI+D,GAAI,KACJ1K,QAAS,QACTH,OAAQ,aACR8K,YAAa,aACbhE,OAAQ,eAGjB,IAEH,MAAsC3P,mBAAS,CAC3C0T,GAAI,GACJ1K,QAAS,GACTH,OAAQ,GACR8K,YAAa,GACbhE,OAAQ,KALZ,mBAAOiE,EAAP,KAQMlI,GARN,KAQmB,SAAC8B,GAChB,GAAIW,OAAOC,QAAQ,iBAAkB,CACjC,IAAIC,EAAO,YAAO7J,GAClB6J,EAAQG,OAAOoF,EAAY3T,MAAO,GAClCK,QAAQC,IAAI8N,GACZ1C,EAAQ0C,MAIhB,EAA4BrO,oBAAS,GAArC,mBAAO6T,EAAP,KAAeJ,EAAf,KAEA,OACI,sBAAKrU,UAAU,2CAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYS,MAAM,mBAEtB,qBAAKT,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,eAAC8B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK2S,GAAI,GAAT,SACI,qBAAK1U,UAAU,4BAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,aACf,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,qBAAKA,UAAU,4BAAf,SACI,wBAAQA,UAAU,iBAAiBiD,KAAK,SAASkR,MAAM,QAAQ9S,QAAS,kBAAMgT,GAAU,IAAxF,0BAGR,eAACzE,EAAA,EAAD,CACI+E,KAAK,KACL9E,KAAM4E,EACN3E,OAAQ,kBAAMuE,GAAU,IACxBO,kBAAgB,+BAJpB,UAMI,cAAChF,EAAA,EAAMlO,OAAP,CAAcqO,aAAW,EAAzB,SACI,cAACH,EAAA,EAAML,MAAP,CAAapM,GAAG,+BAAhB,mCAIJ,cAACyM,EAAA,EAAMN,KAAP,UACI,eAAC1K,EAAA,EAAD,CAAMzB,GAAG,eAAT,UAEI,uBAAOF,KAAK,SAASG,KAAK,iBAAiBD,GAAG,iBAAiBE,MAAM,oBACrE,uBAAOJ,KAAK,SAASG,KAAK,iBAAiBD,GAAG,iBAAiBE,MAAM,2BACrE,uBAAOJ,KAAK,SAASG,KAAK,aAAaD,GAAG,aAAaE,MAAM,gBAC7D,uBAAOJ,KAAK,SAASG,KAAK,aAAaD,GAAG,aAAaE,MAAM,6BAC7D,uBAAOJ,KAAK,SAASG,KAAK,UAAUD,GAAG,UAAUE,MAAM,gBAEvD,eAACuB,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,sBACA,eAACD,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,SAAjB,UACI,+CACA,+CACA,+CACA,+CACA,qDAIR,eAAC2C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,qBACA,eAACD,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,SAAjB,UACI,8CACA,8CACA,8CACA,+CACA,qDAIR,eAAC2C,EAAA,EAAKqC,MAAN,WACI,cAACrC,EAAA,EAAKC,MAAN,8BACA,cAACD,EAAA,EAAKsC,QAAN,CAAcjF,GAAG,WAAWmB,KAAK,UAAU6C,KAAM,EAAG9C,GAAG,eAG3D,cAACK,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,SAASE,GAAG,SAASE,MAAM,OAAOhC,QAjNjH,SAAmBuB,GACfA,EAAEE,iBAgBF+R,KAAQC,KAAK,sBAAuB,mBAbnB,CAEbC,eAAgB,kBAChBC,eAAgB,yBAGhBhC,WAAY,cACZiC,WAAY,2BAGZ9F,QAAS,aAGuD,8BAC/DxC,MAAK,SAAUuI,GACZvQ,MAAM,cACNzD,QAAQC,IAAI,WAAY+T,EAAS3E,OAAQ2E,EAASC,SAEnD,SAAUC,GACTzQ,MAAM,UAAYyQ,GAClBlU,QAAQC,IAAI,YAAaiU,OAyLW,oCAU5B,cAACrT,EAAA,EAAD,CAAK2S,GAAI,GAAT,SACI,cAAC,EAAD,CAAWvP,QAASA,EAASC,KAAMA,kBCxPlDiQ,I,OAAb,kDAEI,WAAY1U,GAAQ,IAAD,8BACf,cAAMA,IAgDV2U,YAAY,SAAC1S,GACT,EAAK0G,SAAS,CAACiM,SAAS,UAhDxB,EAAK3O,MAAM,CACX2O,SAAW,QACXpQ,QAAU,CACN,CAAEzD,OAAQ,iBAAkBmJ,SAAU,eACtC,CAAEnJ,OAAQ,iBAAkBmJ,SAAU,iBACtC,CAAEnJ,OAAQ,WAAYmJ,SAAU,WAChC,CAAEnJ,OAAQ,cAAemJ,SAAU,cACnC,CAAEnJ,OAAQ,eAAgBmJ,SAAU,eACpC,CAAEnJ,OAAQ,iBAAkBmJ,SAAU,iBACtC,CAAEnJ,OAAQ,SAAUmJ,SAAU,UAC1BwB,KAAM,cAAEmJ,QAAF,OAAgB,gCAAK,cAAChS,EAAA,EAAD,CAASxD,UAAU,mBAAnB,kBAAmD,cAACwD,EAAA,EAAD,CAASxD,UAAU,gBAAnB,0BAGvFoF,KAAK,CAAC,CACLqQ,YAAa,UACbC,cAAe,aACfC,QAAS,aACTC,WAAW,aACXC,YAAY,qBACZC,cAAc,UAEhB,CACEL,YAAa,UACbC,cAAe,aACfC,QAAS,aACTC,WAAW,aACXC,YAAY,UACZC,cAAc,QAEhB,CACEL,YAAa,UACbC,cAAe,aACfC,QAAS,aACTC,WAAW,cACXC,YAAY,oBACZC,cAAc,UAEhB,CACEL,YAAa,UACbC,cAAe,aACfC,QAAS,aACTC,WAAW,qBACXC,YAAY,oBACZC,cAAc,YA7CC,EAFvB,0CAuDA,WACI,OAEA,sBAAK9V,UAAU,2BAAf,UACI,qBAAKA,UAAU,wBAAf,SACG,cAAC,EAAD,CAAYS,MAAM,qBAAqBuE,SAAS,OAEnD,sBAAKhF,UAAU,yBAAf,UACI,qBAAKA,UAAU,iBACf,cAAC8B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACA,uBAAQkB,KAAK,OAAOC,YAAY,SAASE,KAAK,sBAIlD,cAAC,EAAD,CAAW+B,QAAS4F,KAAKnE,MAAMzB,QAASC,KAAM2F,KAAKnE,MAAMxB,KAAMC,SAAS,QAAQC,YAAY,oBAtExG,GAAuCgG,cA4ExBC,eAAW8J,IC3DX,I,OAAA,IAtBf,kIACI,WAAkBU,GAAlB,eAAAlT,EAAA,sEACyB2I,IAAMI,KAAK,yBAA0B,CAAE,YAAemK,IAD/E,cACUrK,EADV,yBAEWA,GAFX,2CADJ,0HAMI,WAAqBvI,GAArB,eAAAN,EAAA,sEACyB2I,IAAMK,IAAI,4BAA6B,CAAE,GAAM1I,IADxE,cACUuI,EADV,yBAEWA,GAFX,2CANJ,sHAWI,WAAiBvI,GAAjB,eAAAN,EAAA,sEACyB2I,IAAMO,OAAO,6BAA+B5I,GADrE,cACUuI,EADV,yBAEWA,GAFX,2CAXJ,oHAgBI,WAAesK,GAAf,eAAAnT,EAAA,sEACyB2I,IAAMI,KAAK,0BAA2BoK,GAD/D,cACUtK,EADV,yBAEWA,GAFX,2CAhBJ,gECYauK,GAAb,kDAEI,WAAYtV,GAAQ,IAAD,uBACf,cAAMA,IAyBVyI,cAAgB,SAACC,GACb,EAAKC,SAAL,eACKD,EAAM9F,OAAOH,KAAOiG,EAAM9F,OAAOF,SA5BvB,EA4FnB6S,SAAW,SAAC7M,GACRA,EAAMvG,iBACN,IAAIkT,EAAW,CACXvV,MAAO,EAAKmG,MAAM6H,QAClBsH,KAAM,EAAKnP,MAAMmP,MAErBI,GAAgBC,SAASJ,GAAUrJ,MAAK,SAAAuI,GACb,KAAnBA,EAAS3E,SACT,EAAKjH,SAAS,CAAEmF,QAAS,KACzB,EAAK4H,WAAW,EAAKzP,MAAMmP,WArGpB,EA8GnBO,gBAAkB,SAACjN,GACf,IAAIkN,EAAetK,IAAO,EAAKrF,MAAMmP,KAAM,cAAcS,SAAS,EAAG,OAAOrK,OAAO,cACnF,EAAK7C,SAAS,CAAEyM,KAAMQ,IACtB,EAAKF,WAAWE,IAjHD,EAwHnBE,YAAc,SAACpN,GACX,IAAIqN,EAAWzK,IAAO,EAAKrF,MAAMmP,KAAM,cAAcjH,IAAI,EAAG,OAAO3C,OAAO,cAC1E,EAAK7C,SAAS,CAAEyM,KAAMW,IACtB,EAAKL,WAAWK,IAxHhB,IAAMC,EAAc1K,MAASE,OAAO,cAHrB,OAIf,EAAKvF,MAAQ,CACTgQ,cAAe,GACfC,gBAAiB,GACjBd,KAAMY,EACNlI,QAAS,IAGb,EAAKqI,KAAO,CACRrW,MAAO,GACP8P,QAAQ,EACRwF,KAAMY,GAdK,EAFvB,qDAoBI,WACI5L,KAAKsL,WAAWtL,KAAKnE,MAAMmP,QArBnC,wBAwCI,SAAWA,GAAO,IAAD,OACbI,GAAgBY,YAAYhB,GAAMpJ,MAAK,SAAAuI,GACnC,GAAwB,MAApBA,EAAS3E,OACT,GAAI2E,EAAS9P,MAAQ8P,EAAS9P,KAAKsG,QAAUwJ,EAAS9P,KAAKsG,OAAOxC,OAAQ,CACtE,IAAI8N,EAAe,GACfC,EAAiB,GACrB/B,EAAS9P,KAAKsG,OAAOwL,SAAQ,SAAAlP,GACrBA,GAAqB,GAAdA,EAAIuI,OACXyG,EAAajU,KAAKiF,GAElBiP,EAAelU,KAAKiF,MAG5B,EAAKsB,SAAS,CAAEsN,cAAeI,IAC/B,EAAK1N,SAAS,CAAEuN,gBAAiBI,SAEjC,EAAK3N,SAAS,CAAEsN,cAAe,KAC/B,EAAKtN,SAAS,CAAEuN,gBAAiB,UAzDrD,8BAoEI,SAAiBM,GAAU,IAAD,OACtBhB,GAAgBiB,eAAeD,EAAQrL,KAAKa,MAAK,SAAAuI,GACtB,KAAnBA,EAAS3E,QACT,EAAK8F,WAAW,EAAKzP,MAAMmP,WAvE3C,4BAiFI,SAAeoB,GAAU,IAAD,OACpBhB,GAAgB7J,WAAW6K,EAAQrL,KAAKa,MAAK,SAAAuI,GAClB,KAAnBA,EAAS3E,QACT,EAAK8F,WAAW,EAAKzP,MAAMmP,WApF3C,oBAgII,WAAU,IAAD,OACL,OACI,sBAAK/V,UAAU,sCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYS,MAAM,YAAYuE,SAAS,OAE3C,qBAAKhF,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,eAACC,EAAA,EAAD,CAAWD,UAAU,qBAArB,UACI,cAAC8B,EAAA,EAAD,CAAK9B,UAAU,WAAf,SACI,eAAC+B,EAAA,EAAD,CAAK/B,UAAU,eAAf,UACI,sBAAMA,UAAU,gBAAgBqB,QAAS0J,KAAKuL,gBAA9C,SACI,mBAAGtW,UAAU,0BAEjB,+BACK+K,KAAKnE,MAAMmP,OAEhB,sBAAM/V,UAAU,gBAAgBqB,QAAS0J,KAAK0L,YAA9C,SACI,mBAAGzW,UAAU,gCAIzB,eAAC8B,EAAA,EAAD,CAAK9B,UAAU,UAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBAAOiD,KAAK,OAAOoU,YAAY,WAAWjU,KAAK,UAAUC,MAAO0H,KAAKnE,MAAM6H,QAASnL,SAAUyH,KAAK3B,cAAepJ,UAAU,oBAEhI,qBAAKA,UAAU,aAAf,SACI,cAACwD,EAAA,EAAD,CAAQxD,UAAU,4BAA4BqB,QAAS0J,KAAKmL,SAA5D,sBAGR,eAACpU,EAAA,EAAD,CAAK9B,UAAU,mBAAf,UACI,cAAC+B,EAAA,EAAD,CAAKC,GAAI,GAAIsV,GAAI,EAAjB,SACI,8BACKvM,KAAKnE,MAAMiQ,gBAAgBvP,KAAI,SAAAU,GAAG,OAC/B,cAACqH,EAAA,EAAD,CAAMrP,UAAU,0BAAhB,SACI,eAAC8B,EAAA,EAAD,CAAK9B,UAAU,YAAf,UACI,cAAC+B,EAAA,EAAD,CAAK2S,GAAI,EAAG1S,GAAI,EAAGhC,UAAU,oBAA7B,SACI,uBAAOiD,KAAK,WAAWsU,QAASvP,EAAIuI,OAAQlP,QAAS,kBAAM,EAAKmW,iBAAiBxP,QAErF,cAACjG,EAAA,EAAD,CAAK2S,GAAI,EAAG1S,GAAI,EAAGhC,UAAU,oBAA7B,SACI,cAACqP,EAAA,EAAKC,KAAN,UACI,cAACD,EAAA,EAAKE,MAAN,UAAavH,EAAIvH,YAGzB,cAACsB,EAAA,EAAD,CAAK2S,GAAI,EAAG1S,GAAI,EAAGhC,UAAU,oBAA7B,SACI,cAACwD,EAAA,EAAD,CAAQxD,UAAU,iBAAiBqB,QAAS,kBAAM,EAAKoW,eAAezP,IAAtE,kCAOxB,cAACjG,EAAA,EAAD,CAAKC,GAAI,GAAIsV,GAAI,EAAjB,SACI,8BACKvM,KAAKnE,MAAMgQ,cAActP,KAAI,SAAAU,GAAG,OAC7B,cAACqH,EAAA,EAAD,CAAMrP,UAAU,wBAAhB,SACI,cAACqP,EAAA,EAAKC,KAAN,UACI,cAACD,EAAA,EAAKE,MAAN,CAAYvP,UAAU,sBAAtB,SAA6CgI,EAAIvH,oCAzLrG,GAA8B6K,aAyMfC,eAAW0K,I,2BCjNX,SAASyB,KAEpB,IAAMC,EAAS,CAAC,CAAElX,MAAO,gBAAiBsV,KAAM,IAAI5L,OAMpD,OACI,gCACI,cAAC,EAAD,CAAY1J,MAAM,aAClB,cAAC,KAAD,CACImX,YAAY,eACZC,QAAS,CAACC,KAAeC,MACzBJ,OAAQA,EACRK,UAXY,SAACC,GACLC,OAAO,4BAA4BD,EAAIE,eCWhD,SAASC,KACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,UACI,cAACnW,EAAD,QAGR,cAAC,IAAD,CAAOmW,KAAK,SAAZ,SACI,cAAC,EAAD,UACI,cAAClW,EAAD,QAGR,cAAC,IAAD,CAAOkW,KAAK,YAAZ,SACI,cAAC,EAAD,UACI,cAAC5U,EAAD,QAGR,cAAC,IAAD,CAAO4U,KAAK,aAAZ,SACI,cAAC,EAAD,UACI,cAACrT,EAAD,QAGR,cAAC,IAAD,CAAOoT,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,UACI,cAACC,GAAD,QAIR,cAAC,IAAD,CAAOD,KAAK,YAAZ,SACI,cAAC,EAAD,UACI,cAACtM,GAAD,QAIR,cAAC,IAAD,CAAOsM,KAAK,sBAAZ,SACI,cAAC,EAAD,UACI,cAAC,EAAD,QAIR,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,UACI,cAACZ,GAAD,QAGR,cAAC,IAAD,CAAOY,KAAK,IAAZ,SACI,6DCzGpB,IAYeE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/L,MAAK,YAAkD,IAA/CgM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASnR,OACP,cAAC,IAAMoR,WAAP,UACE,cAACb,GAAD,MAEFc,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ceff6965.chunk.js","sourcesContent":["/* Author: Vishal Sancheti */\r\n\r\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport \"../styles/AppNavbar.scss\"\r\n\r\nexport default function AppNavbar(){\r\n    return (\r\n        <Navbar className=\"app-nav-bar-container\">\r\n            <Container>\r\n                <Navbar.Brand className=\"app-nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"login\">Login</Nav.Link>\r\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"register\">Register</Nav.Link>\r\n                </Nav>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}","/* Author: Vishal Sancheti */\r\n\r\nimport React from 'react';\r\nimport AppNavbar from \"../components/AppNavbar\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\n// Page Wrapper for Application Pages\r\nconst AppLayout =({children}) =>{\r\n    return(\r\n        <>\r\n            <header>\r\n                <AppNavbar/>\r\n            </header>\r\n            <main>\r\n                <Container>\r\n                    {children}\r\n                </Container>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppLayout;","/* Author: Vishal Sancheti */\r\n\r\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport \"../styles/DashboardNavbar.scss\";\r\n\r\nexport default function DashboardNavbar(){\r\n    return (\r\n        <Navbar className=\"nav-bar-container\">\r\n            <Container>\r\n                <Navbar.Brand className=\"nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link title=\"Notification\" className=\"nav-bar-link\" href=\"#notification\">\r\n                        <i className=\"fas fa-bell\"/>\r\n                    </Nav.Link>\r\n                    <Nav.Link title=\"Profile\" className=\"nav-bar-link\" href=\"#profile\">\r\n                        <i className=\"fas fa-user\"/>\r\n                    </Nav.Link>\r\n                    <Nav.Link title=\"Log Out\" className=\"nav-bar-link\" href=\"/\">\r\n                        <i className=\"fas fa-sign-out-alt\"/>\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}","/* Author: Vishal Sancheti */\r\n\r\nimport '../styles/style.scss';\r\nimport React, { useState } from 'react';\r\nimport {Collapse} from 'react-bootstrap';\r\nimport { Drawer } from 'react-bootstrap-drawer';\r\nimport '../styles/DashboardSidebar.scss';\r\n\r\nexport default function Sidebar(props) {\r\n    const [index, setIndex] = useState(false);\r\n\r\n    // let index = 0;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleToggle = () => setOpen(!open);\r\n\r\n    const setActiveItem = (index) => {\r\n        console.log(index)\r\n        setIndex(index)\r\n    }\r\n\r\n    return (\r\n        <Drawer { ...props }>\r\n            <Drawer.Toggle onClick={ handleToggle } />\r\n\r\n            <Collapse in={ open }>\r\n                <Drawer.Overflow>\r\n                    <Drawer.ToC>\r\n                        <Drawer.Header href=\"/dashboard\">Dashboard</Drawer.Header>\r\n\r\n                        <Drawer.Nav>\r\n                            <Drawer.Item className={`${index === 0 ? 'nav-item-active' : ''}`} href=\"/clients\" onClick={() => { setActiveItem(0)}}>Clients</Drawer.Item>\r\n                            <Drawer.Item className={`${index === 1 ? 'nav-item-active' : ''}`} href=\"/projects\" onClick={() => { setActiveItem(1)}}>Projects</Drawer.Item>\r\n                            <Drawer.Item className={`${index === 2 ? 'nav-item-active' : ''}`} href=\"/timelogs\" onClick={() => setActiveItem(2)}>Time Logs</Drawer.Item>\r\n                            <Drawer.Item className={`${index === 3 ? 'nav-item-active' : ''}`} href=\"/invoicemanagement\" onClick={() => setActiveItem(3)}>Invoices</Drawer.Item>\r\n                            <Drawer.Item className={`${index === 4 ? 'nav-item-active' : ''}`} href=\"/invoice-generation\" onClick={() => setActiveItem(4)}>Invoice Generation</Drawer.Item>\r\n                            <Drawer.Item className={`${index === 5 ? 'nav-item-active' : ''}`} href=\"/testimonials\" onClick={() => setActiveItem(5)}>Testimonials</Drawer.Item>\r\n                            <span className=\"horizontal-break\"></span>\r\n                            <Drawer.Item className={`${index === 6 ? 'nav-item-active' : ''}`} href=\"/todolist\" onClick={() => setActiveItem(6)}>ToDo</Drawer.Item>\r\n                            <Drawer.Item className={`${index === 7 ? 'nav-item-active' : ''}`} href=\"/calendar\" onClick={() => setActiveItem(7)}>Calendar</Drawer.Item>\r\n                        </Drawer.Nav>\r\n                    </Drawer.ToC>\r\n                </Drawer.Overflow>\r\n            </Collapse>\r\n        </Drawer>\r\n    );\r\n};","/* Author: Vishal Sancheti */\r\n\r\nimport React from 'react';\r\nimport DashboardNavbar from \"../components/DashboardNavbar\";\r\nimport DashboardSidebar from \"../components/DashboardSidebar\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\n\r\n// Page Wrapper for Dashboard Pages\r\nconst DashboardLayout =({children}) =>{\r\n    return(\r\n        <>\r\n            <header>\r\n                <DashboardNavbar/>\r\n            </header>\r\n            <main>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col md={2} as={DashboardSidebar} />\r\n                        <Col md={10}>\r\n                            {children}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardLayout;","import React from 'react';\r\n\r\nexport default function Home(){\r\n    return (\r\n        <div>\r\n            Home Page\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default function Login(){\r\n\r\n    let history = useHistory();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, setUser] = useState();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if(email === \"admin@gmail.com\" && password === \"admin@123\"){\r\n            history.push(\"/dashboard\",email);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\" > <br /> </div>\r\n\r\n            <div className=\"row\" > \r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-6\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <br />\r\n                        <br />\r\n                        <h3>Log in</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input \r\n                                type=\"email\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter email. Eg:'admin@gmail.com' \"\r\n                                id = \"email\"\r\n                                name = \"email\"\r\n                                value={email}\r\n                                onChange={({ target }) => setEmail(target.value)} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input \r\n                                type=\"password\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter password Eg:'admin@123\"\r\n                                id = \"password\"\r\n                                name = \"password\"\r\n                                value={password}\r\n                                onChange={({ target }) => setPassword(target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <div>\r\n                                <input type=\"checkbox\" id=\"customCheck1\" />\r\n                                <label>Remember me</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">Sign in</Button>\r\n                        <p className=\"forgot-password text-right\">\r\n                            Forgot <a href=\"#\">password?</a>\r\n                        </p>\r\n                    </form>\r\n                </div>    \r\n                <div className=\"col-md-3\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nexport default function Register(){\r\n\r\n    let history = useHistory();\r\n\r\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\r\n\r\n    const [registrationInfo, setRegistrationInfo] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const [registrationErrors, setRegistrationErrors] = useState({\r\n        nameError: '',\r\n        emailError: '',\r\n        passwordError: '',\r\n        confirmPasswordError: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\r\n        setRegistrationInfo(newRegistration);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let valid = true;\r\n\r\n        setRegistrationErrors({\r\n            nameError: '',\r\n            emailError: '',\r\n            passwordError: '',\r\n            confirmPasswordError: ''\r\n        })\r\n\r\n        let newRegError = {...registrationErrors};\r\n\r\n        if(registrationInfo.name === \"\"){\r\n            newRegError.nameError = \"Please enter name!!\";\r\n            setRegistrationErrors(newRegError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newRegError.nameError = \"\";\r\n            setRegistrationErrors(newRegError);\r\n        }\r\n\r\n        if(registrationInfo.email === \"\"){\r\n            newRegError.emailError = \"Please enter email!!\";\r\n            setRegistrationErrors(newRegError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            if(!checkEmail.test(registrationInfo.email)){\r\n                newRegError.emailError = \"Email Invalid!!\";\r\n                setRegistrationErrors(newRegError);\r\n                valid = false;\r\n            }\r\n            else{\r\n                newRegError.emailError = \"\";\r\n                setRegistrationErrors(newRegError);\r\n            }\r\n        }\r\n        \r\n\r\n        if(registrationInfo.password === \"\"){\r\n            newRegError.passwordError = \"Please enter password!!\";\r\n            setRegistrationErrors(newRegError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            if(!checkPassword.test(registrationInfo.password)){\r\n                newRegError.passwordError = \"Password Invalid!!\";\r\n                setRegistrationErrors(newRegError);\r\n                valid = false;\r\n            }\r\n            else{\r\n                newRegError.passwordError = \"\";\r\n                setRegistrationErrors(newRegError);\r\n            }\r\n        }\r\n\r\n        if(registrationInfo.confirmPassword === \"\"){\r\n            newRegError.confirmPasswordError = \"Please enter password!!\";\r\n            setRegistrationErrors(newRegError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            if((registrationInfo.password) !==  registrationInfo.confirmPassword){\r\n                newRegError.confirmPasswordError = \"Password does not match!!\";\r\n                setRegistrationErrors(newRegError);\r\n                valid = false;\r\n            }\r\n            else{\r\n                newRegError.confirmPasswordError = \"\";\r\n                setRegistrationErrors(newRegError);\r\n            }\r\n        }\r\n\r\n\r\n        if(valid === true){\r\n            alert(\"Registration Successful!!\");\r\n            history.push(\"/login\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\" > <br /> </div>\r\n            <div className=\"row\" > \r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-6\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <br />\r\n                        <br />\r\n                        <h3>Register</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <Form.Label className=\"required\">Name</Form.Label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter Name\"\r\n                                id = \"name\"\r\n                                name = \"name\"\r\n                                required=\"required\"\r\n                                onChange={(e) => handleChange(e)} \r\n                            />\r\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                        <Form.Label className=\"required\">Email</Form.Label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter email\"\r\n                                id = \"email\"\r\n                                name = \"email\"\r\n                                onChange={(e) => handleChange(e)}\r\n                            />\r\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                        <Form.Label className=\"required\">Password</Form.Label>\r\n                            <input \r\n                                type=\"password\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter password\"\r\n                                id = \"password\"\r\n                                name = \"password\"\r\n                                onChange={(e) => handleChange(e)}\r\n                            />\r\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                        <Form.Label className=\"required\">Confirm Password</Form.Label>\r\n                            <input \r\n                                type=\"password\" \r\n                                className=\"form-control\"\r\n                                name=\"confirmPassword\"\r\n                                id=\"confirmPassword\"\r\n                                placeholder=\"Confirm your password\"\r\n                                onChange={(e) => handleChange(e)}\r\n                            />\r\n                            <p className=\"text-danger\">{registrationErrors.confirmPasswordError}</p>\r\n\r\n                        </div>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Register </Button>\r\n                    </form>\r\n                </div>    \r\n                <div className=\"col-md-3\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","/* Author: Vishal Sancheti */\r\n\r\nimport React from 'react';\r\nimport \"../styles/PageHeader.scss\"\r\nconst PageHeader =(props) =>{\r\n    return(\r\n        <>\r\n            <div className=\"page-header-title\">{props.title}</div>\r\n            <div className=\"page-header-subtitle\">{props.subtitle}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageHeader;","import React from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\n\r\nexport default function Dashboard(){\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <div className=\"page-header-container\">\r\n                <PageHeader title=\"Dashboard\" subtitle=\"\"/>\r\n            </div>\r\n            <div className=\"page-content-container\">\r\n                {/* page content goes here */}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}","/* Author: Vishal Sancheti */\r\n\r\nimport React from 'react';\r\nimport {useGlobalFilter, usePagination, useSortBy, useTable} from \"react-table\";\r\nimport {Col, Form, Row, Table} from \"react-bootstrap\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\nconst Datatable = (props) => {\r\n    //Init\r\n    const columns = props.columns;\r\n    const data = props.data;\r\n    const allowCSV = props.allowCSV == \"false\" ? false : true;\r\n    const allowSearch = props.allowSearch == \"false\" ? false : true;\r\n    const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } },\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        usePagination);\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        setGlobalFilter,\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageSize, globalFilter }\r\n    } = tableInstance;\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                {/*Conditional Display Export CSV Button*/}\r\n                {allowCSV ?\r\n                    (<Col md={{ span: 2 }} className=\"my-2\">\r\n                        <CSVLink data={data} filename={\"export.csv\"} className=\"secondary-button btn btn-secondary\" target=\"_blank\">\r\n                            Export CSV\r\n                        </CSVLink>\r\n                    </Col>)\r\n                    : (<></>)\r\n                }\r\n\r\n                {/*Conditional Display Search Form*/}\r\n                {allowSearch ?\r\n                    (<Col md={{ span: 2, offset: 8 }}>\r\n                        <Form.Group>\r\n                            <Form.Control type=\"search\" placeholder=\"Search\"\r\n                                          value={globalFilter || \"\"}\r\n                                          onChange={e => setGlobalFilter(e.target.value)} />\r\n                        </Form.Group>\r\n                    </Col>)\r\n                    : (<></>)\r\n                }\r\n            </Row>\r\n\r\n            {/*Table*/}\r\n            <div className=\"table-responsive\">\r\n                <Table bordered striped {...getTableProps()}>\r\n                    <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    <span>{column.isSorted ?\r\n                                        column.isSortedDesc ?\r\n                                            ' 🔽': ' 🔼'\r\n                                        : ''}</span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => {\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n\r\n            {/*Filters and Pagination*/}\r\n            <Row>\r\n                <Col>\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" style={{ width: \"100px\" }}\r\n                                      value={pageSize}\r\n                                      onChange={(e) => {\r\n                                          setPageSize(Number(e.target.value));\r\n                                      }}>\r\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    Show {pageSize}\r\n                                </option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                    <Pagination className=\"justify-content-end\">\r\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage}/>\r\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n                        {Array(pageCount).fill().map((v,i) => (\r\n                            <Pagination.Item onClick={() => gotoPage(i)}>{i+1}</Pagination.Item>\r\n                        ))}\r\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}/>\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/*Table Info*/}\r\n            <Row>\r\n                <Col>\r\n                    <span>Showing {pageSize} results of {rows.length} rows</span>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Datatable;\r\n","import React, { Component } from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport Datatable from \"../components/Datatable\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../styles/InvoiceGeneration.scss\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport class InvoiceGeneration extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            client: \"\",\r\n            clientError: \"\",\r\n            startDate: \"\",\r\n            startDateError: \"\",\r\n            endDate: \"\",\r\n            endDateError: \"\",\r\n            hourlyRate: \"\",\r\n            hourlyRateError: \"\",\r\n            project: \"\",\r\n            projectError: \"\"\r\n        }\r\n\r\n        this.columns = [\r\n            { Header: 'Description', accessor: 'description' },\r\n            { Header: 'Time (hours)', accessor: 'hours' },\r\n            { Header: 'Total', accessor: 'total' }\r\n        ];\r\n\r\n        this.dummyData = [];\r\n    }\r\n\r\n    setDummyData() {\r\n        this.dummyData = [\r\n            {\r\n                description: 'Dashboard',\r\n                hours: 5,\r\n                total: this.state.hourlyRate * 5\r\n            },\r\n            {\r\n                description: 'Clients',\r\n                hours: 2,\r\n                total: this.state.hourlyRate * 2\r\n            },\r\n            {\r\n                description: 'Projects',\r\n                hours: 3,\r\n                total: this.state.hourlyRate * 3\r\n            },\r\n            {\r\n                description: 'Invoices',\r\n                hours: 4,\r\n                total: this.state.hourlyRate * 4\r\n            },\r\n            {\r\n                description: 'Invoice Generation',\r\n                hours: 0.5,\r\n                total: this.state.hourlyRate * 0.5\r\n            }\r\n        ]\r\n    }\r\n\r\n    onValueChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    validateClient = (event) => {\r\n        let isValid = true;\r\n        if (!this.state.client) {\r\n            this.setState({ clientError: \"Client is required\" })\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateProject = (event) => {\r\n        let isValid = true;\r\n        if (!this.state.project) {\r\n            this.setState({ projectError: \"Project is required\" })\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateDate = (event) => {\r\n        let isValid = true;\r\n        if (!this.validateStartDate()) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validateEndDate()) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateStartDate = (event) => {\r\n        let isValid = true;\r\n        if (this.state.startDate) {\r\n            const today = new Date()\r\n            const selectedDate = new Date(this.state.startDate)\r\n            if (selectedDate > today) {\r\n                this.setState({ startDateError: \"Start Date cannot be future date\" })\r\n                isValid = false;\r\n            } else {\r\n                this.setState({ startDateError: \"\" })\r\n            }\r\n        } else {\r\n            this.setState({ startDateError: \"Start Date is required\" })\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateEndDate = (event) => {\r\n        let isValid = true;\r\n        const startDate = new Date(this.state.startDate)\r\n        const endDate = new Date(this.state.endDate)\r\n        if (startDate && endDate) {\r\n            if (startDate > endDate) {\r\n                this.setState({ endDateError: \"End Date cannot be less than start date\" })\r\n                isValid = false;\r\n            } else {\r\n                this.setState({ endDateError: \"\" })\r\n            }\r\n        } else {\r\n            this.setState({ endDateError: \"End date is required\" })\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateHourlyRate = (event) => {\r\n        let isValid = true;\r\n        if (!this.state.hourlyRate) {\r\n            this.setState({ hourlyRateError: \"Hourly Rate is required\" })\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateForm = (event) => {\r\n        let isValid = true\r\n        if (!this.validateClient()) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validateProject()) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validateDate()) {\r\n            isValid = false;\r\n        }\r\n        if (!this.validateHourlyRate()) {\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    generateInvoice = (event) => {\r\n        event.preventDefault();\r\n        if (this.validateForm()) {\r\n            this.setDummyData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page-container invoice-generation-container\">\r\n                <div className=\"page-header-container\">\r\n                    <PageHeader title=\"Invoice Generation\" subtitle=\"\" />\r\n                </div>\r\n                <div className=\"page-content-container\">\r\n                    <div className=\"page-content\">\r\n                        <Row className=\"invoice-generation-content\">\r\n                            <Col>\r\n                                <Form>\r\n                                    <div className=\"generate-forms\">\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label className=\"required\">Client</Form.Label>\r\n                                                    <Form.Control as=\"select\" name=\"client\" value={this.state.client} onChange={this.onValueChange}\r\n                                                        onBlur={this.validateClient}\r\n                                                        isInvalid={this.state.clientError}>\r\n                                                        <option>Select Client</option>\r\n                                                        <option value=\"1\">Freelancer dashboard</option>\r\n                                                        <option value=\"2\">SIS</option>\r\n                                                        <option value=\"3\">VM</option>\r\n                                                    </Form.Control>\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {this.state.clientError}\r\n                                                    </Form.Control.Feedback>\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label className=\"required\">Project</Form.Label>\r\n                                                    <Form.Control as=\"select\" name=\"project\" value={this.state.project} onChange={this.onValueChange}\r\n                                                        onBlur={this.validateProject}\r\n                                                        isInvalid={this.state.projectError}>\r\n                                                        <option>Select Project</option>\r\n                                                        <option value=\"1\">Freelancer dashboard</option>\r\n                                                        <option value=\"2\">SIS</option>\r\n                                                        <option value=\"3\">VM</option>\r\n                                                    </Form.Control>\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {this.state.projectError}\r\n                                                    </Form.Control.Feedback>\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <div>\r\n                                                        <Form.Label className=\"required\">Invoice Duration</Form.Label>\r\n                                                    </div>\r\n                                                    <div className=\"inline-date-control\">\r\n                                                        <div className=\"start-date-control\">\r\n                                                            <Form.Control type=\"date\" className=\"start-date\" name=\"startDate\" placeholder=\"Start Date\" value={this.state.startDate} onChange={this.onValueChange}\r\n                                                                onBlur={this.validateDate}\r\n                                                                isInvalid={this.state.startDateError} />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {this.state.startDateError}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </div>\r\n                                                        <div className=\"end-date-control\">\r\n                                                            <Form.Control type=\"date\" name=\"endDate\" placeholder=\"End Date\" value={this.state.endDate} onChange={this.onValueChange}\r\n                                                                onBlur={this.validateDate}\r\n                                                                isInvalid={this.state.endDateError} />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {this.state.endDateError}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label className=\"required\">Hourly Rate</Form.Label>\r\n                                                    <Form.Control type=\"number\" name=\"hourlyRate\" placeholder=\"Hourly Rate\" value={this.state.hourlyRate} onChange={this.onValueChange}\r\n                                                        onBlur={this.validateHourlyRate}\r\n                                                        isInvalid={this.state.hourlyRateError} />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {this.state.hourlyRateError}\r\n                                                    </Form.Control.Feedback>\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <div className=\"generate-buttons\">\r\n                                        <Row className=\"generate-button-container\">\r\n                                            <Button className=\"primary-button\" onClick={this.generateInvoice}>\r\n                                                Generate Invoice\r\n                                            </Button>\r\n                                            <Button className=\"secondary-button\">\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button className=\"secondary-button\">\r\n                                                Download\r\n                                            </Button>\r\n                                            <Button className=\"secondary-button\">\r\n                                                Send\r\n                                            </Button>\r\n                                        </Row>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"data-table-container\">\r\n                            <Col>\r\n                                <Datatable columns={this.columns} data={this.dummyData} allowCSV=\"false\" allowSearch=\"false\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(InvoiceGeneration);","/* Author: Vishal Sancheti */\r\n\r\nimport axios from \"axios\";\r\n\r\nexport class timelogServices{\r\n    // Get all Timelogs\r\n    async list(){\r\n        const result = await axios.get(\"/api/timelogs\");\r\n        return result.data;\r\n    };\r\n\r\n    // Add new Timelog\r\n    async add(data){\r\n        data.projectId = data.project;\r\n        const result = await axios.post(\"/api/timelogs/add\",data);\r\n        return result.data;\r\n    };\r\n\r\n    // Update Timelog\r\n    async update(data){\r\n        data.projectId = data.project;\r\n        console.log(data);\r\n        const result = await axios.put(\"/api/timelogs/update/\"+data._id,data);\r\n        return result.data;\r\n    };\r\n\r\n    // Remove Timelog\r\n    async remove(data){\r\n        const result = await axios.delete(\"/api/timelogs/remove/\"+data._id,data);\r\n        return result.data;\r\n    };\r\n}\r\n\r\nexport default new timelogServices()","import axios from \"axios\";\r\n\r\nexport class projectServices{\r\n    async list(){\r\n        const result = await axios.get(\"/api/projects\");\r\n        return result.data;\r\n    };\r\n}\r\n\r\nexport default new projectServices()","/* Author: Vishal Sancheti */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment'\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport Datatable from \"../components/Datatable\";\r\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\r\n\r\nimport timelogServices from '../services/timelogServices.js'\r\nimport projectServices from '../services/projectServices.js'\r\n\r\nexport default function Timelogs() {\r\n    //Init\r\n    const columns = [\r\n        { Header: 'Project', accessor: 'project.name' },\r\n        { Header: 'Client', accessor: 'project.client' },\r\n        { Header: 'Task', accessor: 'task' },\r\n        { Header: 'Start At', accessor: row => moment(row.startAt).format(\"DD-MM-YYYY hh:mm:ss\")},\r\n        { Header: 'End At', accessor: row => row.endAt ? moment(row.endAt).format(\"DD-MM-YYYY hh:mm:ss\"):\"-\"},\r\n        { Header: 'Action', id: 'action', accessor: 'row',\r\n            Cell: ({ row }) => (<Button className=\"delete-button\" onClick={() => { deleteTask(row) }}>Delete</Button>)\r\n        }\r\n    ];\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        timelogServices.list().then(res => setData(res.data));\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        if(data.length){\r\n            let lastTask = data[0];\r\n            if(lastTask && !lastTask.endAt){\r\n                setTask(lastTask);\r\n                restartTimer(new Date(lastTask.startAt));\r\n            }\r\n        }\r\n    },[data]);\r\n\r\n    // Timer properties and actions\r\n    const [timerState, setTimerState] = useState(0);\r\n    const [timerStart, setTimerStart] = useState(Date.now());\r\n    const [timerEnd, setTimerEnd] = useState(Date.now());\r\n    const [timerString, setTimerString] = useState(\"00 : 00 : 00 : 00\");\r\n    const [timer, setTimer] = useState(0);\r\n    useEffect(() => {\r\n        let centiseconds = (\"0\" + (Math.floor(timer / 10) % 100)).slice(-2);\r\n        let seconds = (\"0\" + (Math.floor(timer / 1000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(timer / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(timer / 3600000)).slice(-2);\r\n        setTimerString(hours + \" : \" + minutes + \" : \" + seconds + \" : \" + centiseconds);\r\n    }, [timer]);\r\n    const startTimer = () => {\r\n        if (timerState === 0) {\r\n            setTimerStart(Date.now() - timer);\r\n            setTimerState(\r\n                setInterval(() => {\r\n                    setTimer(Date.now() - timerStart)\r\n                }, 10)\r\n            );\r\n        }\r\n    };\r\n    const restartTimer = (startAt) => {\r\n        if (timerState === 0) {\r\n            setTimerStart(startAt - timer);\r\n            setTimer(Date.now() - startAt);\r\n            setTimerState(\r\n                setInterval(() => {\r\n                    setTimer( Date.now() - startAt)\r\n                }, 10)\r\n            );\r\n        }\r\n    };\r\n    const stopTimer = () => {\r\n        setTimerEnd(Date.now());\r\n        clearInterval(timerState);\r\n        setTimerState(0);\r\n        setTimer(0);\r\n    };\r\n\r\n    // New Task States\r\n    const [projects, setProjects] = useState([]);\r\n    useEffect(() => {\r\n        projectServices.list().then(res => setProjects(res.data));\r\n    },[]);\r\n    const [task, setTask] = useState({\r\n        project: \"\",\r\n        client: \"\",\r\n        task: \"\",\r\n        startAt: \"\",\r\n        endAt: \"\"\r\n    });\r\n    const [taskError, setTaskError] = useState({\r\n        project: \"\",\r\n        client: \"\",\r\n        task: \"\"\r\n    });\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    //New Task Validation\r\n    const handleChange = (e) => {\r\n        let newTask = { ...task, [e.target.name]: e.target.value };\r\n        setTask(newTask);\r\n    };\r\n    const isTaskValid = () => {\r\n        let valid = true;\r\n        setTaskError({\r\n            project: \"\",\r\n            client: \"\",\r\n            task: \"\"\r\n        });\r\n\r\n        if (!task.project.length > 0) {\r\n            let newTaskError = { ...taskError };\r\n            newTaskError.project = \"Project is required\";\r\n            setTaskError(newTaskError);\r\n            valid = false;\r\n        }\r\n\r\n        if (!task.client.length > 0) {\r\n            let newTaskError = { ...taskError };\r\n            newTaskError.client = \"Client is required\";\r\n            setTaskError(newTaskError);\r\n            valid = false;\r\n        }\r\n\r\n        if (!task.task.length > 0) {\r\n            let newTaskError = { ...taskError };\r\n            newTaskError.task = \"Task is required\";\r\n            setTaskError(newTaskError);\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    };\r\n\r\n    // New Task Modal Event Handle\r\n    const handleModalClose = () => setShowModal(false);\r\n    const handleModalShow = () => setShowModal(true);\r\n\r\n    // New Task Actions\r\n    const startTask = (e) => {\r\n        e.preventDefault();\r\n        if (isTaskValid()) {\r\n            startTimer();\r\n            task.startAt = Date.now();\r\n            timelogServices.add(task).then(res => {task._id = res.data._id; task.project = res.data.project});\r\n            setData(data => [task, ...data]);\r\n            handleModalClose();\r\n        }\r\n    };\r\n    const stopTask = () => {\r\n        stopTimer();\r\n        let newData = [...data];\r\n        newData[0].endAt = Date.now();\r\n        timelogServices.update(newData[0]).then(res => alert(res.message));\r\n        setData(newData);\r\n        setTask({\r\n            project: \"\",\r\n            client: \"\",\r\n            task: \"\",\r\n            startAt: \"\",\r\n            endAt: \"\"\r\n        });\r\n    };\r\n    const deleteTask = (task) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            let newData = [...data];\r\n            timelogServices.remove(newData[0]).then(res => alert(res.message));\r\n            newData.splice(task.index, 1);\r\n            setData(newData);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-container timelogs-container\">\r\n            <div className=\"page-header-container\">\r\n                <PageHeader title=\"Time logs\" subtitle=\"\" />\r\n            </div>\r\n            <div className=\"page-content-container\">\r\n                <div className=\"page-content\">\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md={6}>\r\n                            <Card>\r\n                                <Card.Body className=\"text-center\">\r\n                                    <Card.Title style={{ fontSize: \"2.5rem\" }}>{timerString}</Card.Title>\r\n                                    {timer <= 0 &&\r\n                                        <Button className=\"primary-button btn\" onClick={handleModalShow}>Start</Button>\r\n                                    }\r\n                                    {timer > 0 &&\r\n                                        <>\r\n                                            <Card.Subtitle className=\"mb-2 text-muted\">Task: {task.task}</Card.Subtitle>\r\n                                            <Button className=\"delete-button btn\" onClick={stopTask}>Stop</Button>\r\n                                        </>\r\n                                    }\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Modal show={showModal} onHide={handleModalClose}>\r\n                        <Form onSubmit={(e) => startTask(e)}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>New Task</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body className=\"show-grid\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Client</Form.Label>\r\n                                                <Form.Control as=\"select\" name=\"client\"\r\n                                                    onChange={(e) => handleChange(e)}\r\n                                                    className={taskError.client.length > 0 ? \"is-invalid\" : \"\"}>\r\n                                                    <option value=\"\">Select Client</option>\r\n                                                    <option value=\"Marco Botton\">Marco Botton</option>\r\n                                                    <option value=\"Giacomo Guilizzoni\">Giacomo Guilizzoni</option>\r\n                                                    <option value=\"Mariah Guilizzoni\">Mariah Guilizzoni</option>\r\n                                                </Form.Control>\r\n                                                <Form.Text className=\"text-danger\">{taskError.client}</Form.Text>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Project</Form.Label>\r\n                                                <Form.Control as=\"select\" name=\"project\"\r\n                                                    onChange={(e) => handleChange(e)}\r\n                                                    className={taskError.project.length > 0 ? \"is-invalid\" : \"\"}>\r\n                                                    <option value=\"\">Select Project</option>\r\n                                                    {projects.filter(project => project.client.includes(task.client)).map(function(project,index){\r\n                                                        return <option key={index} value={project._id}>{project.name}</option>\r\n                                                    })}\r\n                                                </Form.Control>\r\n                                                <Form.Text className=\"text-danger\">{taskError.project}</Form.Text>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Task</Form.Label>\r\n                                                <Form.Control type=\"text\" name=\"task\" placeholder=\"Task Description...\"\r\n                                                    onChange={(e) => handleChange(e)}\r\n                                                    className={taskError.task.length > 0 ? \"is-invalid\" : \"\"} />\r\n                                                <Form.Text className=\"text-danger\">{taskError.task}</Form.Text>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\r\n                                    Close\r\n                                </Button>\r\n                                <Button className=\"primary-button\" type=\"submit\">\r\n                                    Start\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                    <Datatable columns={columns} data={data} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {useState, React} from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nexport default function AddProjects(){\r\n\r\n    const history = useHistory();\r\n\r\n    async function cancel() {\r\n        let url = \"/projects\";\r\n        history.push(url);\r\n    }\r\n\r\n    const [project, setProject] = useState({\r\n        title: \"\",\r\n        client: \"\",\r\n        description: \"\",\r\n        invoice: \"\",\r\n        rate: \"\",\r\n        status: \"\"\r\n    });\r\n\r\n    const [projectError, setProjectError] = useState({\r\n        title: \"\",\r\n        client: \"\",\r\n        description: \"\",\r\n        invoice: \"\",\r\n        rate: \"\",\r\n        status: \"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let newProject = {...project, [e.target.name]: e.target.value};\r\n        setProject(newProject);\r\n    };\r\n\r\n    const isProjectValid = (e) => {\r\n        e.preventDefault();\r\n        let valid = true;\r\n        setProjectError({\r\n            title: \"\",\r\n            client: \"\",\r\n            description: \"\",\r\n            invoice: \"\",\r\n            rate: \"\",\r\n            status: \"\"\r\n        });\r\n        let newProjectError = {...projectError};\r\n\r\n        if(!project.title.length > 0){\r\n            newProjectError.title = \"Project Title is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.title = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.client.length > 0){\r\n            newProjectError.client = \"Client Name is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.client = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.description.length > 0){\r\n            newProjectError.description = \"Project Description is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.description = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.rate.value > 0){\r\n            newProjectError.rate = \"Rate is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.rate = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.invoice.length > 0){\r\n            newProjectError.invoice = \"Invoice Duration is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.invoice = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.status.length > 0){\r\n            newProjectError.status = \"Project Status is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.status = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(valid === true){\r\n            Redirect(\"/projects\");\r\n        }\r\n        return valid;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader title=\"New Project\"/>\r\n            \r\n            <div className=\"col-md-2\">\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n\r\n              <form onSubmit={(e) => isProjectValid(e)}><center>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\r\n                                                      className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\r\n                        <p className=\"text-danger\">{projectError.title}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\r\n                                                      className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\r\n                            <option value=\"\">Select Client</option>\r\n                            <option value=\"client1\">Client1</option>\r\n                            <option value=\"client2\">Client2</option>\r\n                            <option value=\"client3\">Client3</option>\r\n                            <option value=\"client4\">Client4</option>\r\n                        </select>\r\n                        <p className=\"text-danger\">{projectError.client}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Description*:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\r\n                                                      className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\r\n                        <p className=\"text-danger\">{projectError.description}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\r\n                        <p className=\"text-danger\">{projectError.rate}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\r\n                            <option value=\"\">Select Invoice Duration</option>\r\n                            <option value=\"Daily\">Daily</option>\r\n                            <option value=\"Weekly\">Weekly</option>\r\n                            <option value=\"Monthly\">Monthly</option>\r\n                        </select>\r\n                        <p className=\"text-danger\">{projectError.invoice}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\r\n                            <option value=\"\">Select Project Status</option>\r\n                            <option value=\"In Progress\">In Progress</option>\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                        </select>\r\n                        <p className=\"text-danger\">{projectError.status}</p>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-md-5\"></div>\r\n                    <div className=\"col-md-2\">\r\n                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\r\n                    </div>\r\n                    <div className=\"col-md-3\"></div>\r\n                </div>\r\n              </center></form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport AddProject from './AddProject';\r\nimport Datatable from \"../components/Datatable\";\r\nimport '../styles/style.scss';\r\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport \"../styles/Projects.scss\";\r\n\r\nexport default function Projects() {\r\n\r\n    const columns = [\r\n        { Header: 'Project Title', accessor: 'title' },\r\n        { Header: 'Description', accessor: 'description' },\r\n        { Header: 'Client Name', accessor: 'client' },\r\n        { Header: 'Status', accessor: 'status' },\r\n        {\r\n            Header: 'Actions', accessor: 'row',\r\n            Cell: ({ row }) => (<div className=\"data-table-button\"><a title=\"Edit Project\" onClick={() => editProject(row.id)} className=\"secondary-button\">Edit</a><a title=\"Delete Project\" onClick={() => { deleteTask(row) }} className=\"delete-button\">Delete</a></div>)\r\n        }\r\n    ];\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        setData([\r\n            {\r\n                title: \"Email Download\",\r\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\r\n                client: \"Christ Fernandiz\",\r\n                status: \"In Progress\"\r\n            },\r\n            {\r\n                title: \"Navigation\",\r\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\r\n                client: \"Shaun Bishop\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                title: \"Upgrade Database\",\r\n                description: \"Providing this service will migrate data to AWS.\",\r\n                client: \"Joseph Robinson\",\r\n                status: \"Completed\"\r\n            },\r\n            {\r\n                title: \"Email Download\",\r\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\r\n                client: \"Christ Fernandiz\",\r\n                status: \"In Progress\"\r\n            },\r\n            {\r\n                title: \"Navigation\",\r\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\r\n                client: \"Shaun Bishop\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                title: \"Upgrade Database\",\r\n                description: \"Providing this service will migrate data to AWS.\",\r\n                client: \"Joseph Robinson\",\r\n                status: \"Completed\"\r\n            },\r\n            {\r\n                title: \"Email Download\",\r\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\r\n                client: \"Christ Fernandiz\",\r\n                status: \"In Progress\"\r\n            },\r\n            {\r\n                title: \"Navigation\",\r\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\r\n                client: \"Shaun Bishop\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                title: \"Upgrade Database\",\r\n                description: \"Providing this service will migrate data to AWS.\",\r\n                client: \"Joseph Robinson\",\r\n                status: \"Completed\"\r\n            },\r\n            {\r\n                title: \"Email Download\",\r\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\r\n                client: \"Christ Fernandiz\",\r\n                status: \"In Progress\"\r\n            },\r\n            {\r\n                title: \"Navigation\",\r\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\r\n                client: \"Shaun Bishop\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                title: \"Upgrade Database\",\r\n                description: \"Providing this service will migrate data to AWS.\",\r\n                client: \"Joseph Robinson\",\r\n                status: \"Completed\"\r\n            },\r\n        ])\r\n    }, []);\r\n\r\n    const [project, setProject] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        client: \"\",\r\n        status: \"\"\r\n    });\r\n\r\n\r\n    const deleteTask = (project) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            let newData = [...data];\r\n            newData.splice(project.index, 1);\r\n            console.log(newData);\r\n            setData(newData);\r\n        }\r\n    };\r\n\r\n    const [checkForm, setCheckForm] = useState(true);\r\n\r\n    const validate = () => {\r\n        setCheckForm(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    async function editProject(id) {\r\n        let url = \"/projects/edit/\" + id;\r\n        history.push(url);\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-container projects-container\">\r\n            <div className=\"page-header-container\">\r\n                <PageHeader title=\"Projects\" />\r\n            </div>\r\n            <div className=\"page-content-container\">\r\n            <div className=\"page-content\">\r\n\r\n                <Row className=\"button-container\">\r\n                    <Col>\r\n                        <a href=\"/projects/add\" title=\"Add Project\" className=\"primary-button\">Add Project</a>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"data-table-container\">\r\n                    <Col>\r\n                        <Datatable columns={columns} data={data} />\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useState, React} from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\r\n\r\nconst EditProjects = (prop) => {\r\n\r\n    const param = useParams();\r\n\r\n    const history = useHistory();\r\n\r\n    async function cancel() {\r\n        let url = \"/projects\";\r\n        history.push(url);\r\n    }\r\n\r\n    const [project, setProject] = useState({\r\n        title: \"\",\r\n        client: \"\",\r\n        description: \"\",\r\n        invoice: \"\",\r\n        rate: \"\",\r\n        status: \"\"\r\n    });\r\n\r\n    const [projectError, setProjectError] = useState({\r\n        title: \"\",\r\n        client: \"\",\r\n        description: \"\",\r\n        invoice: \"\",\r\n        rate: \"\",\r\n        status: \"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let newProject = {...project, [e.target.name]: e.target.value};\r\n        setProject(newProject);\r\n    };\r\n\r\n    const isProjectValid = (e) => {\r\n        e.preventDefault();\r\n        let valid = true;\r\n        setProjectError({\r\n            title: \"\",\r\n            client: \"\",\r\n            description: \"\",\r\n            invoice: \"\",\r\n            rate: \"\",\r\n            status: \"\"\r\n        });\r\n        let newProjectError = {...projectError};\r\n\r\n        if(!project.title.length > 0){\r\n            newProjectError.title = \"Project Title is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.title = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.client.length > 0){\r\n            newProjectError.client = \"Client Name is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.client = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.description.length > 0){\r\n            newProjectError.description = \"Project Description is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.description = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.rate.value > 0){\r\n            newProjectError.rate = \"Rate is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.rate = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.invoice.length > 0){\r\n            newProjectError.invoice = \"Invoice Duration is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.invoice = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(!project.status.length > 0){\r\n            newProjectError.status = \"Project Status is required\";\r\n            setProjectError(newProjectError);\r\n            valid = false;\r\n        }\r\n        else{\r\n            newProjectError.status = \"\";\r\n            setProjectError(newProjectError);\r\n        }\r\n\r\n        if(valid === true){\r\n            Redirect(\"/projects\");\r\n        }\r\n        return valid;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader title=\"Edit Project\"/>\r\n            \r\n            <div className=\"col-md-2\">\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n\r\n              <form onSubmit={(e) => isProjectValid(e)}><center>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\r\n                    <div className=\"col-md-10\">\r\n                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\r\n                                                      className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\r\n                        <p className=\"text-danger\">{projectError.title}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\r\n                                                      className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\r\n                            <option value=\"\">Select Client</option>\r\n                            <option value=\"client1\">Client1</option>\r\n                            <option value=\"client2\">Client2</option>\r\n                            <option value=\"client3\">Client3</option>\r\n                            <option value=\"client4\">Client4</option>\r\n                        </select>\r\n                        <p className=\"text-danger\">{projectError.client}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Description*:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\r\n                                                      className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\r\n                        <p className=\"text-danger\">{projectError.description}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\r\n                        <p className=\"text-danger\">{projectError.rate}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\r\n                            <option value=\"\">Select Invoice Duration</option>\r\n                            <option value=\"Daily\">Daily</option>\r\n                            <option value=\"Weekly\">Weekly</option>\r\n                            <option value=\"Monthly\">Monthly</option>\r\n                        </select>\r\n                        <p className=\"text-danger\">{projectError.invoice}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\r\n                    <div className=\"col-md-10\">\r\n                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\r\n                            <option value=\"\">Select Project Status</option>\r\n                            <option value=\"In Progress\">In Progress</option>\r\n                            <option value=\"Pending\">Pending</option>\r\n                            <option value=\"Completed\">Completed</option>\r\n                        </select>\r\n                        <p className=\"text-danger\">{projectError.status}</p>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-md-5\"></div>\r\n                    <div className=\"col-md-2\">\r\n                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\r\n                    </div>\r\n                    <div className=\"col-md-3\"></div>\r\n                </div>\r\n              </center></form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditProjects;","import React, { Component } from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../styles/AddClient.scss\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {curl_init} from 'react';\r\nimport {curl_getinfo} from 'react';\r\nimport {CURLINFO_HTTP_CODE} from 'react';\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\nexport class AddClient extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            clientName: \"\",\r\n            clientNameError: \"\",\r\n            organizationName: \"\",\r\n            organizationNameError: \"\",\r\n            contactNo: \"\",\r\n            contactNoError: \"\",\r\n            websiteName: \"\",\r\n            websiteNameError: \"\",\r\n            emailId: \"\",\r\n            emailIdError: \"\",\r\n            street: \"\",\r\n            streetError: \"\",\r\n            businessDescription: \"\",\r\n            postalCode: \"\",\r\n            PostalCodeError: \"\",\r\n            meetingPlatform: \"\",\r\n            meetingPlatformError: \"\",\r\n            country: \"\",\r\n            region: \"\"\r\n        }       \r\n    }\r\n\r\n    onValueChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    selectCountry (val) {\r\n      this.setState({ country: val });\r\n    }\r\n  \r\n    selectRegion (val) {\r\n      this.setState({ region: val });\r\n    }\r\n\r\n    validateClient = (event) => {\r\n        let isValid = true;\r\n        if (!this.state.client) {\r\n            this.setState({ clientNameError: \"Client Name is required\" })\r\n            isValid = false;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateOrganization = (event) => {\r\n      let isValid = true;\r\n      if (!this.state.organizationName) {\r\n          this.setState({ organizationNameError: \"Organization Name is required\" })\r\n          isValid = false;\r\n      }\r\n      return isValid;\r\n    }\r\n\r\n    validateContactNo = (event) => {\r\n        let isValid = true;\r\n        if (!this.state.contactNo) {\r\n            this.setState({ contactNoError: \"Contact No is required\" })\r\n            isValid = false;\r\n        }\r\n        var pattern = new RegExp(/^[0-9\\b]+$/);\r\n        const result = pattern.test(this.state.contactNo);\r\n        if(result===false){\r\n          this.setState({\r\n            isValid:false,\r\n            contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\r\n          })\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validateWebsiteName = (event) => {\r\n      let isValid = true;\r\n      const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\r\n      const result = pattern.test(this.state.websiteName);\r\n      if(result===false){\r\n        this.setState({\r\n          isValid:false,\r\n          websiteNameError: \"Provided website is invalid\"\r\n        })\r\n      }\r\n      return isValid;\r\n    }\r\n\r\n    validateEmailId = (event) => {\r\n      let isValid = true;\r\n      if (!this.state.emailId) {\r\n          this.setState({ emailIdError: \"Email Id is required\" })\r\n          isValid = false;\r\n      }\r\n      const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\r\n      const result = pattern.test(this.state.emailId);\r\n      if(result===false){\r\n        this.setState({\r\n          isValid:false,\r\n          emailIdError: \"Provided email Id is invalid\"    \r\n        })\r\n      } \r\n      return isValid;\r\n    }\r\n\r\n    validateLinkedInProfile = (event) => \r\n    {\r\n        let isValid = true;\r\n        const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\r\n        const result = pattern.test(this.state.linkedInProfile);\r\n        if(result===false){\r\n          this.setState({\r\n            isValid:false,\r\n            linkedInProfileError: \"LinkedIn Profile is not valid\"\r\n          })\r\n        }\r\n        /*const profileurl = this.state.linkedInProfile;\r\n        const fp = curl_init(profileurl);\r\n        const response_code = curl_getinfo(fp, CURLINFO_HTTP_CODE);\r\n  \r\n        if(response_code===200){\r\n          this.setState({\r\n            isValid:false,\r\n            linkedInProfileError: \"Provided Linkedin profile is invalid\"    \r\n          })\r\n        }*/\r\n    }\r\n\r\n    validateStreet = (event) => {\r\n      let isValid = true;\r\n      const pattern = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/g;\r\n      const result = pattern.test(this.state.street);\r\n      if(result===false){\r\n        this.setState({\r\n          isValid:false,\r\n          streetError: \"Street should not contain special characters\"\r\n        })\r\n      }\r\n      return isValid;\r\n    }\r\n\r\n    validatePostalcode = (event) => {\r\n      let isValid = true;\r\n      const pattern = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/g;\r\n      const result = pattern.test(this.state.postalCode);\r\n      if(result===false){\r\n        this.setState({\r\n          isValid:false,\r\n          PostalCodeError: \"Postal code should not contain special characters\"\r\n        })\r\n      }\r\n      return isValid;\r\n    }\r\n\r\n    validateMeetingPlatform = (event) => {\r\n      let isValid = true;\r\n      if (!this.state.meetingPlatform) {\r\n          this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\r\n          isValid = false;\r\n      }\r\n      return isValid;\r\n    }\r\n\r\n    validateForm = (event) => {\r\n      let isValid = true\r\n      if (!this.validateClient()) {\r\n          isValid = false;\r\n      }\r\n      if (!this.validateOrganization()) {\r\n          isValid = false;\r\n      }\r\n      if (!this.validateContactNo()) {\r\n          isValid = false;\r\n      }\r\n      if (!this.validateWebsiteName()) {\r\n          isValid = false;\r\n      }\r\n      if (!this.validateEmailId()) {\r\n        isValid = false;\r\n      }\r\n      if (!this.validateLinkedInProfile()) {\r\n        isValid = false;\r\n      }\r\n      if (!this.validateStreet()) {\r\n        isValid = false;\r\n      }\r\n      if (!this.validatePostalcode()) {\r\n        isValid = false;\r\n      }\r\n      if (!this.validateMeetingPlatform()) {\r\n        isValid = false;\r\n      }\r\n      return isValid;\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validateForm()) {\r\n            alert(\"Details Successfully Saved!!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page-container add-client-container\">\r\n                <div className=\"page-header-container\">\r\n                   <PageHeader title=\"New Client\" subtitle=\"\" />\r\n                </div>\r\n                <div className=\"page-content-container\">\r\n                    <div className=\"page-content\">\r\n                        <Row className=\"add-client-content\">\r\n                            <Col>\r\n                                <Form>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.clientName} onChange={this.onValueChange}\r\n                                                    onBlur={this.validateClientName}\r\n                                                    isInvalid = {this.state.clientNameError}/>\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.clientNameError}\r\n                                                </Form.Control.Feedback>\r\n\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label className=\"required\">Organization</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.organizationName} onChange={this.onValueChange}\r\n                                                    onBlur={this.validateOrganization}\r\n                                                    isInvalid = {this.state.organizationNameError} />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.organizationNameError}\r\n                                                </Form.Control.Feedback>        \r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.contactNo} onChange={this.onValueChange}\r\n                                                    onBlur={this.validateContactNo}\r\n                                                    isInvalid={this.state.contactNoError} />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.contactNoError}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Website</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.websiteName} onChange={this.onValueChange}\r\n                                                    onBlur={this.validateWebsiteName}\r\n                                                    isInvalid={this.state.websiteNameError} />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.websiteNameError}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                      \r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label className=\"required\">Email</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.emailId} onChange={this.onValueChange}\r\n                                                    onBlur={this.validateEmailId}\r\n                                                    isInvalid={this.state.emailIdError} />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.emailIdError}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label>LinkedIn Profile</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"LinkedInProfile\" placeholder=\"Enter Clienet Name\" value={this.state.linkedInProfile} onChange={this.onValueChange}\r\n                                                    onBlur={this.validateLinkedInProfile}\r\n                                                    isInvalid={this.state.linkedInProfileError} />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.linkedInProfileError}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                      \r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Street</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.street} onChange={this.onValueChange}\r\n                                                    onBlur={this.validateStreet}\r\n                                                    isInvalid={this.state.streetError} />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.streetError}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Business Description</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.businessDescription} onChange={this.onValueChange}\r\n                                                    onBlur={this.validatebusinessDescription}\r\n                                                     />\r\n                                               \r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                      \r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Postal Code</Form.Label>\r\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.postalCode} onChange={this.onValueChange}\r\n                                                    onBlur={this.validatePostalcode}\r\n                                                    isInvalid={this.state.PostalCodeError} />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.PostalCodeError}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\r\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.meetingPlatform} onChange={this.onValueChange}\r\n                                                    onBlur={this.validateMeetingPlatform}\r\n                                                    isInvalid={this.state.meetingPlatformError}>\r\n                                                      <option>Select Project</option>\r\n                                                    <option value=\"1\">Google Meet</option>\r\n                                                    <option value=\"2\">Skype</option>\r\n                                                    <option value=\"3\">Zoom</option>\r\n                                                    <option value=\"4\">In person</option>\r\n                                                  </Form.Control>\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {this.state.meetingPlatformError}\r\n                                                </Form.Control.Feedback>\r\n                                              \r\n\r\n                                            </Form.Group>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <Form.Label className=\"required\">Country </Form.Label>\r\n                                                <CountryDropdown as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country} \r\n                                                                 onChange={(name, value) => this.selectCountry(name, value)}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        \r\n                                            <Form.Group>\r\n                                                <Form.Label>Region </Form.Label>\r\n                                                <RegionDropdown\r\n                                                       country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\r\n                                                       as=\"select\" name=\"region\" value={this.state.region} onChange={(name, value) => this.selectRegion(name,value)}>\r\n                                                </RegionDropdown>                            \r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    \r\n                                    <Row className=\"generate-button-container\">\r\n                                        <Button className=\"primary-button\" onClick={this.onSubmit}>\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Row>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AddClient);","import React from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport Datatable from \"../components/Datatable\";\r\nimport {\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport \"../styles/Clients.scss\";\r\nimport './AddClient'\r\nimport { Component } from \"react\";\r\n\r\nexport class Clients extends Component {\r\n  //constructor for props\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n    this.handleNewClient = this.handleNewClient.bind(this);\r\n\r\n    this.columns = [\r\n      { Header: 'Client Name', accessor: 'ClientName' },\r\n      { Header: 'Organization', accessor: 'organization' },\r\n      { Header: 'Contact No', accessor: 'ContactNo' },\r\n      { Header: 'Email', accessor: 'Emailid' },\r\n      {\r\n        Header: 'Action', accessor: 'row',\r\n        Cell: ({ row }) => (\r\n          <div className=\"generate-button-container\">\r\n            <Button className=\"secondary-button\" align=\"right\">View</Button>\r\n            <Button className=\"secondary-button\" align=\"right\">Edit</Button>\r\n            <Button className=\"delete-button\" align=\"right\">Delete</Button>\r\n          </div>\r\n        )\r\n      }];\r\n    this.setData();\r\n  }\r\n\r\n  setData = () => {\r\n    this.data = [{\r\n      ClientName: \"Jill Dupre\",\r\n      organization: \"Elegant Microweb\",\r\n      ContactNo: \"(+1)902-412-7654\",\r\n      Emailid: \"JillDupre@gmail.com\"\r\n    },\r\n    {\r\n      ClientName: \"Herry Chopra\",\r\n      organization: \"Meditab\",\r\n      ContactNo: \"(+1) 777-987-2345\",\r\n      Emailid: \"hhs12@yahoo.co.in\"\r\n    },\r\n    {\r\n      ClientName: \"Nayan Patel\",\r\n      organization: \"IBM\",\r\n      ContactNo: \"(+91) 9601739976\",\r\n      Emailid: \"nayan007@gmail.com\"\r\n    }];\r\n  }\r\n  handleNewClient = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push({ pathname: '/Addclient' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"page-container clients-container\">\r\n          <div className=\"page-header-container\">\r\n            <PageHeader title=\"Clients\" subtitle=\"\" />\r\n          </div>\r\n          <div className=\"page-content-container\">\r\n            <div className=\"page-content\">\r\n              <Row className=\"button-container\">\r\n                <Col>\r\n                  <Button className=\"primary-button\" type=\"button\" align=\"right\" onClick={this.handleNewClient} >Add New</Button>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"data-table-container\">\r\n                <Col>\r\n                  <Datatable columns={this.columns} data={this.data} />\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Clients);","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport Datatable from '../components/Datatable';\r\nimport emailjs from 'emailjs-com';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport \"../styles/Testimonials.scss\"\r\nconst Testimonials = () => {\r\n\r\n    const columns = [\r\n        { Header: '#', accessor: 'no' },\r\n        { Header: 'Project', accessor: 'project' },\r\n        { Header: 'Status', accessor: 'status' },\r\n        { Header: 'Requested on', accessor: 'requestedOn' },\r\n        {\r\n            Header: 'Actions', accessor: 'row',\r\n            Cell: ({ row }) => (\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <button className=\"secondary-button\" onClick={() => setLgShow(true)}>Re-Request</button>\r\n                        {/* <a href=\"#\">Re-Request</a> */}\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3\">\r\n                        <button className=\"delete-button\" onClick={deleteTask} >Delete</button>\r\n                        {/* <a href=\"#\">Delete</a> */}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    ];\r\n\r\n\r\n    function sendEmail(e) {\r\n        e.preventDefault();\r\n\r\n        // console.log(e.target.data);\r\n        var mailParams = {\r\n            //Mail Sender Details\r\n            freelancerName: 'Freelancer_Deep',\r\n            freelancerMail: 'deepatel1607@gmail.com',\r\n\r\n            //Mail Reciver Details\r\n            clientName: 'Client_Deep',\r\n            clientMail: 'dee16798ppatel@gmail.com',\r\n\r\n            //Attachment Messages\r\n            message: 'Success!!'\r\n        };\r\n\r\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\r\n            .then(function (response) {\r\n                alert(\"Email Sent\");\r\n                console.log('SUCCESS!', response.status, response.text);\r\n\r\n            }, function (error) {\r\n                alert(\"Error: \" + error);\r\n                console.log('FAILED...', error);\r\n            });\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        setData([\r\n            {\r\n                no: \"1\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"2\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"3\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"4\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"5\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"6\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"7\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"8\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"9\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"10\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"11\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"12\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            },\r\n            {\r\n                no: \"13\",\r\n                project: \"S-A-M\",\r\n                client: \"Deep Patel\",\r\n                requestedOn: \"20-06-2021\",\r\n                status: \"Pending\"\r\n            }\r\n        ])\r\n    }, []);\r\n\r\n    const [testimonial, setTestimonial] = useState({\r\n        no: \"\",\r\n        project: \"\",\r\n        client: \"\",\r\n        requestedOn: \"\",\r\n        status: \"\"\r\n    });\r\n\r\n    const deleteTask = (task) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            let newData = [...data];\r\n            newData.splice(testimonial.index, 1);\r\n            console.log(newData);\r\n            setData(newData);\r\n        }\r\n    };\r\n\r\n    const [lgShow, setLgShow] = useState(false);\r\n\r\n    return (\r\n        <div className=\"page-container add-testimonial-container\">\r\n            <div className=\"page-header-container\">\r\n                <PageHeader title=\"Testimonials\" />\r\n            </div>\r\n            <div className=\"page-content-container\">\r\n                <div className=\"page-content\">\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <div className=\"col-md-2 button-container\">\r\n                                <div className=\"row my-add-btn\">\r\n                                    <div className=\"col-md-5\"></div>\r\n                                    <div className=\"col-md-7\">\r\n                                        <div className=\"add-testimonial-container\">\r\n                                            <div className=\"generate-button-container\">\r\n                                                <button className=\"primary-button\" type=\"button\" align=\"right\" onClick={() => setLgShow(true)}> Request</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Modal\r\n                                            size=\"lg\"\r\n                                            show={lgShow}\r\n                                            onHide={() => setLgShow(false)}\r\n                                            aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                                        >\r\n                                            <Modal.Header closeButton>\r\n                                                <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                                    Request Testimonial\r\n                                                </Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                                <Form id=\"contact-form\">\r\n\r\n                                                    <input type=\"hidden\" name=\"freelancerName\" id=\"freelancerName\" value=\"Freelancer_Deep\" />\r\n                                                    <input type=\"hidden\" name=\"freelancerMail\" id=\"freelancerMail\" value=\"deepatel1607@gmail.com\" />\r\n                                                    <input type=\"hidden\" name=\"clientName\" id=\"clientName\" value=\"Client_Deep\" />\r\n                                                    <input type=\"hidden\" name=\"clientMail\" id=\"clientMail\" value=\"dee16798ppatel@gmail.com\" />\r\n                                                    <input type=\"hidden\" name=\"message\" id=\"message\" value=\"From hidden\" />\r\n\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Project</Form.Label>\r\n                                                        <Form.Control as=\"select\">\r\n                                                            <option>Project 1</option>\r\n                                                            <option>Project 2</option>\r\n                                                            <option>Project 3</option>\r\n                                                            <option>Project 4</option>\r\n                                                            <option>Project 5</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Client</Form.Label>\r\n                                                        <Form.Control as=\"select\">\r\n                                                            <option>Client 1</option>\r\n                                                            <option>Client 2</option>\r\n                                                            <option>Client 3</option>\r\n                                                            <option>Clientv 4</option>\r\n                                                            <option>Clientv 5</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Request Message</Form.Label>\r\n                                                        <Form.Control as=\"textarea\" name=\"message\" rows={3} id=\"message\" />\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button variant=\"primary\" type=\"submit\" id=\"button\" value=\"Send\" onClick={sendEmail}>\r\n                                                        Send\r\n                                                    </Button>\r\n                                                </Form>\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={12}>\r\n                            <Datatable columns={columns} data={data} />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Testimonials\r\n","import React,{Component} from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport {Button,Col,Row} from \"react-bootstrap\";\r\nimport Datatable from \"../components/Datatable\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../styles/DashboardNavbar.scss\";\r\nimport \"../styles/InvoiceManagement.scss\"\r\nexport class InvoiceManagement extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n        checkbox : 'false',\r\n        columns : [\r\n            { Header: 'Invoice Number', accessor: 'invoicename'},\r\n            { Header: 'Generated Date', accessor: 'generateddate'},\r\n            { Header: 'Due Date', accessor: 'duedate'},\r\n            { Header: 'Client Name', accessor: 'clientname'},\r\n            { Header: 'Project Name', accessor: 'projectname'},\r\n            { Header: 'Payment Status', accessor: 'paymentstatus'},\r\n            { Header: 'Action', accessor: 'button1',\r\n                Cell: ({button1}) => (<div><Button  className=\"secondary-button\">Edit</Button><Button  className=\"delete-button\">Delete</Button></div>)},\r\n        ],\r\n\r\n       data:[{    \r\n        invoicename: \"1EDJJHE\",\r\n        generateddate: \"03-02-2021\",\r\n        duedate: \"03-03-2021\",\r\n        clientname:\"Bob Marker\",\r\n        projectname:\"Project Management\",\r\n        paymentstatus:\"Unpaid\"\r\n      },\r\n      {\r\n        invoicename: \"2XFDSFW\",\r\n        generateddate: \"03-02-2021\",\r\n        duedate: \"03-03-2021\",\r\n        clientname:\"Mark Velly\",\r\n        projectname:\"Tic-Toe\",\r\n        paymentstatus:\"Paid\"\r\n      },\r\n      {\r\n        invoicename: \"3ECERCC\",\r\n        generateddate: \"03-02-2021\",\r\n        duedate: \"03-03-2021\",\r\n        clientname:\"Lelly Vince\",\r\n        projectname:\"Invoice Generator\",\r\n        paymentstatus:\"Unpaid\"\r\n      },\r\n      {\r\n        invoicename: \"4ERDFTH\",\r\n        generateddate: \"03-02-2021\",\r\n        duedate: \"03-03-2021\",\r\n        clientname:\"Chrissy MAcdonalds\",\r\n        projectname:\"Client Management\",\r\n        paymentstatus:\"Unpaid\"\r\n      }]\r\n        }\r\n    }\r\n    handleClick=(e)=>{\r\n        this.setState({checkbox:'true'})\r\n    }\r\n\r\nrender() {\r\n    return (\r\n\r\n    <div className=\"page-container-container\">\r\n        <div className=\"page-header-container\">\r\n           <PageHeader title=\"Invoice Management\" subtitle=\"\" />\r\n        </div>\r\n        <div className=\"page-content-container\">\r\n            <div className=\"page-content\"></div>\r\n            <Row>\r\n                <Col>\r\n                <input  type=\"text\" placeholder=\"Filter\" name=\"textforfiletr\" />\r\n                </Col>\r\n                \r\n            </Row>\r\n            <Datatable columns={this.state.columns} data={this.state.data} allowCSV=\"false\" allowSearch=\"false\"/>\r\n        </div>\r\n    </div>\r\n)\r\n        }\r\n}\r\nexport default withRouter(InvoiceManagement)","import axios from \"axios\"\r\n\r\nexport class TodoListService {\r\n    async getAllTasks(date) {\r\n        const result = await axios.post(\"/api/todoLists/getList\", { \"currentDate\": date });\r\n        return result;\r\n    }\r\n\r\n    async markTaskAsDone(id) {\r\n        const result = await axios.put(\"/api/todoLists/markAsDone\", { \"id\": id });\r\n        return result;\r\n    }\r\n\r\n    async deleteTask(id) {\r\n        const result = await axios.delete(\"/api/todoLists/deleteItem/\" + id);\r\n        return result;\r\n    }\r\n\r\n    async saveTask(saveData) {\r\n        const result = await axios.post(\"/api/todoLists/saveItem\", saveData);\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default new TodoListService()","/**\r\n * Author: Bansi Mehta.\r\n * Created On: 2021-06-07\r\n * Todo list component.\r\n */\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router\";\r\nimport { Container, Col, Row, Button } from 'react-bootstrap'\r\nimport { Card } from 'react-bootstrap';\r\nimport moment from \"moment\";\r\nimport axios from 'axios'\r\nimport \"../styles/TodoList.scss\";\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport todoListService from \"../services/TodoListService\";\r\nexport class TodoList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const currentDate = moment().format('YYYY-MM-DD')\r\n        this.state = {\r\n            completeTasks: [],\r\n            incompleteTasks: [],\r\n            date: currentDate,\r\n            newTask: ''\r\n        }\r\n\r\n        this.item = {\r\n            title: '',\r\n            status: false,\r\n            date: currentDate\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllData(this.state.date)\r\n    }\r\n\r\n    /**\r\n     * On value change of a control, set it in state.\r\n     * @param {*} event \r\n     */\r\n    onValueChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all the tasks based on date.\r\n     * Date format: \"YYYY-MM-DD\".\r\n     * Divide the tasks received into groups: complete and incomplete to display.\r\n     * @param {*} date \r\n     */\r\n    getAllData(date) {\r\n        todoListService.getAllTasks(date).then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data && response.data.result && response.data.result.length) {\r\n                    let completeTask = []\r\n                    let incompleteTask = []\r\n                    response.data.result.forEach(row => {\r\n                        if (row && row.status == true) {\r\n                            completeTask.push(row)\r\n                        } else {\r\n                            incompleteTask.push(row)\r\n                        }\r\n                    })\r\n                    this.setState({ completeTasks: completeTask })\r\n                    this.setState({ incompleteTasks: incompleteTask })\r\n                } else {\r\n                    this.setState({ completeTasks: [] })\r\n                    this.setState({ incompleteTasks: [] })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Mark the task item as complete based on id.\r\n     * Refresh the list if successful.\r\n     * @param {*} rowData \r\n     */\r\n    taskItemComplete(rowData) {\r\n        todoListService.markTaskAsDone(rowData._id).then(response => {\r\n            if (response.status == 200) {\r\n                this.getAllData(this.state.date)\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Delete the task based on id.\r\n     * Refresh the list if successful.\r\n     * @param {*} rowData \r\n     */\r\n    taskItemDelete(rowData) {\r\n        todoListService.deleteTask(rowData._id).then(response => {\r\n            if (response.status == 200) {\r\n                this.getAllData(this.state.date)\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Add new task.\r\n     * Refresh the list if successful.\r\n     * @param {*} event \r\n     */\r\n    saveItem = (event) => {\r\n        event.preventDefault()\r\n        let saveData = {\r\n            title: this.state.newTask,\r\n            date: this.state.date\r\n        }\r\n        todoListService.saveTask(saveData).then(response => {\r\n            if (response.status == 200) {\r\n                this.setState({ newTask: '' })\r\n                this.getAllData(this.state.date)\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Date navigation: Get previous date from the date for which tasks are currently displayed.\r\n     * @param {*} event \r\n     */\r\n    getPreviousDate = (event) => {\r\n        let previousDate = moment(this.state.date, 'YYYY-MM-DD').subtract(1, 'day').format(\"YYYY-MM-DD\")\r\n        this.setState({ date: previousDate })\r\n        this.getAllData(previousDate)\r\n    }\r\n\r\n    /**\r\n     * Date navigaiton: Get next date from the date for which tasks are currently displayed.\r\n     * @param {*} event \r\n     */\r\n    getNextDate = (event) => {\r\n        let nextDate = moment(this.state.date, 'YYYY-MM-DD').add(1, 'day').format(\"YYYY-MM-DD\")\r\n        this.setState({ date: nextDate })\r\n        this.getAllData(nextDate)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page-container to-do-list-container\">\r\n                <div className=\"page-header-container\">\r\n                    <PageHeader title=\"Todo List\" subtitle=\"\" />\r\n                </div>\r\n                <div className=\"page-content-container\">\r\n                    <div className=\"page-content\">\r\n                        <Container className=\"to-do-list-content\">\r\n                            <Row className=\"date-row\">\r\n                                <Col className=\"date-control\">\r\n                                    <span className=\"navigate-date\" onClick={this.getPreviousDate}>\r\n                                        <i className=\"fas fa-chevron-left\"></i>\r\n                                    </span>\r\n                                    <span>\r\n                                        {this.state.date}\r\n                                    </span>\r\n                                    <span className=\"navigate-date\" onClick={this.getNextDate}>\r\n                                        <i className=\"fas fa-chevron-right\"></i>\r\n                                    </span>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"add-row\">\r\n                                <div className=\"add-text\">\r\n                                    <input type=\"text\" palceholder=\"Add task\" name=\"newTask\" value={this.state.newTask} onChange={this.onValueChange} className=\"input-control\" />\r\n                                </div>\r\n                                <div className=\"add-button\">\r\n                                    <Button className=\"primary-button add-button\" onClick={this.saveItem}>Add</Button>\r\n                                </div>\r\n                            </Row>\r\n                            <Row className=\"to-do-list-items\">\r\n                                <Col md={12} lg={6}>\r\n                                    <div>\r\n                                        {this.state.incompleteTasks.map(row => (\r\n                                            <Card className=\"card-content-incomplete\">\r\n                                                <Row className=\"card-item\">\r\n                                                    <Col xs={3} md={2} className=\"card-item-content\">\r\n                                                        <input type=\"checkbox\" checked={row.status} onClick={() => this.taskItemComplete(row)}></input>\r\n                                                    </Col>\r\n                                                    <Col xs={3} md={7} className=\"card-item-content\">\r\n                                                        <Card.Body>\r\n                                                            <Card.Title>{row.title}</Card.Title>\r\n                                                        </Card.Body>\r\n                                                    </Col>\r\n                                                    <Col xs={3} md={3} className=\"card-item-content\">\r\n                                                        <Button className=\"primary-button\" onClick={() => this.taskItemDelete(row)}>Delete</Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={12} lg={6}>\r\n                                    <div>\r\n                                        {this.state.completeTasks.map(row => (\r\n                                            <Card className=\"card-content-complete\">\r\n                                                <Card.Body>\r\n                                                    <Card.Title className=\"card-item-completed\">{row.title}</Card.Title>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        ))}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(TodoList);","import React from 'react';\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nexport default function Calendar(){\r\n    \r\n    const events = [{ title: \"today's event\", date: new Date() }];\r\n\r\n    const handleDateClick = (arg) => {\r\n        var dateevent = prompt(\"Enter an event for date: \"+arg.dateStr);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader title=\"Calendar\"/>\r\n            <FullCalendar\r\n                defaultView=\"dayGridMonth\"\r\n                plugins={[dayGridPlugin, interactionPlugin]}\r\n                events={events}\r\n                dateClick={handleDateClick}\r\n            />\r\n        </div>\r\n    )\r\n}","/* Author: Team */\r\n\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AppLayout from \"./layouts/AppLayout\";\r\nimport DashboardLayout from \"./layouts/DashboardLayout\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport InvoiceGeneration from \"./pages/InvoiceGeneration\";\r\nimport Timelogs from \"./pages/Timelogs\";\r\nimport Projects from \"./pages/Projects\";\r\nimport AddProject from \"./pages/AddProject\";\r\nimport EditProject from \"./pages/EditProject\";\r\nimport Clients from \"./pages/Clients\";\r\nimport AddClient from \"./pages/AddClient\";\r\nimport Testimonials from \"./pages/Testimonials\";\r\nimport InvoiceManagement from \"./pages/InvoiceManagement\"\r\nimport TodoList from \"./pages/TodoList\"\r\nimport Calendar from \"./pages/Calendar\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <AppLayout>\r\n                        <Home />\r\n                    </AppLayout>\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                    <AppLayout>\r\n                        <Login />\r\n                    </AppLayout>\r\n                </Route>\r\n                <Route path=\"/register\">\r\n                    <AppLayout>\r\n                        <Register />\r\n                    </AppLayout>\r\n                </Route>\r\n                <Route path=\"/dashboard\">\r\n                    <DashboardLayout>\r\n                        <Dashboard />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route exact path=\"/projects\">\r\n                    <DashboardLayout>\r\n                        <Projects />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route path=\"/projects/add\">\r\n                    <DashboardLayout>\r\n                        <AddProject />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route path=\"/projects/edit/:id\">\r\n                    <DashboardLayout>\r\n                        <EditProject />\r\n                    </DashboardLayout>\r\n                </Route>\r\n\r\n                <Route path=\"/timelogs\">\r\n                    <DashboardLayout>\r\n                        <Timelogs />\r\n                    </DashboardLayout>\r\n                </Route>\r\n\r\n                <Route path=\"/invoice-generation\">\r\n                    <DashboardLayout>\r\n                        <InvoiceGeneration />\r\n                    </DashboardLayout>\r\n                </Route>\r\n\r\n                <Route path=\"/clients\">\r\n                    <DashboardLayout>\r\n                        <Clients />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route path=\"/AddClient\">\r\n                    <DashboardLayout>\r\n                        <AddClient />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route path=\"/testimonials\">\r\n                    <DashboardLayout>\r\n                        <Testimonials />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route path=\"/invoicemanagement\">\r\n                    <DashboardLayout>\r\n                        <InvoiceManagement />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route path=\"/todolist\">\r\n                    <DashboardLayout>\r\n                        <TodoList />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route path=\"/calendar\">\r\n                    <DashboardLayout>\r\n                        <Calendar />\r\n                    </DashboardLayout>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <div>404 Page not found.</div>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/bootstrap_custom.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport './styles/style.scss';\r\nimport './styles/button_style.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}