{"version":3,"sources":["components/AppNavbar.js","layouts/AppLayout.js","components/PageHeader.js","services/notificationService.js","components/Notification.js","components/DashboardNavbar.js","components/DashboardSidebar.js","layouts/DashboardLayout.js","pages/Home.js","services/registerServices.js","pages/Auth/Login.js","pages/Auth/Register.js","services/dashboardService.js","pages/Dashboard.js","components/Datatable.js","services/projectsServices.js","services/clientService.js","pages/Profile.js","pages/EditProfile.js","services/invoiceServices.js","pages/Invoices/InvoiceGeneration.js","services/timelogServices.js","pages/Timelogs.js","pages/Projects/AddProject.js","pages/Projects.js","pages/Projects/EditProject.js","pages/Projects/ViewProject.js","pages/Clients/AddClient.js","pages/Clients.js","pages/Clients/EditClient.js","pages/Clients/ViewClient.js","services/testimonialServices.js","pages/Testimonials.js","pages/RequestTestimonial.js","pages/Invoices.js","services/todoListService.js","pages/TodoList.js","services/calendarServices.js","pages/Calendar.js","pages/Invoices/EditInvoice.js","pages/BusinessCard.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Navbar","className","Container","Brand","href","Nav","Link","AppLayout","children","PageHeader","props","title","subtitle","data","a","object","currentDate","userId","axios","post","result","value","eventName","category","Notification","openNotification","setState","NotificationService","setStatus","then","response","fetchNotifications","handleNotificationShow","catch","error","console","log","state","values","notificationShow","localStorage","getItem","moment","format","this","notifications","forEach","element","item","viewStatus","push","Dropdown","Toggle","id","Menu","map","index","Item","onClick","Modal","show","onHide","handleNotificationClose","Header","closeButton","Title","Body","Component","withRouter","DashboardNavbar","useState","removeItem","Sidebar","location","useLocation","open","setOpen","Collapse","in","Overflow","ToC","pathname","class","DashboardLayout","history","useHistory","useEffect","fluid","Row","Col","md","as","DashboardSidebar","Home","role","user","put","Login","email","password","loginData","setLoginData","emailError","passwordError","loginErrors","setLoginErrors","handleChange","e","newLogin","target","name","handleSubmit","preventDefault","valid","newLoginError","registerServices","fatchUser","Email","Password","setItem","_id","alert","handleMail","prompt","res","mailParams","freelancerName","freelancerMail","clientName","clientMail","message","emailjs","send","status","text","onSubmit","Form","Label","type","placeholder","onChange","Button","Register","checkEmail","checkPassword","checkMobile","mobile","linkedin","website","confirmPassword","registrationInfo","setRegistrationInfo","nameError","mobileError","linkedinError","websiteError","confirmPasswordError","registrationErrors","setRegistrationErrors","newRegistration","newRegError","test","addNewUser","variant","get","params","Dashboard","clients","projects","invoices","testimonials","stats","setStats","doughnutData","setDoughnutData","lineData","setLineData","barData","setBarData","dashboardService","clientProjects","labels","datasets","label","backgroundColor","borderWidth","clientInvoiceStats","invoices_paid","invoices_due","timelogStats","dates","durations","fill","borderColor","style","fontSize","Card","options","responsive","Datatable","columns","allowCSV","allowSearch","tableInstance","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setPageSize","globalFilter","span","filename","offset","Group","Control","Table","bordered","striped","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","width","Number","Pagination","First","disabled","Prev","Array","v","Next","Last","length","delete","client","saveData","deleteData","Profile","userInfo","setUserInfo","fatchUserById","Name","ContactNo","LinkedInProfile","Website","hover","EditProfile","editUser","date","InvoiceGeneration","onValueChange","event","validateProject","isValid","project","projectError","validateDate","validatestartDate","validateEndDate","validateDueDate","dueDate","selectedDate","Date","endDate","dueDateError","startAt","startAtError","today","endDateError","validateHourlyRate","hourlyRate","hourlyRateError","validateForm","generateInvoice","invoiceDetails","generateDate","now","invoiceServices","getTags","tags","totalCost","startdate","enddate","endAt","seconds","Math","round","toFixed","minutes","hour","description","task","hours","total","concat","generate","totalcost","saveInvoice","addInvoice","save","downloadInvoice","doc","jsPDF","Moment","setFont","Emailsender","fromEmail","projectNAme","toEmail","sendemail","getUserEmail","freelancerdata","getClentEmail","clientdata","ClientName","closeInvoice","projectId","readonly","paymentStatus","invoiceNumber","Total","generatedDate","accessor","findInvoice","projectName","startDate","taskendDate","tagId","getAllProject","pageContent","onBlur","isInvalid","Feedback","PureComponent","Timelogs","Cell","deleteTask","setData","timelogServices","list","lastTask","setTask","restartTimer","timerState","setTimerState","timerStart","setTimerStart","setTimerEnd","timerString","setTimerString","timer","setTimer","centiseconds","floor","slice","setInterval","setProjects","setClients","clientService","getAllClients","projectServices","taskError","setTaskError","showModal","setShowModal","newTask","handleModalClose","startTask","newTaskError","isTaskValid","add","window","confirm","newData","remove","splice","Subtitle","clearInterval","update","Text","filter","includes","Footer","AddProjects","rate","invoice","setProject","setClient","setProjectError","newProject","newProjectError","projectsServices","isProjectValid","min","Projects","align","viewDetails","original","editProject","deleteProject","url","EditProjects","prop","useParams","split","selected","ViewProject","AddClient","validateClient","clientNameError","validateOrganization","organizationName","organizationNameError","validateContactNo","contactNo","contactNoError","RegExp","validateWebsiteName","websiteName","websiteNameError","validateEmailId","emailId","emailIdError","validateLinkedInProfile","linkedInProfile","linkedInProfileError","validateStreet","street","streetError","validatePostalcode","postalCode","PostalCodeError","validateMeetingPlatform","meetingPlatform","meetingPlatformError","addNewClient","onClickBack","businessDescription","country","region","val","validateClientName","OrganizationName","WebsiteName","EmailId","Street","BusinessDescription","validatebusinessDescription","PostalCode","MeetingPlatform","defaultOptionLabel","selectCountry","blankOptionLabel","selectRegion","Clients","viewOneClient","editDetails","deleteDetails","deleteClient","newdetails","Emailid","handleNewClient","Organization","bind","newDetails","EditClient","onUpdate","editClient","clientId","ClientId","Country","Region","ViewClient","Testimonials","deleteTestimonial","clientServices","testimonial","setTestimonial","testimonialServices","mailInfo","setMailInfo","newRequest","lgShow","setLgShow","xs","size","aria-labelledby","cli","proj","Form_Link","link","sendEmail","RequestTestimonial","param","feedback","setFeedback","newFeedback","Invoices","editInvoice","invoicenumber","viewInvoice","deleteInvoice","deleteinvoice","getAllInvoices","checkbox","generateddate","fromdate","todate","duedate","clientname","projectname","paymentstatus","TodoList","saveItem","todoListService","saveTask","getAllData","getPreviousDate","previousDate","subtract","getNextDate","nextDate","completeTasks","incompleteTasks","getAllTasks","completeTask","incompleteTask","rowData","markTaskAsDone","palceholder","lg","checked","taskItemComplete","taskItemDelete","Calendar","events","setEvents","calendarServices","newEvents","dateTime","time","calendarEvent","setCalendarEvent","calendarEventError","setCalendarEventError","newCalendarEvent","defaultView","plugins","dayGridPlugin","interactionPlugin","dateClick","arg","dateStr","newCalendarEventError","isEventValid","EditInvoice","updateInvoice","cancel","taskstartDate","paymentPreStatus","BusinessCardFront","apiData","BusinessCardBack","BusinessClassDisplay","flipOnHover","display","justifyContent","height","profileData","testimonialData","BusinessCard","exportAsSide","side","exportSide","componentRef","React","createRef","ButtonGroup","Fragment","ref","exportComponentAsJPEG","App","exact","path","EditProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"woBAKe,SAASA,IACpB,OACI,cAACC,EAAA,EAAD,CAAQC,UAAU,kCAAlB,SACI,eAACC,EAAA,EAAD,WACI,eAACF,EAAA,EAAOG,MAAR,CAAcF,UAAU,mBAAmBG,KAAK,IAAhD,UACI,mBAAGH,UAAU,qBADjB,0BAGA,eAACI,EAAA,EAAD,CAAKJ,UAAU,UAAf,UACI,eAACI,EAAA,EAAIC,KAAL,CAAUL,UAAU,mBAAmBG,KAAK,QAA5C,UACI,mBAAGH,UAAU,uBADjB,YAGA,eAACI,EAAA,EAAIC,KAAL,CAAUL,UAAU,mBAAmBG,KAAK,WAA5C,UACI,mBAAGH,UAAU,qBADjB,uBCTpB,IAkBeM,EAlBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAEf,OACI,qCACI,iCACI,cAAC,EAAD,MAEJ,+BACKA,IAEL,uBACA,wBAAQP,UAAU,YAAlB,SACI,2D,QCNDQ,G,cATG,SAACC,GACf,OACI,qCACI,qBAAKT,UAAU,oBAAf,SAAoCS,EAAMC,QAC1C,qBAAKV,UAAU,uBAAf,SAAuCS,EAAME,gB,0FCa1C,MAnBf,yIACI,WAAyBC,GAAzB,iBAAAC,EAAA,6DACQC,EAAS,IACP,YAAkBF,EAAKG,YAC7BD,EAAM,OAAaF,EAAKI,OAH5B,SAIyBC,IAAMC,KAAK,yBAA0BJ,GAJ9D,cAIUK,EAJV,yBAKWA,GALX,2CADJ,qHASI,WAAgBP,GAAhB,iBAAAC,EAAA,6DACQC,EAAS,IACP,YAAkBF,EAAKG,YAC7BD,EAAM,UAAgBF,EAAKQ,MAAMC,UACjCP,EAAM,SAAeF,EAAKQ,MAAME,SAJpC,SAKyBL,IAAMC,KAAK,8BAA+BJ,GALnE,cAKUK,EALV,yBAMWA,GANX,2CATJ,+D,iBCKMI,E,kDAEF,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IAgDVe,iBAAmB,SAACJ,GAChB,EAAKK,SAAS,CAACL,MAAMA,IACrBM,EAAoBC,UAAU,CAAC,YAAe,EAAKZ,YAAa,MAASK,IAAQQ,MAAK,SAACC,GACnF,EAAKC,qBACL,EAAKC,4BACNC,OAAM,SAACC,GACNC,QAAQC,IAAI,aApDhB,EAAKC,MAAQ,CACTC,OAAQ,GACRjB,MAAO,GACPkB,kBAAkB,GAGtB,EAAKtB,OAASuB,aAAaC,QAAQ,WACnC,EAAKzB,YAAc0B,MAASC,OAAO,cAVpB,E,sDAcnB,WAAqB,IAAD,OAMhBhB,EAAoBI,mBAAmB,CAAC,YAAea,KAAK5B,YAAa,OAAU4B,KAAK3B,SAASY,MAAK,SAACC,GACnG,IAAIe,EAAgB,GACpBf,EAASjB,KAAKiC,SAAQ,SAAAC,GAClB,IAAIC,EAAO,GACXA,EAAK1B,UAAYyB,EAAQzB,UACzB0B,EAAKzB,SAAWwB,EAAQxB,SACxByB,EAAKC,WAAaF,EAAQE,WAC1BD,EAAK/C,UAAY+C,EAAKC,WAAa,GAAK,eACxCJ,EAAcK,KAAKF,MAEvB,EAAKtB,SAAS,CACVY,OAAQO,OAEbZ,OAAM,SAACC,GACNC,QAAQC,IAAI,c,+BAIpB,WACIQ,KAAKb,uB,qCAGT,WACIa,KAAKlB,SAAS,CAACa,kBAAiB,M,oCAEpC,WACIK,KAAKlB,SAAS,CAACa,kBAAiB,M,oBAgBpC,WAAU,IAAD,OACL,OACI,gCACI,eAACY,EAAA,EAAD,WACI,cAACA,EAAA,EAASC,OAAV,CAAiBzC,MAAM,eAAe0C,GAAG,WAAzC,SACI,mBAAGpD,UAAU,kBAGjB,cAACkD,EAAA,EAASG,KAAV,CAAeD,GAAG,oBAAlB,SACKT,KAAKP,MAAMC,OAAOiB,KAAI,SAAClC,EAAMmC,GAC1B,OAAO,cAACL,EAAA,EAASM,KAAV,CAAexD,UAAU,gBAAgByD,QAAY,kBAAM,EAAKjC,iBAAiBJ,IAAjF,SACH,sBAAMpB,UAAWoB,EAAMpB,UAAvB,SAAoCoB,EAAMC,sBAK1D,eAACqC,EAAA,EAAD,CAAOC,KAAMhB,KAAKP,MAAME,iBAAkBsB,OAAQ,kBAAM,EAAKC,2BAA7D,UACI,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,UAAcrB,KAAKP,MAAMhB,MAAME,aAEnC,cAACoC,EAAA,EAAMO,KAAP,UACKtB,KAAKP,MAAMhB,MAAMC,sB,GArFf6C,aA6FZC,cAAW5C,GC7FX,SAAS6C,IAEpB,MAA4BC,oBAAS,GAArC,6BAEA,OACI,cAACtE,EAAA,EAAD,CAAQC,UAAU,oBAAlB,SACI,eAACC,EAAA,EAAD,WACI,eAACF,EAAA,EAAOG,MAAR,CAAcF,UAAU,eAAeG,KAAK,IAA5C,UACI,mBAAGH,UAAU,qBADjB,0BAGA,eAACI,EAAA,EAAD,CAAKJ,UAAU,UAAf,UACI,cAACI,EAAA,EAAIC,KAAL,CAAUK,MAAM,eAAeV,UAAU,eAAzC,SACA,cAAC,EAAD,MAEA,cAACI,EAAA,EAAIC,KAAL,CAAUK,MAAM,UAAUV,UAAU,eAAeG,KAAK,UAAxD,SACI,mBAAGH,UAAU,kBAEjB,cAACI,EAAA,EAAIC,KAAL,CAAUK,MAAM,UAAUV,UAAU,eAAgByD,QAAU,WAAOlB,aAAa+B,WAAW,YAAcnE,KAAK,IAAhH,SACI,mBAAGH,UAAU,kC,oCChBtB,SAASuE,EAAQ9D,GAC5B,IAAM+D,EAAWC,cACjB,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAGA,OACI,eAAC,SAAD,2BAAYlE,GAAZ,cACI,cAAC,SAAO0C,OAAR,CAAeM,QAJF,kBAAMkB,GAASD,MAM5B,cAACE,EAAA,EAAD,CAAUC,GAAIH,EAAd,SACI,cAAC,SAAOI,SAAR,UACI,eAAC,SAAOC,IAAR,WACI,cAAC,SAAOvB,KAAR,CAAarD,KAAK,aAAlB,SACI,uBAAMH,UAAiC,eAAtBwE,EAASQ,SAA4B,kBAAoB,GAA1E,UACI,mBAAGhF,UAAU,0BADjB,kBAKJ,eAAC,SAAOI,IAAR,WACI,cAAC,SAAOoD,KAAR,CAAarD,KAAK,WAAlB,SACI,uBAAMH,UAAiC,aAAtBwE,EAASQ,SAA0B,kBAAoB,GAAxE,UACI,mBAAGhF,UAAU,iBADjB,gBAIJ,cAAC,SAAOwD,KAAR,CAAarD,KAAK,YAAlB,SACI,uBAAMH,UAAiC,cAAtBwE,EAASQ,SAA2B,kBAAoB,GAAzE,UACI,mBAAGhF,UAAU,qBADjB,iBAIJ,cAAC,SAAOwD,KAAR,CAAarD,KAAK,YAAlB,SACI,uBAAMH,UAAiC,cAAtBwE,EAASQ,SAA2B,kBAAoB,GAAzE,UACI,mBAAGhF,UAAU,qBADjB,kBAIJ,cAAC,SAAOwD,KAAR,CAAarD,KAAK,YAAlB,SACI,uBAAMH,UAAiC,cAAtBwE,EAASQ,SAA2B,kBAAoB,GAAzE,UACI,mBAAGhF,UAAU,wBADjB,iBAIJ,cAAC,SAAOwD,KAAR,CAAarD,KAAK,gBAAlB,SACI,uBAAMH,UAAiC,kBAAtBwE,EAASQ,SAA+B,kBAAoB,GAA7E,UACI,mBAAGhF,UAAU,mBADjB,qBAKJ,uBAEA,cAAC,SAAOwD,KAAR,CAAarD,KAAK,YAAlB,SACI,uBAAMH,UAAiC,cAAtBwE,EAASQ,SAA2B,kBAAoB,GAAzE,UACI,mBAAGhF,UAAU,iBADjB,aAIJ,cAAC,SAAOwD,KAAR,CAAarD,KAAK,YAAlB,SACI,uBAAMH,UAAiC,cAAtBwE,EAASQ,SAA2B,kBAAoB,GAAzE,UACI,mBAAGhF,UAAU,oBADjB,iBAIJ,cAAC,SAAOwD,KAAR,CAAarD,KAAK,iBAAlB,SACI,uBAAMH,UAAiC,mBAAtBwE,EAASQ,SAAgC,kBAAoB,GAA9E,UACI,mBAAGC,MAAM,wBADb,oC,oBC5BjBC,EA9BQ,SAAC,GAAe,IAAd3E,EAAa,EAAbA,SACf4E,EAAUC,cAUhB,OARAC,qBAAU,WACK9C,aAAaC,QAAQ,YAE5B2C,EAAQlC,KAAK,YAGnB,IAGE,qCACI,iCACI,cAAC,EAAD,MAEJ,+BACI,cAAChD,EAAA,EAAD,CAAWqF,OAAK,EAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAIC,IAChB,cAACH,EAAA,EAAD,CAAKC,GAAI,GAAT,SACKlF,eC5Bd,SAASqF,IACpB,OACI,gCACI,qBAAK5F,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,yGACA,oBAAIA,UAAU,SACd,mBAAGA,UAAU,OAAb,gDACA,mBAAGA,UAAU,yBAAyBG,KAAK,IAAI0F,KAAK,SAApD,8BAGR,sBAAK7F,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,oDAGR,uBACA,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,0BAAjB,gBACA,2FAEJ,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,iBAAjB,wBACA,4GAEJ,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,qBAAjB,yBACA,qIAGR,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,qBAAjB,mBACA,wHAEJ,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,wBAAjB,yBACA,oGAEJ,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,mBAAjB,6BACA,+HAIR,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,iBAAjB,gBACA,mHAEJ,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,oBAAjB,eACA,wIAEJ,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,mBAAjB,4BACA,mHAGR,qBAAKA,UAAU,6BAAf,SACI,sBAAKA,UAAU,WAAf,UACI,+BAAI,mBAAGA,UAAU,gBAAjB,oBACA,mI,2BCpCT,MAxBf,iIAEG,WAAiBY,GAAjB,eAAAC,EAAA,sEACwBI,IAAMC,KAAK,oBAAqBN,GADxD,cACSO,EADT,yBAEUA,EAAOP,MAFjB,2CAFH,qHAOG,WAAgBkF,GAAhB,eAAAjF,EAAA,sEACwBI,IAAMC,KAAK,0BAA2B4E,GAD9D,cACS3E,EADT,yBAEUA,EAAOP,MAFjB,2CAPH,yHAYG,WAAoBwC,GAApB,eAAAvC,EAAA,sEACwBI,IAAMC,KAAK,8BAA+B,CAAEkC,GAAIA,IADxE,cACSjC,EADT,yBAEUA,EAAOP,MAFjB,2CAZH,oHAiBG,WAAekF,GAAf,eAAAjF,EAAA,6DACCqB,QAAQC,IAAI2D,GADb,SAEsB7E,IAAM8E,IAAI,sBAAsBD,EAAK1C,GAAI0C,GAF/D,cAEO3E,EAFP,yBAGQA,EAAOP,MAHf,2CAjBH,+D,QCCe,SAASoF,IAEpB,IAAIb,EAAUC,cAEd,EAAkCf,mBAAS,CACvC4B,MAAO,GACPC,SAAU,KAFd,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAAsC/B,mBAAS,CAC3CgC,WAAY,GACZC,cAAe,KAFnB,mBAAOC,EAAP,KAAoBC,EAApB,KAKMC,EAAe,SAACC,GAClB,IAAIC,EAAQ,2BAAOR,GAAP,kBAAmBO,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QACxDgF,EAAaO,IAGXG,EAAY,uCAAG,WAAOJ,GAAP,iBAAA7F,EAAA,sDACjB6F,EAAEK,iBAEEC,GAAQ,EAEZR,EAAe,CACXH,WAAY,GACZC,cAAe,KAGfW,EAVa,eAUOV,GAED,KAApBJ,EAAUF,OACTgB,EAAcZ,WAAa,uBAC3BG,EAAeS,GACfD,GAAQ,IAGRC,EAAcZ,WAAa,GAC3BG,EAAeS,IAGO,KAAvBd,EAAUD,UACTe,EAAcX,cAAgB,0BAC9BE,EAAeS,GACfD,GAAQ,IAGRC,EAAcX,cAAgB,GAC9BE,EAAeS,KAGN,IAAVD,GACCE,EAAiBC,UAAUhB,GAAWvE,MAAK,SAACC,GACrCA,IACIsE,EAAUF,QAAUpE,EAASuF,OAASjB,EAAUD,WAAarE,EAASwF,UACrE9E,aAAa+E,QAAQ,UAAWzF,EAAS0F,KACzCC,MAAM,sBACNrC,EAAQlC,KAAK,eAEbuE,MAAM,0BAGfxF,OAAM,SAACC,GACNuF,MAAM,kBACNtF,QAAQC,IAAI,SAASF,MA7CZ,2CAAH,sDAkDVwF,EAAU,uCAAG,WAAOf,GAAP,eAAA7F,EAAA,sDACboF,EAAQyB,OAAO,qBACnBvB,EAAUF,MAAQA,EAClBiB,EAAiBC,UAAUhB,GAAWvE,MAAK,SAAC+F,GAGxC,GAFAzF,QAAQC,IAAIwF,GAETA,EAAI,CAGP,IAAIC,EAAa,CAGbC,eAAgB,aAChBC,eAAgB,yBAGhBC,WAAY,SACZC,WAAY/B,EAGZgC,QAAS,0BAA0BN,EAAIN,UAI3Ca,IAAQC,KAAK,sBAAuB,mBAAoBP,EAAY,8BAC/DhG,MAAK,SAAUC,GACZ2F,MAAM,cACNtF,QAAQC,IAAI,WAAYN,EAASuG,OAAQvG,EAASwG,SAEnD,SAAUpG,GACTuF,MAAM,UAAYvF,GAClBC,QAAQC,IAAI,YAAaF,UAGlCD,OAAM,SAACC,GACNuF,MAAM,kBACNtF,QAAQC,IAAI,SAASF,MApCR,2CAAH,sDAwClB,OACI,gCACI,sBAAKjC,UAAU,MAAf,cAAuB,uBAAvB,OAEA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,uBAAMsI,SAAUxB,EAAhB,UACI,uBACA,uBACA,wCAEA,sBAAK9G,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,mBACI,uBACIyI,KAAK,QACLzI,UAAU,eACV0I,YAAY,sBACZtF,GAAK,QACLyD,KAAO,QACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,SAGtC,mBAAG1G,UAAU,cAAb,SAA4BuG,EAAYF,aAExC,sBAAKrG,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,sBACI,uBACIyI,KAAK,WACLzI,UAAU,eACV0I,YAAY,wBACZtF,GAAK,WACLyD,KAAO,WACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,SAGtC,mBAAG1G,UAAU,cAAb,SAA4BuG,EAAYD,gBAExC,qBAAKtG,UAAU,aAAf,SACI,0BAIJ,cAAC4I,EAAA,EAAD,CAAQH,KAAK,SAASzI,UAAU,YAAhC,qBACA,mBAAGA,UAAU,6BAAb,SACK,8BAAK,oBAAGG,KAAK,IAAR,cAAa,mBAAGsD,QAASgE,EAAZ,0CAI/B,qBAAKzH,UAAU,mBChKhB,SAAS6I,IAEpB,IAAI1D,EAAUC,cAER0D,EAAa,wJACbC,EAAgB,iEAChBC,EAAc,kFACpB,EAAgD3E,mBAAS,CACrDwC,KAAM,GACNZ,MAAO,GACPgD,OAAO,GACPC,SAAS,GACTC,QAAQ,GACRjD,SAAU,GACVkD,gBAAiB,KAPrB,mBAAOC,EAAP,KAAyBC,EAAzB,KAUA,EAAoDjF,mBAAS,CACzDkF,UAAW,GACXlD,WAAY,GACZmD,YAAY,GACZC,cAAc,GACdC,aAAa,GACbpD,cAAe,GACfqD,qBAAsB,KAP1B,mBAAOC,EAAP,KAA2BC,EAA3B,KAUMpD,EAAe,SAACC,GAClB,IAAIoD,EAAe,2BAAOT,GAAP,kBAA0B3C,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QACtEkI,EAAoBQ,IAyHxB,OACI,gCACI,sBAAK9J,UAAU,MAAf,cAAuB,uBAAvB,OACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,uBAAMsI,SA5HD,SAAC5B,GAClBA,EAAEK,iBACF,IAAIC,GAAQ,EAEZ6C,EAAsB,CAClBN,UAAW,GACXlD,WAAY,GACZmD,YAAY,GACZC,cAAc,GACdC,aAAa,GACbpD,cAAe,GACfqD,qBAAsB,KAG1B,IAAII,EAAW,eAAOH,GAEO,KAA1BP,EAAiBxC,MAChBkD,EAAYR,UAAY,sBACxBM,EAAsBE,GACtB/C,GAAQ,IAGR+C,EAAYR,UAAY,GACxBM,EAAsBE,IAGI,KAA3BV,EAAiBpD,OAChB8D,EAAY1D,WAAa,uBACzBwD,EAAsBE,GACtB/C,GAAQ,GAGJ8B,EAAWkB,KAAKX,EAAiBpD,QAMjC8D,EAAY1D,WAAa,GACzBwD,EAAsBE,KANtBA,EAAY1D,WAAa,kBACzBwD,EAAsBE,GACtB/C,GAAQ,GAQe,KAA5BqC,EAAiBJ,QAChBc,EAAYP,YAAc,gCAC1BK,EAAsBE,GACtB/C,GAAQ,GAGJgC,EAAYgB,KAAKX,EAAiBJ,SAMlCc,EAAYP,YAAc,GAC1BK,EAAsBE,KANtBA,EAAYP,YAAc,2BAC1BK,EAAsBE,GACtB/C,GAAQ,GAQiB,KAA9BqC,EAAiBH,UAChBa,EAAYN,cAAgB,0BAC5BI,EAAsBE,GACtB/C,GAAQ,IAGR+C,EAAYN,cAAgB,GAC5BI,EAAsBE,IAGO,KAA9BV,EAAiBnD,UAChB6D,EAAYzD,cAAgB,0BAC5BuD,EAAsBE,GACtB/C,GAAQ,GAGJ+B,EAAciB,KAAKX,EAAiBnD,WAMpC6D,EAAYzD,cAAgB,GAC5BuD,EAAsBE,KANtBA,EAAYzD,cAAgB,qBAC5BuD,EAAsBE,GACtB/C,GAAQ,GAQwB,KAArCqC,EAAiBD,iBAChBW,EAAYJ,qBAAuB,0BACnCE,EAAsBE,GACtB/C,GAAQ,GAGJqC,EAAiBnD,WAAemD,EAAiBD,iBACjDW,EAAYJ,qBAAuB,4BACnCE,EAAsBE,GACtB/C,GAAQ,IAGR+C,EAAYJ,qBAAuB,GACnCE,EAAsBE,KAKjB,IAAV/C,GAECE,EAAiB+C,WAAWZ,GAAkBzH,MAAK,SAACC,GAC7CA,IACC2F,MAAM,6BACNrC,EAAQlC,KAAK,cAElBjB,OAAM,SAACC,GACNC,QAAQC,IAAI,SAASF,OAWjB,UACI,uBACA,uBACA,0CAEA,sBAAKjC,UAAU,aAAf,UACI,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,kBACA,uBACIyI,KAAK,OACLzI,UAAU,eACV0I,YAAY,aACZtF,GAAK,OACLyD,KAAO,OACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBL,eAGnD,sBAAKvJ,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,mBACI,uBACIyI,KAAK,OACLzI,UAAU,eACV0I,YAAY,cACZtF,GAAK,QACLyD,KAAO,QACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBvD,gBAGnD,sBAAKrG,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,4BACI,uBACIyI,KAAK,OACLzI,UAAU,eACV0I,YAAY,sBACZtF,GAAK,SACLyD,KAAO,SACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBJ,iBAGnD,sBAAKxJ,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,+BACI,uBACIyI,KAAK,OACLzI,UAAU,eACV0I,YAAY,8BACZtF,GAAK,WACLyD,KAAO,WACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBH,mBAInD,sBAAKzJ,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,uBACI,uBACIC,KAAK,OACLzI,UAAU,eACV0I,YAAY,qBACZtF,GAAK,UACLyD,KAAO,UACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBF,kBAGnD,sBAAK1J,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,sBACI,uBACIyI,KAAK,WACLzI,UAAU,eACV0I,YAAY,iBACZtF,GAAK,WACLyD,KAAO,WACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBtD,mBAGnD,sBAAKtG,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,8BACI,uBACIyI,KAAK,WACLzI,UAAU,eACV6G,KAAK,kBACLzD,GAAG,kBACHsF,YAAY,wBACZC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBD,0BAGnD,cAACf,EAAA,EAAD,CAAQsB,QAAQ,UAAUzB,KAAK,SAASzI,UAAW,YAAnD,6BAGR,qBAAKA,UAAU,mB,qBCxOhB,MA1Bf,4HAEI,WAAYY,GAAZ,eAAAC,EAAA,sEACyBI,IAAMkJ,IAAI,uBAAuB,CAAEC,OAAQxJ,IADpE,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CAFJ,0HAQI,WAAqBA,GAArB,eAAAC,EAAA,sEACyBI,IAAMkJ,IAAI,iCAAiC,CAAEC,OAAQxJ,IAD9E,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CARJ,8HAcI,WAAyBA,GAAzB,eAAAC,EAAA,sEACyBI,IAAMkJ,IAAI,sCAAsC,CAAEC,OAAQxJ,IADnF,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CAdJ,wHAoBI,WAAmBA,GAAnB,eAAAC,EAAA,sEACyBI,IAAMkJ,IAAI,+BAA+B,CAAEC,OAAQxJ,IAD5E,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CApBJ,+DCEe,SAASyJ,IACpB,MAAyBhG,mBAAS,CAC9BiG,QAAS,EACTC,SAAS,EACTC,SAAS,EACTC,aAAa,IAJjB,mBAAOC,EAAP,KAAaC,EAAb,KAMA,EAAuCtG,mBAAS,IAAhD,mBAAOuG,EAAP,KAAoBC,EAApB,KACA,EAA+BxG,mBAAS,IAAxC,mBAAOyG,EAAP,KAAgBC,EAAhB,KACA,EAA6B1G,mBAAS,IAAtC,mBAAO2G,EAAP,KAAeC,EAAf,KAmDA,OAlDA5F,qBAAU,WACN6F,EAAiBR,MAAM,CAAC,OAAUnI,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAIgD,EAAShD,EAAI/G,SAC7FsK,EAAiBC,eAAe,CAAC,OAAU5I,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAKkD,EAAgB,CACtGO,OAAQzD,EAAI/G,KAAK0J,QACjBe,SAAU,CACN,CACIC,MAAO,gBACP1K,KAAM+G,EAAI/G,KAAK2J,SACfgB,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,SAIzBN,EAAiBO,mBAAmB,CAAC,OAAUlJ,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAIsD,EAAW,CACpGG,OAAQzD,EAAI/G,KAAK0J,QACjBe,SAAU,CACN,CACIC,MAAO,qBACP1K,KAAM+G,EAAI/G,KAAK8K,cACfH,gBAAiB,qBAErB,CACID,MAAO,oBACP1K,KAAO+G,EAAI/G,KAAK+K,aAChBJ,gBAAiB,2BAI7BL,EAAiBU,aAAa,CAAC,OAAUrJ,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAIoD,EAAY,CAC/FK,OAAQzD,EAAI/G,KAAKiL,MACjBR,SAAU,CACN,CACIC,MAAO,oBACP1K,KAAM+G,EAAI/G,KAAKkL,UACfC,MAAM,EACNR,gBAAiB,oBACjBS,YAAa,mCAK3B,IAGE,sBAAKhM,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,YAAYC,SAAS,OAE3C,qBAAKX,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,2DAAf,UACI,qBAAKiM,MAAO,CAACC,SAAS,QAASlM,UAAU,OAAzC,SAAiD0K,EAAMJ,UACvD,sBAAKtK,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,qBACA,8BAAK,mBAAGG,KAAK,WAAR,gCAIjB,qBAAKH,UAAU,oBAAf,SACI,sBAAKA,UAAU,2DAAf,UACI,qBAAKiM,MAAO,CAACC,SAAS,QAASlM,UAAU,OAAzC,SAAiD0K,EAAMH,WACvD,sBAAKvK,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,sBACA,8BAAK,mBAAGG,KAAK,YAAR,gCAIjB,qBAAKH,UAAU,oBAAf,SACI,sBAAKA,UAAU,2DAAf,UACI,qBAAKiM,MAAO,CAACC,SAAS,QAASlM,UAAU,OAAzC,SAAiD0K,EAAMF,WACvD,sBAAKxK,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,sBACA,8BAAK,mBAAGG,KAAK,YAAR,gCAIjB,qBAAKH,UAAU,oBAAf,SACI,sBAAKA,UAAU,2DAAf,UACI,qBAAKiM,MAAO,CAACC,SAAS,QAASlM,UAAU,OAAzC,SAAiD0K,EAAMD,eACvD,sBAAKzK,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,0BACA,8BAAK,mBAAGG,KAAK,gBAAR,mCAKrB,uBACA,sBAAKH,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAACmM,EAAA,EAAD,UACI,eAACA,EAAA,EAAKlI,KAAN,WACI,cAACkI,EAAA,EAAKnI,MAAN,uCACA,cAAC,IAAD,CAAUpD,KAAMgK,EAAcwB,QAAS,CAAEC,YAAY,YAIjE,sBAAKrM,UAAU,WAAf,UACI,cAACmM,EAAA,EAAD,UACI,cAACA,EAAA,EAAKlI,KAAN,UACI,cAAC,IAAD,CAAMrD,KAAMkK,EAAUsB,QAAS,CAAEC,YAAY,SAGrD,uBACA,cAACF,EAAA,EAAD,UACI,cAACA,EAAA,EAAKlI,KAAN,UACI,cAAC,IAAD,CAAKrD,KAAMoK,EAASoB,QAAS,CAAEC,YAAY,uB,yCCShEC,GAnIG,SAAC7L,GAEf,IAAM8L,EAAU9L,EAAM8L,QAChB3L,EAAOH,EAAMG,KACb4L,EAA6B,SAAlB/L,EAAM+L,SACjBC,EAAmC,SAArBhM,EAAMgM,YACpBC,EAAgBC,mBAAS,CAAEJ,UAAS3L,OAAMgM,aAAc,CAAEC,SAAU,IACtEC,kBACAC,YACAC,iBAEAC,EAeAP,EAfAO,cACAC,EAcAR,EAdAQ,kBACAC,EAaAT,EAbAS,aACAC,EAYAV,EAZAU,KACAC,EAWAX,EAXAW,WACAC,EAUAZ,EAVAY,gBACAC,EASAb,EATAa,KACAC,EAQAd,EARAc,gBACAC,EAOAf,EAPAe,YACAC,EAMAhB,EANAgB,UACAC,EAKAjB,EALAiB,SACAC,EAIAlB,EAJAkB,SACAC,EAGAnB,EAHAmB,aACAC,EAEApB,EAFAoB,YAdJ,EAgBIpB,EADAtK,MAASyK,EAfb,EAeaA,SAAUkB,EAfvB,EAeuBA,aAGvB,OACI,gCACI,eAACxI,EAAA,EAAD,WAEI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEuI,KAAM,GAAKhO,UAAU,OAAhC,SACCwM,EAEO,cAAC,WAAD,CAAS5L,KAAMA,EAAMqN,SAAU,aAAcjO,UAAU,qCAAqC4G,OAAO,SAAnG,wBAID,+BAKN6F,EACI,cAACjH,EAAA,EAAD,CAAKC,GAAI,CAAEuI,KAAM,EAAGE,OAAQ,GAA5B,SACG,cAAC3F,EAAA,EAAK4F,MAAN,UACI,cAAC5F,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,SAASC,YAAY,SAC1BtH,MAAO2M,GAAgB,GACvBpF,SAAU,SAAAjC,GAAC,OAAI4G,EAAgB5G,EAAEE,OAAOxF,cAG3D,gCAKX,qBAAKpB,UAAU,mBAAf,SACI,eAACqO,GAAA,EAAD,yBAAOC,UAAQ,EAACC,SAAO,GAAKtB,KAA5B,cACI,gCACCE,EAAa7J,KAAI,SAAAkL,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQpL,KAAI,SAAAqL,GAAM,OAC3B,+CAAQA,EAAOC,eAAeD,EAAOE,yBAArC,cACKF,EAAOG,OAAO,UACf,+BAAOH,EAAOI,SACVJ,EAAOK,aACH,gBAAO,gBACT,oBAMtB,iDAAW9B,KAAX,aACCK,EAAKjK,KAAI,SAAC2L,EAAKC,GAEZ,OADA7B,EAAW4B,GAEP,8CAAQA,EAAIE,eAAZ,aACKF,EAAIG,MAAM9L,KAAI,SAAC+L,GACZ,OACI,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKP,OAAO,6BAWtE,eAACvJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC+C,EAAA,EAAK4F,MAAN,UACI,cAAC5F,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,SAASuG,MAAO,CAAEsD,MAAO,SAC5BnO,MAAOyL,EACPlE,SAAU,SAACjC,GACPoH,EAAY0B,OAAO9I,EAAEE,OAAOxF,SAH9C,SAKK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIkC,KAAI,SAACuJ,GAAD,OACzB,yBAAuBzL,MAAOyL,EAA9B,kBACUA,IADGA,YAO7B,cAACrH,EAAA,EAAD,UACI,eAACiK,GAAA,EAAD,CAAYzP,UAAU,sBAAtB,UACI,cAACyP,GAAA,EAAWC,MAAZ,CAAkBjM,QAAS,kBAAMkK,EAAS,IAAIgC,UAAWnC,IACzD,cAACiC,GAAA,EAAWG,KAAZ,CAAiBnM,QAAS,kBAAMoK,KAAgB8B,UAAWnC,IAC1DqC,MAAMnC,GAAW3B,OAAOzI,KAAI,SAACwM,EAAEZ,GAAH,OACzB,cAACO,GAAA,EAAWjM,KAAZ,CAAiBC,QAAS,kBAAMkK,EAASuB,IAAzC,SAA8CA,EAAE,OAEpD,cAACO,GAAA,EAAWM,KAAZ,CAAiBtM,QAAS,kBAAMmK,KAAY+B,UAAWlC,IACvD,cAACgC,GAAA,EAAWO,KAAZ,CAAiBvM,QAAS,kBAAMkK,EAASD,EAAY,IAAIiC,UAAWlC,YAMhF,cAAClI,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,4CAAeqH,EAAf,eAAqCO,EAAK6C,OAA1C,mBC7EL,I,OAAA,IA/Cf,2HAKI,WAAWrP,GAAX,iBAAAC,EAAA,6DACQC,EAAS,IACP,OAAaF,EAAKI,OAF5B,SAGyBC,IAAMC,KAAK,gBAAgBJ,GAHpD,cAGUK,EAHV,yBAIWA,EAAOP,MAJlB,2CALJ,+GAeI,WAAUwC,GAAV,eAAAvC,EAAA,sEACyBI,IAAMkJ,IAAI,iBAAiB/G,GADpD,cACUjC,EADV,yBAEWA,EAAOP,MAFlB,2CAfJ,+GAuBI,WAAUA,GAAV,eAAAC,EAAA,sEAEyBI,IAAMC,KAAK,oBAAoBN,GAFxD,cAEUO,EAFV,yBAGWA,EAAOP,MAHlB,2CAvBJ,kHAgCI,WAAaA,GAAb,eAAAC,EAAA,sEAEyBI,IAAM8E,IAAI,wBAAwBnF,EAAK2G,IAAI3G,GAFpE,cAEUO,EAFV,yBAGWA,EAAOP,MAHlB,2CAhCJ,kHAyCI,WAAaA,GAAb,eAAAC,EAAA,sEACyBI,IAAMiP,OAAO,wBAAwBtP,EAAK2G,IAAI3G,GADvE,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CAzCJ,gEC0BgB,OA3Bf,oIACI,WAAoBI,GAApB,eAAAH,EAAA,sEACyBI,IAAMC,KAAK,sBAAuB,CAACF,OAAQA,IADpE,cACUG,EADV,yBAEWA,GAFX,2CADJ,sHAMI,WAAiBgP,GAAjB,eAAAtP,EAAA,sEACyBI,IAAMC,KAAK,oBAAqBiP,GADzD,cACUhP,EADV,yBAEWA,GAFX,2CANJ,yHAWI,WAAoBgP,GAApB,eAAAtP,EAAA,sEACyBI,IAAMC,KAAK,uBAAyBiP,GAD7D,cACUhP,EADV,yBAEWA,GAFX,2CAXJ,wHAgBI,WAAmBiP,GAAnB,eAAAvP,EAAA,sEACwBI,IAAMC,KAAK,mBAAoBkP,GADvD,cACSjP,EADT,yBAEWA,GAFX,2CAhBJ,wHAqBI,WAAmBkP,GAAnB,eAAAxP,EAAA,sEACwBI,IAAMC,KAAK,sBAAuBmP,GAD1D,cACSlP,EADT,yBAEUA,GAFV,2CArBJ,+DCqGcmP,GAvFC,WAEZ,IAAInL,EAAUC,cAEd,EAAgCf,mBAAS,CACrCwC,KAAM,GACNZ,MAAO,GACPgD,OAAO,GACPC,SAAS,GACTC,QAAQ,GACRjD,SAAU,KANd,mBAAOqK,EAAP,KAAiBC,EAAjB,KASAnL,qBAAU,WACN6B,EAAiBuJ,cAAclO,aAAaC,QAAQ,YAAYZ,MAAK,SAACC,GAClEK,QAAQC,IAAIN,GACTA,GACC2O,EAAY,CACR3J,KAAOhF,EAAS6O,KAChBzK,MAAQpE,EAASuF,MACjB6B,OAASpH,EAAS8O,UAClBzH,SAAWrH,EAAS+O,gBACpBzH,QAAUtH,EAASgP,QACnB3K,SAAWrE,EAASwF,WAG5BnF,QAAQC,IAAIoO,MACbvO,OAAM,SAACC,GACNuF,MAAM,kBACNtF,QAAQC,IAAI,SAASF,QAE3B,IAOF,OACI,gCACI,qBAAKjC,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,cAEtB,qBAAKV,UAAU,yBAAf,SACQ,sBAAKA,UAAU,eAAf,UACI,cAACuF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKxF,UAAU,aAAf,SACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,qBAAqByD,QAd/C,SAACiD,GACjBA,EAAEK,iBACF5B,EAAQlC,KAAK,CAAE+B,SAAU,kBAYD,sBAKR,uBACA,cAACO,EAAA,EAAD,CAAKvF,UAAU,yBAAf,SACI,cAACwF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAAC4I,GAAA,EAAD,CAAOC,UAAQ,EAACwC,OAAK,EAArB,SACI,kCACA,+BACI,uCACA,6BAAKP,EAAS1J,UAElB,+BACI,6CACA,6BAAK0J,EAAStH,YAElB,+BACI,wCACA,6BAAKsH,EAAStK,WAElB,+BACI,2CACA,6BAAKsK,EAASrH,cAElB,+BACI,0CACA,6BAAKqH,EAASpH,+BCiKvC4H,GA3PK,WAChB,IAAI5L,EAAUC,cAEd,EAAgCf,mBAAS,CACrCwC,KAAM,GACNZ,MAAO,GACPgD,OAAO,GACPC,SAAS,GACTC,QAAQ,GACRjD,SAAU,GACV9C,GAAIb,aAAaC,QAAQ,aAP7B,mBAAO+N,EAAP,KAAiBC,EAAjB,KAUAnL,qBAAU,WACN6B,EAAiBuJ,cAAclO,aAAaC,QAAQ,YAAYZ,MAAK,SAACC,GAClEK,QAAQC,IAAIN,GACTA,GACC2O,EAAY,CACR3J,KAAOhF,EAAS6O,KAChBzK,MAAQpE,EAASuF,MACjB6B,OAASpH,EAAS8O,UAClBzH,SAAWrH,EAAS+O,gBACpBzH,QAAUtH,EAASgP,QACnB3K,SAAWrE,EAASwF,WAG5BnF,QAAQC,IAAIoO,MACbvO,OAAM,SAACC,GACNuF,MAAM,kBACNtF,QAAQC,IAAI,SAASF,QAE3B,IAEF,IAAM6G,EAAa,wJACbC,EAAgB,iEAChBC,EAAc,kFACpB,EAAgD3E,mBAAS,CACrDwC,KAAM,GACNZ,MAAO,GACPgD,OAAO,GACPC,SAAS,GACTC,QAAQ,GACRjD,SAAU,GACV9C,GAAIb,aAAaC,QAAQ,aAP7B,mBAAO6G,EAAP,KAAyBC,EAAzB,KAUA,EAAoDjF,mBAAS,CACzDkF,UAAW,GACXlD,WAAY,GACZmD,YAAY,GACZC,cAAc,GACdC,aAAa,GACbpD,cAAe,KANnB,mBAAOsD,EAAP,KAA2BC,EAA3B,KASMpD,EAAe,SAACC,GAClB,IAAIoD,EAAe,2BAAOT,GAAP,kBAA0B3C,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QACtEkI,EAAoBQ,IA4FxB,OACI,gCACI,sBAAK9J,UAAU,MAAf,cAAuB,uBAAvB,OACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,uBAAMsI,SA/FD,SAAC5B,GAClBA,EAAEK,iBACF,IAAIC,GAAQ,EAER+C,EAAW,eAAOH,GAEO,KAA1BP,EAAiBxC,KAChBwC,EAAiBxC,KAAO0J,EAAS1J,MAGjCkD,EAAYR,UAAY,GACxBM,EAAsBE,IAGI,KAA3BV,EAAiBpD,MAChBoD,EAAiBpD,MAAQsK,EAAStK,MAG9B6C,EAAWkB,KAAKX,EAAiBpD,QAMjC8D,EAAY1D,WAAa,GACzBwD,EAAsBE,KANtBA,EAAY1D,WAAa,kBACzBwD,EAAsBE,GACtB/C,GAAQ,GAQe,KAA5BqC,EAAiBJ,OAChBI,EAAiBJ,OAASsH,EAAStH,OAG/BD,EAAYgB,KAAKX,EAAiBJ,SAMlCc,EAAYP,YAAc,GAC1BK,EAAsBE,KANtBA,EAAYP,YAAc,2BAC1BK,EAAsBE,GACtB/C,GAAQ,GAQiB,KAA9BqC,EAAiBH,SAChBG,EAAiBH,SAAWqH,EAASrH,UAGrCa,EAAYN,cAAgB,GAC5BI,EAAsBE,IAGM,KAA7BV,EAAiBF,QAChBE,EAAiBF,QAAUoH,EAASpH,SAGpCY,EAAYL,aAAe,GAC3BG,EAAsBE,IAIO,KAA9BV,EAAiBnD,SAChBmD,EAAiBnD,SAAWqK,EAASrK,SAGjC6C,EAAciB,KAAKX,EAAiBnD,WAMpC6D,EAAYzD,cAAgB,GAC5BuD,EAAsBE,KANtBA,EAAYzD,cAAgB,qBAC5BuD,EAAsBE,GACtB/C,GAAQ,IAQH,IAAVA,GACCE,EAAiB8J,SAAS3H,GAAkBzH,MAAK,SAACC,GAC9CK,QAAQC,IAAIN,GACTA,IACC2F,MAAM,qBACNrC,EAAQlC,KAAK,gBAElBjB,OAAM,SAACC,GACNC,QAAQC,IAAI,SAASF,OAWjB,UACI,uBACA,uBACA,8CACA,uBACA,uBAEA,sBAAKjC,UAAU,aAAf,UACI,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,kBACA,uBACIyI,KAAK,OACLzI,UAAU,eACV0I,YAAa6H,EAAS1J,KACtBzD,GAAK,OACLyD,KAAO,OACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBL,eAGnD,sBAAKvJ,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,mBACI,uBACIyI,KAAK,OACLzI,UAAU,eACV0I,YAAa6H,EAAStK,MACtB7C,GAAK,QACLyD,KAAO,QACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBvD,gBAGnD,sBAAKrG,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,4BACI,uBACIyI,KAAK,OACLzI,UAAU,eACV0I,YAAa6H,EAAStH,OACtB7F,GAAK,SACLyD,KAAO,SACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBJ,iBAGnD,sBAAKxJ,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,+BACI,uBACIyI,KAAK,OACLzI,UAAU,eACV0I,YAAa6H,EAASrH,SACtB9F,GAAK,WACLyD,KAAO,WACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBH,mBAInD,sBAAKzJ,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,uBACI,uBACIC,KAAK,OACLzI,UAAU,eACV0I,YAAa6H,EAASpH,QACtB/F,GAAK,UACLyD,KAAO,UACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBF,kBAGnD,sBAAK1J,UAAU,aAAf,UACA,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,sBACI,uBACIyI,KAAK,WACLzI,UAAU,eACV0I,YAAa6H,EAASrK,SACtB9C,GAAK,WACLyD,KAAO,WACP8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,MAElC,mBAAG1G,UAAU,cAAb,SAA4B4J,EAAmBtD,mBAEnD,uBAEA,cAACsC,EAAA,EAAD,CAAQsB,QAAQ,UAAUzB,KAAK,SAASzI,UAAW,YAAnD,iCAGR,qBAAKA,UAAU,oBCvMf,I,OAAA,IA9Cf,8HACI,WAAciR,GAAd,eAAApQ,EAAA,sEACyBI,IAAMC,KAAK,qBAAuB+P,GAD3D,cACU9P,EADV,yBAEWA,GAFX,2CADJ,sHAMI,WAAiBP,GAAjB,eAAAC,EAAA,sEACyBI,IAAMC,KAAK,qBAAsBN,GAD1D,cACUO,EADV,yBAEWA,GAFX,2CANJ,uHAWI,WAAkBP,GAAlB,eAAAC,EAAA,sEACyBI,IAAMC,KAAK,4BAA6BN,GADjE,cACUO,EADV,yBAEWA,GAFX,2CAXJ,yHAgBI,WAAoBP,GAApB,eAAAC,EAAA,sEACyBI,IAAMC,KAAK,2BAA2BN,GAD/D,cACUO,EADV,yBAEWA,GAFX,2CAhBJ,0HAqBI,WAAqBP,GAArB,eAAAC,EAAA,sEACwBI,IAAMC,KAAK,8BAA8BN,GADjE,cACSO,EADT,yBAEUA,GAFV,2CArBJ,yHA0BG,WAAoBP,GAApB,eAAAC,EAAA,sEACyBI,IAAMC,KAAK,8BAA8BN,GADlE,cACUO,EADV,yBAEWA,GAFX,2CA1BH,yHA+BG,WAAoBP,GAApB,eAAAC,EAAA,sEACyBI,IAAMC,KAAK,8BAA8BN,GADlE,cACUO,EADV,yBAEWA,GAFX,2CA/BH,wHAmCG,WAAmBP,GAAnB,eAAAC,EAAA,sEACyBI,IAAMC,KAAK,yBAAyBN,GAD7D,cACUO,EADV,yBAEWA,GAFX,2CAnCH,yHAuCG,WAAoBP,GAApB,eAAAC,EAAA,sEACyBI,IAAMC,KAAK,+BAA+BN,GADnE,cACUO,EADV,yBAEWA,GAFX,2CAvCH,gE,UCeY+P,GAAb,kDAEI,WAAYzQ,GAAQ,IAAD,8BACf,cAAMA,IAsGV0Q,cAAgB,SAACC,GACb,EAAK3P,SAAL,eACK2P,EAAMxK,OAAOC,KAAOuK,EAAMxK,OAAOxF,SAzGvB,EA8GnBiQ,gBAAkB,SAACD,GACf,IAAIE,GAAU,EAKd,OAJK,EAAKlP,MAAMmP,UACZ,EAAK9P,SAAS,CAAE+P,aAAc,wBAC9BF,GAAU,GAEPA,GApHQ,EAuHnBG,aAAe,SAACL,GACZ,IAAIE,GAAU,EAWd,OATK,EAAKI,sBACNJ,GAAU,GAET,EAAKK,oBACNL,GAAU,GAET,EAAKM,oBACNN,GAAU,GAEPA,GAnIQ,EAsInBM,gBAAkB,SAACR,GACf,IAAIE,GAAU,EACd,GAAI,EAAKlP,MAAMyP,QAAS,CAEpB,IAAMC,EAAe,IAAIC,KAAK,EAAK3P,MAAMyP,SACnCG,EAAU,IAAID,KAAK,EAAK3P,MAAM4P,SAEhCF,EADU,IAAIC,MAEd,EAAKtQ,SAAS,CAAEwQ,aAAc,mDAC9BX,GAAU,GACHU,EAAUF,GACjB,EAAKrQ,SAAS,CAAEwQ,aAAc,wDAC9BX,GAAU,GAGV,EAAK7P,SAAS,CAAEwQ,aAAc,UAGlC,EAAKxQ,SAAS,CAAEwQ,aAAc,yBAC9BX,GAAU,EAEd,OAAOA,GA3JQ,EA6JnBI,kBAAoB,SAACN,GACjB,IAAIE,GAAU,EACd,GAAI,EAAKlP,MAAM8P,QAAS,CAEpB,IAAMJ,EAAe,IAAIC,KAAK,EAAK3P,MAAM8P,SACnCF,EAAU,IAAID,KAAK,EAAK3P,MAAM4P,SAEhCF,EADU,IAAIC,MAEd,EAAKtQ,SAAS,CAAE0Q,aAAc,uCAC9Bb,GAAU,GACHU,EAAUF,GACjB,EAAKrQ,SAAS,CAAE0Q,aAAc,0CAC9Bb,GAAU,GAGV,EAAK7P,SAAS,CAAE0Q,aAAc,UAGlC,EAAK1Q,SAAS,CAAE0Q,aAAc,2BAC9Bb,GAAU,EAEd,OAAOA,GAlLQ,EAqLnBK,gBAAkB,SAACP,GACf,IAAIE,GAAU,EACRc,EAAQ,IAAIL,KACZF,EAAU,IAAIE,KAAK,EAAK3P,MAAMyP,SAC9BG,EAAU,IAAID,KAAK,EAAK3P,MAAM4P,SAYpC,OAXIH,GAAWG,EACPH,EAAUG,GAAWI,EAAQJ,GAC7B,EAAKvQ,SAAS,CAAE4Q,aAAc,6DAC9Bf,GAAU,GAEV,EAAK7P,SAAS,CAAE4Q,aAAc,MAGlC,EAAK5Q,SAAS,CAAE4Q,aAAc,yBAC9Bf,GAAU,GAEPA,GArMQ,EAyMnBgB,mBAAqB,SAAClB,GAClB,IAAIE,GAAU,EAQd,OAPK,EAAKlP,MAAMmQ,WAGL,EAAKnQ,MAAMmQ,WAAa,IAC/B,EAAK9Q,SAAS,CAAE+Q,gBAAiB,yCACjClB,GAAU,IAJV,EAAK7P,SAAS,CAAE+Q,gBAAiB,4BACjClB,GAAU,GAKPA,GAlNQ,EAqNnBmB,aAAe,SAACrB,GACZ,IAAIE,GAAU,EAWd,OATK,EAAKD,oBACNC,GAAU,GAET,EAAKG,iBACNH,GAAU,GAET,EAAKgB,uBACNhB,GAAU,GAEPA,GAjOQ,EAqOnBoB,gBAAkB,SAACtB,GACfA,EAAMrK,iBACN,EAAKtF,SAAS,CAAEkR,eAAgB,KAEhC,EAAKlR,SAAS,CAAEmR,aAAcb,KAAKc,QAC/B,EAAKJ,gBACLK,GAAgBC,QAAQ,EAAK3Q,OAAOR,MAAK,SAACC,GACtC,GAAuB,KAAnBA,EAASuG,OAAe,CAExB,EAAK3G,SAAS,CAAEuR,KAAMnR,EAASjB,KAAKO,SACpC,IAAIwR,EAAiB,GACjBM,EAAY,EAChBpR,EAASjB,KAAKO,OAAO0B,SAAQ,SAAAoM,GAEzB,IAAIrO,EAAO,GACPsS,EAAY,IAAInB,KAAK9C,EAAIiD,SAEzBiB,EAAU,IAAIpB,KAAK9C,EAAImE,OAEvBC,EAAUC,KAAKC,OAAQJ,EAAYD,GAAc,KAAMM,QAAQ,GAE/DC,EAAUH,KAAKC,MAAMF,EAAU,IAAIG,QAAQ,GAC3CE,EAAOJ,KAAKC,MAAME,EAAU,IAAID,QAAQ,GAChC,OAARE,GAAiBA,IACjB9S,EAAKwC,GAAK6L,EAAI1H,IACd3G,EAAK+S,YAAc1E,EAAI2E,KACvBhT,EAAKiT,MAAQH,EACb9S,EAAKkT,MAAQ,EAAK1R,MAAMmQ,WAAamB,EACrCT,GAAwBrS,EAAKkT,MAC7BnB,EAAe1P,KAAKrC,OAKC,GAAzB+R,EAAe1C,SACf,EAAKxO,SAAS,CAAEkR,eAAgB,EAAKvQ,MAAMuQ,eAAeoB,OAAOpB,GAAiBqB,UAAU,IAC5F,EAAKvS,SAAS,CAAEwS,UAAWhB,KAGS,GAApC,EAAK7Q,MAAMuQ,eAAe1C,QAC1BzI,MAAM,qEAIfxF,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAlRL,EA2RnBiS,YAAc,SAAC9C,GACP,EAAKhP,MAAM4R,SACP,EAAKvB,gBAELK,GAAgBqB,WAAW,EAAK/R,OAAOR,MAAK,SAACC,GAElB,KAAnBA,EAASuG,QAET,EAAK3G,SAAS,CAAE2S,MAAM,IACtB5M,MAAM,qBAENA,MAAM,mCAEXxF,OAAM,SAACC,GACNuF,MAAM,mCAIdA,MAAM,6DA7SK,EAkTnB6M,gBAAkB,SAACjD,GACf,GAAI,EAAKhP,MAAMgS,KAAM,CACjB,IAAIjE,EAAS,GACToB,EAAU,GACV+C,EAAM,IAAIC,KAAM,IAAK,MACzB,EAAKnS,MAAMmI,SAAS1H,SAAQ,SAAA1B,GACpBA,EAAOoG,KAAO,EAAKnF,MAAMmP,UACzBpB,EAAShP,EAAOgP,OAChBoB,EAAUpQ,EAAOT,UAIzB,IAAMuQ,EAAOuD,IAAOzC,KAAKc,OAAOnQ,OAAO,cACvC4R,EAAIjM,KAAK,IAAK,GAAI,WAClBiM,EAAIjM,KAAK,GAAI,GAAI,iBAAmBkJ,GACpC+C,EAAIjM,KAAK,GAAI,GAAI,gBAAkB8H,GACnCmE,EAAIjM,KAAK,GAAI,GAAI,cAAgB,EAAKjG,MAAM8P,SAC5CoC,EAAIjM,KAAK,IAAK,GAAI,YAAc,EAAKjG,MAAM4P,SAC3CsC,EAAIjM,KAAK,GAAI,IAAK,qBAAuB4I,GACzCqD,EAAIjM,KAAK,GAAI,IAAK,qBAAuB,EAAKjG,MAAMyP,SACpDyC,EAAIjM,KAAK,GAAI,IAAK,gBAAkB,EAAKjG,MAAMmQ,WAAa,OAC5D+B,EAAIjM,KAAK,GAAI,IAAK,iBAAmB,EAAKjG,MAAM6R,UAAY,OAC5DK,EAAIjM,KAAK,GAAI,IAAK,MAClBiM,EAAIjM,KAAK,GAAI,IAAK,gBAClB,IAAI6G,EAAI,IACR,EAAK9M,MAAMuQ,eAAe9P,SAAQ,SAAA1B,GAE9BmT,EAAIjM,KAAK,GAAI6G,EAAG,SAAW/N,EAAOwS,aAClCzE,GAAQ,GACRoF,EAAIjM,KAAK,GAAI6G,EAAG,UAAY/N,EAAO0S,OACnC3E,GAAQ,GACRoF,EAAIjM,KAAK,GAAI6G,EAAG,UAAY/N,EAAO2S,OACnC5E,GAAQ,GACRoF,EAAIjM,KAAK,GAAI6G,EAAG,MAChBA,GAAQ,MAGZoF,EAAIG,QAAQ,UACZH,EAAIF,KAAK,sBAGT5M,MAAM,2CA3VK,EAgWnBkN,YAAc,SAAC7M,EAAgB8M,EAAWC,EAAaC,EAAS9M,GAE5D,IAAMkJ,EAAOuD,IAAOzC,KAAKc,OAAOnQ,OAAO,cAInCkF,EAAa,CAEbC,eAAgBA,EAChBC,eAAgB6M,EAGhB5M,WAAYA,EACZC,WAAY6M,EAGZ5M,QAbY,+DAAiE2M,EAAc,iBAAmB,EAAKxS,MAAM8P,QACzH,eAAiB,EAAK9P,MAAM4P,QAAU,gBAAkB,EAAK5P,MAAMyP,QAAU,sBAAwBZ,EAAO,mBAAqB,EAAK7O,MAAMmQ,WAAa,YAAc,EAAKnQ,MAAM6R,WAetL/L,IAAQC,KAAK,sBAAuB,mBAAoBP,EAAY,8BAC/DhG,MAAK,SAAUC,GACZ2F,MAAM,iBACP,SAAUvF,GACTuF,MAAM,UAAYvF,GAClBC,QAAQC,IAAIF,OAxXL,EA6XnB6S,UAAY,SAACpO,GACT,IAAIiO,EAAY,GACZ9M,EAAiB,GACjBE,EAAa,GACb8M,EAAU,GACVD,EAAc,GAElB,EAAKxS,MAAMmI,SAAS1H,SAAQ,SAAA1B,GACpBA,EAAOoG,KAAO,EAAKnF,MAAMmP,UACzBqD,EAAczT,EAAOT,UAK7BoS,GAAgBiC,aAAa,EAAK3S,OAAOR,MAAK,SAACC,GAC3C,IAAImT,EAAiBnT,EAASjB,KAAKO,OAAO,GAC1CwT,EAAYK,EAAe5N,MAC3BS,EAAiBmN,EAAetE,KAChCoC,GAAgBmC,cAAc,EAAK7S,OAAOR,MAAK,SAAAC,GAC3C,IAAIqT,EAAarT,EAASjB,KAAKO,OAAO,GACtC0T,EAAUK,EAAW9N,MACrBW,EAAamN,EAAWC,WACxB,EAAKT,YAAY7M,EAAgB8M,EAAWC,EAAaC,EAAS9M,UAnZ3D,EA4ZnBqN,aAAe,SAAC1O,GACZ,EAAKjG,MAAM0E,QAAQlC,KAAK,cA3ZxB,EAAKb,MAAQ,CACTiT,UAAW5U,GAASA,EAAM0E,SAAW1E,EAAM0E,QAAQX,UAAY/D,EAAM0E,QAAQX,SAASpC,OAAS3B,EAAM0E,QAAQX,SAASpC,MAAMA,MAAQ3B,EAAM0E,QAAQX,SAASpC,MAAMA,MAAQ,EACzKkT,YAAU7U,GAASA,EAAM0E,SAAW1E,EAAM0E,QAAQX,UAAY/D,EAAM0E,QAAQX,SAASpC,OAAS3B,EAAM0E,QAAQX,SAASpC,MAAMA,OAC3H0D,KAAMvD,aAAaC,QAAQ,WAC3ByP,aAAc,GACdC,QAAS,GACTC,aAAc,GACdH,QAAS,GACTK,aAAc,GACdE,WAAY,GACZC,gBAAiB,GACjBjB,QAAS,GACTC,aAAc,GACdrB,OAAQ,GACR8D,UAAW,EACX1J,SAAU,GACVyI,KAAM,GACNJ,aAAc,GACd2C,cAAe,SACf1D,QAAS,GACT9J,WAAY,GACZyN,cAAe,GACfC,MAAO,GACPC,cAAe,GACf/C,eAAgB,GAChBqB,UAAU,EACVI,MAAM,GAKV,EAAK7H,QAAU,CACX,CAAEzI,OAAQ,cAAe6R,SAAU,eACnC,CAAE7R,OAAQ,eAAgB6R,SAAU,SACpC,CAAE7R,OAAQ,QAAS6R,SAAU,UApClB,EAFvB,+CAkDI,WAAe,IAAD,OAENhT,KAAKP,MAAMkT,SAEXxC,GAAgB8C,YAAYjT,KAAKP,OAAOR,MAAK,SAACC,GAE1C,GAAuB,KAAnBA,EAASuG,OAAe,CACxB,EAAK3G,SAAS,CAAE8P,QAAS1P,EAASjB,KAAKO,OAAO0U,cAC9C,EAAKpU,SAAS,CAAEsG,WAAYlG,EAASjB,KAAKO,OAAO4G,aACjD,EAAKtG,SAAS,CAAEoQ,QAAShQ,EAASjB,KAAKO,OAAO0Q,UAC9C,EAAKpQ,SAAS,CAAEiU,cAAe7T,EAASjB,KAAKO,OAAOuU,gBACpD,EAAKjU,SAAS,CAAE8Q,WAAY1Q,EAASjB,KAAKO,OAAOoR,aACjD,EAAK9Q,SAAS,CAAEgU,MAAO5T,EAASjB,KAAKO,OAAO8R,YAC5C,EAAKxR,SAAS,CAAE+T,cAAe3T,EAASjB,KAAKO,OAAOoG,MACpD,EAAK9F,SAAS,CAAE8T,cAAe1T,EAASjB,KAAKO,OAAOoU,gBACpD,EAAK9T,SAAS,CAAEyQ,QAASrQ,EAASjB,KAAKO,OAAO2U,YAC9C,EAAKrU,SAAS,CAAE2R,MAAOvR,EAASjB,KAAKO,OAAO4U,cAC5C,IAAIpD,EAAiB,GACrB9Q,EAASjB,KAAKO,OAAO6R,KAAKnQ,SAAQ,SAAAoM,GAE9B,IAAIrO,EAAO,GACXA,EAAKwC,GAAK6L,EAAI+G,MACdpV,EAAK+S,YAAc1E,EAAI0E,YACvB/S,EAAKiT,MAAQ5E,EAAI4E,MACjBjT,EAAKkT,MAAQ7E,EAAI6E,MACjBnB,EAAe1P,KAAKrC,MAEK,GAAzB+R,EAAe1C,QACf,EAAKxO,SAAS,CAAEkR,eAAgB,EAAKvQ,MAAMuQ,eAAeoB,OAAOpB,SAK1E3Q,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAIhB6Q,GAAgBmD,cAActT,KAAKP,OAAOR,MAAK,SAACC,GACrB,KAAnBA,EAASuG,QAET,EAAK3G,SAAS,CAAE8I,SAAU1I,EAASjB,KAAKO,YAE7Ca,OAAM,SAACC,GACNC,QAAQC,IAAIF,QA9F5B,+BAmGI,WACIU,KAAKuT,gBApGb,oBAiaI,WACI,OACI,sBAAKlW,UAAU,8CAAf,UACI,qBAAKA,UAAU,wBAAf,SACK2C,KAAKP,MAAMkT,SAAY,cAAC,EAAD,CAAY5U,MAAM,kBAAkBC,SAAS,KAC9D,cAAC,EAAD,CAAYD,MAAM,qBAAqBC,SAAS,OAE3D,qBAAKX,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAACuF,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACI,cAACwF,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAD,WACI,sBAAKvI,UAAU,iBAAf,UACI,cAACuF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACK7C,KAAKP,MAAMkT,SACR,iCACI,oDAAuB3S,KAAKP,MAAMoT,iBAClC,mDAAsB7S,KAAKP,MAAMmP,WACjC,iDAAoB5O,KAAKP,MAAM2F,cAC/B,6CAAgByM,IAAO7R,KAAKP,MAAM8P,SAASxP,OAAO,0BAClD,2CAAc8R,IAAO7R,KAAKP,MAAMgR,OAAO1Q,OAAO,0BAC9C,sDAAyB8R,IAAO7R,KAAKP,MAAMsT,eAAehT,OAAO,0BACjE,qDAAwB8R,IAAO7R,KAAKP,MAAMyP,SAASnP,OAAO,0BAC1D,gDAAmBC,KAAKP,MAAMmQ,WAA9B,WACA,iDAAoB5P,KAAKP,MAAMqT,MAA/B,WACA,mDAAsB9S,KAAKP,MAAMmT,cAAjC,OACA,uCAIJ,eAAChN,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,qBACA,eAACuI,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,SAASmB,KAAK,UAAUzF,MAAOuB,KAAKP,MAAMmP,QAAS5I,SAAUhG,KAAKwO,cAC/EgF,OAAQxT,KAAK0O,gBACb+E,UAAWzT,KAAKP,MAAMoP,aAF1B,UAGI,oDACC7O,KAAKP,MAAMmI,SAASjH,KAAI,SAAAiO,GAAO,OAC5B,wBAAQnQ,MAAOmQ,EAAQhK,IAAvB,SAA6BgK,EAAQ7Q,cAG7C,cAAC6H,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMoP,sBAKhC,eAACjM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAEK7C,KAAKP,MAAMkT,SAAY,wBAEhB,cAAC/M,EAAA,EAAK4F,MAAN,UAEI,sBAAKnO,UAAU,sBAAf,UAEI,sBAAKA,UAAU,mBAAf,UACI,8BACI,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,0BAEJ,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAOzI,UAAU,aAAa6G,KAAK,UAAU6B,YAAY,aAAatH,MAAOuB,KAAKP,MAAM8P,QAASvJ,SAAUhG,KAAKwO,cAC/HgF,OAAQxT,KAAK8O,aACb2E,UAAWzT,KAAKP,MAAM+P,eAC1B,cAAC5J,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM+P,kBAGpB,sBAAKnS,UAAU,mBAAf,UACI,8BACI,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,wBAEJ,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,UAAU6B,YAAY,WAAWtH,MAAOuB,KAAKP,MAAM4P,QAASrJ,SAAUhG,KAAKwO,cACtGgF,OAAQxT,KAAK8O,aACb2E,UAAWzT,KAAKP,MAAMiQ,eAC1B,cAAC9J,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMiQ,kBAGpB,sBAAKrS,UAAU,mBAAf,UACI,8BACI,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,+BAEJ,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAOzI,UAAU,aAAa6G,KAAK,UAAU6B,YAAY,WAAWtH,MAAOuB,KAAKP,MAAMyP,QAASlJ,SAAUhG,KAAKwO,cAC7HgF,OAAQxT,KAAK8O,aACb2E,UAAWzT,KAAKP,MAAM6P,eAC1B,cAAC1J,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM6P,yBAMxC,cAACzM,EAAA,EAAD,UACK7C,KAAKP,MAAMkT,SAAY,wBACpB,eAAC/M,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,yBACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,SAAS5B,KAAK,aAAa6B,YAAY,cAActH,MAAOuB,KAAKP,MAAMmQ,WAAY5J,SAAUhG,KAAKwO,cACjHgF,OAAQxT,KAAK2P,mBACb8D,UAAWzT,KAAKP,MAAMoQ,kBAC1B,cAACjK,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMoQ,6BAOpC,qBAAKxS,UAAU,mBAAf,SACK2C,KAAKP,MAAMkT,SACP,cAAC/P,EAAA,EAAD,CAAKvF,UAAU,4BAAf,SACG,cAACwF,EAAA,EAAD,CAAKxF,UAAU,aAAf,SACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAASd,KAAKyS,aAAnD,uBAOJ,8BACMzS,KAAKP,MAAMgS,KAaT,8BACI,cAAC7O,EAAA,EAAD,CAAKvF,UAAU,4BAAf,SACI,eAACwF,EAAA,EAAD,CAAKxF,UAAU,aAAf,UACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAASd,KAAK0R,gBAAnD,sBAGA,cAACzL,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAASd,KAAKmS,UAAnD,yBAlBZ,cAACvP,EAAA,EAAD,CAAKvF,UAAU,4BAAf,SACI,eAACwF,EAAA,EAAD,CAAKxF,UAAU,aAAf,UACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,iBAAiByD,QAASd,KAAK+P,gBAAjD,8BAGA,cAAC9J,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAASd,KAAKuR,YAAnD,kCA4BxC,cAAC3O,EAAA,EAAD,CAAKvF,UAAU,uBAAf,SACI,cAACwF,EAAA,EAAD,UACI,cAAC,GAAD,CAAW+G,QAAS5J,KAAK4J,QAAS3L,KAAM+B,KAAKP,MAAMuQ,eAAgBnG,SAAS,QAAQC,YAAY,0BA5jBhI,GAAuC6J,iBAskBxBnS,eAAW+M,I,SC3jBX,OA5Bf,2HAEI,WAAWtQ,GAAX,eAAAC,EAAA,sEACyBI,IAAMkJ,IAAI,gBAAgB,CAAEC,OAAQxJ,IAD7D,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CAFJ,+GAQI,WAAUA,GAAV,eAAAC,EAAA,6DACID,EAAKyU,UAAYzU,EAAK2Q,QAD1B,SAEyBtQ,IAAMC,KAAK,oBAAoBN,GAFxD,cAEUO,EAFV,yBAGWA,EAAOP,MAHlB,2CARJ,kHAeI,WAAaA,GAAb,eAAAC,EAAA,6DACID,EAAKyU,UAAYzU,EAAK2Q,QAD1B,SAEyBtQ,IAAM8E,IAAI,wBAAwBnF,EAAK2G,IAAI3G,GAFpE,cAEUO,EAFV,yBAGWA,EAAOP,MAHlB,2CAfJ,kHAsBI,WAAaA,GAAb,eAAAC,EAAA,sEACyBI,IAAMiP,OAAO,wBAAwBtP,EAAK2G,IAAI3G,GADvE,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CAtBJ,+DCQe,SAAS2V,KAEpB,IAAMhK,EAAU,CACZ,CAAEzI,OAAQ,UAAW6R,SAAU,iBAC/B,CAAE7R,OAAQ,SAAU6R,SAAU,kBAC9B,CAAE7R,OAAQ,OAAQ6R,SAAU,QAC5B,CAAE7R,OAAQ,WAAY6R,SAAU,SAAA1G,GAAG,OAAIxM,IAAOwM,EAAIiD,SAASxP,OAAO,yBAClE,CAAEoB,OAAQ,SAAU6R,SAAU,SAAA1G,GAAG,OAAIA,EAAImE,MAAQ3Q,IAAOwM,EAAImE,OAAO1Q,OAAO,uBAAuB,MACjG,CAAEoB,OAAQ,SAAUV,GAAI,SAAUuS,SAAU,MACxCa,KAAM,gBAAGvH,EAAH,EAAGA,IAAH,OAAc,cAACrG,EAAA,EAAD,CAAQ5I,UAAU,gBAAgByD,QAAS,WAAQgT,GAAWxH,IAA9D,uBAG5B,EAAwB5K,mBAAS,IAAjC,mBAAOzD,EAAP,KAAa8V,EAAb,KAEArR,qBAAU,WACNsR,GAAgBC,KAAK,CAAC,OAAUrU,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAI+O,EAAQ/O,EAAI/G,WAC5F,IAEFyE,qBAAU,WACN,GAAGzE,EAAKqP,OAAO,CACX,IAAI4G,EAAWjW,EAAK,GACjBiW,IAAaA,EAASzD,QACrB0D,EAAQD,GACRE,EAAa,IAAIhF,KAAK8E,EAAS3E,cAGzC,CAACtR,IAGH,MAAoCyD,mBAAS,GAA7C,mBAAO2S,EAAP,KAAmBC,EAAnB,KACA,EAAoC5S,mBAAS0N,KAAKc,OAAlD,mBAAOqE,EAAP,KAAmBC,EAAnB,KACA,EAAgC9S,mBAAS0N,KAAKc,OAA9C,mBAAiBuE,GAAjB,WACA,EAAsC/S,mBAAS,qBAA/C,mBAAOgT,EAAP,KAAoBC,EAApB,KACA,EAA0BjT,mBAAS,GAAnC,mBAAOkT,EAAP,KAAcC,EAAd,KACAnS,qBAAU,WACN,IAAIoS,GAAgB,IAAOnE,KAAKoE,MAAMH,EAAQ,IAAM,KAAMI,OAAO,GAC7DtE,GAAW,IAAOC,KAAKoE,MAAMH,EAAQ,KAAQ,IAAKI,OAAO,GACzDlE,GAAW,IAAOH,KAAKoE,MAAMH,EAAQ,KAAS,IAAKI,OAAO,GAC1D9D,GAAS,IAAMP,KAAKoE,MAAMH,EAAQ,OAAUI,OAAO,GACvDL,EAAezD,EAAQ,MAAQJ,EAAU,MAAQJ,EAAU,MAAQoE,KACpE,CAACF,IACJ,IAUMR,EAAe,SAAC7E,GACC,IAAf8E,IACAG,EAAcjF,EAAUqF,GACxBC,EAASzF,KAAKc,MAAQX,GACtB+E,EACIW,aAAY,WACRJ,EAAUzF,KAAKc,MAAQX,KACxB,OAYf,EAAgC7N,mBAAS,IAAzC,mBAAOkG,EAAP,KAAiBsN,EAAjB,KACA,EAA8BxT,mBAAS,IAAvC,mBAAOiG,EAAP,KAAgBwN,EAAhB,KACAzS,qBAAU,WACN0S,GAAcC,cAAczV,aAAaC,QAAQ,YAAYZ,MAAK,SAAA+F,GAAG,OAAImQ,EAAWnQ,EAAI/G,WAC1F,IACFyE,qBAAU,WACN4S,GAAgBrB,KAAK,CAAC,OAAUrU,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAIkQ,EAAYlQ,EAAI/G,WAChG,IACF,MAAwByD,mBAAS,CAC7BkN,QAAS,GACTpB,OAAQ,GACRyD,KAAM,GACN1B,QAAS,GACTkB,MAAO,KALX,mBAAOQ,EAAP,KAAakD,EAAb,KAOA,EAAkCzS,mBAAS,CACvCkN,QAAS,GACTpB,OAAQ,GACRyD,KAAM,KAHV,mBAAOsE,EAAP,KAAkBC,GAAlB,KAKA,GAAkC9T,oBAAS,GAA3C,qBAAO+T,GAAP,MAAkBC,GAAlB,MAGM5R,GAAe,SAACC,GAClB,IAAI4R,EAAO,2BAAQ1E,GAAR,kBAAelN,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QACnD0V,EAAQwB,IAkCNC,GAAmB,kBAAMF,IAAa,IAItCG,GAAY,SAAC9R,GACfA,EAAEK,iBArCc,WAChB,IAAIC,GAAQ,EAOZ,GANAmR,GAAa,CACT5G,QAAS,GACTpB,OAAQ,GACRyD,KAAM,MAGLA,EAAKrC,QAAQtB,OAAS,EAAG,CAC1B,IAAIwI,EAAY,eAAQP,GACxBO,EAAalH,QAAU,sBACvB4G,GAAaM,GACbzR,GAAQ,EAGZ,IAAK4M,EAAKzD,OAAOF,OAAS,EAAG,CACzB,IAAIwI,EAAY,eAAQP,GACxBO,EAAatI,OAAS,qBACtBgI,GAAaM,GACbzR,GAAQ,EAGZ,IAAK4M,EAAKA,KAAK3D,OAAS,EAAG,CACvB,IAAIwI,EAAY,eAAQP,GACxBO,EAAa7E,KAAO,mBACpBuE,GAAaM,GACbzR,GAAQ,EAEZ,OAAOA,EAUH0R,KA7Fe,IAAf1B,IACAG,EAAcpF,KAAKc,MAAQ0E,GAC3BN,EACIW,aAAY,WACRJ,EAASzF,KAAKc,MAAQqE,KACvB,MA0FPtD,EAAK1B,QAAUH,KAAKc,MACpBe,EAAK5S,OAASuB,aAAaC,QAAQ,WACnCmU,GAAgBgC,IAAI/E,GAAMhS,MAAK,SAAA+F,GAAQiM,EAAKrM,IAAMI,EAAI/G,KAAK2G,IAAKqM,EAAKrC,QAAU5J,EAAI/G,KAAK2Q,WACxFmF,GAAQ,SAAA9V,GAAI,OAAKgT,GAAL,oBAAchT,OAC1B2X,OAiBF9B,GAAa,SAAC7C,GAChB,GAAIgF,OAAOC,QAAQ,iBAAkB,CACjC,IAAIC,EAAO,aAAOlY,GAClB+V,GAAgBoC,OAAOD,EAAQ,IAAIlX,MAAK,SAAA+F,GAAG,OAAIH,MAAMG,EAAIM,YACzD6Q,EAAQE,OAAOpF,EAAKrQ,MAAO,GAC3BmT,EAAQoC,KAIhB,OACI,sBAAK9Y,UAAU,oCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,YAAYC,SAAS,OAE3C,qBAAKX,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAACuF,EAAA,EAAD,CAAKvF,UAAU,yBAAf,SACI,cAACwF,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC0G,EAAA,EAAD,UACI,eAACA,EAAA,EAAKlI,KAAN,CAAWjE,UAAU,cAArB,UACI,cAACmM,EAAA,EAAKnI,MAAN,CAAYiI,MAAO,CAAEC,SAAU,UAA/B,SAA4CmL,IAC3CE,GAAS,GACV,cAAC3O,EAAA,EAAD,CAAQ5I,UAAU,qBAAqByD,QAlD/C,kBAAM4U,IAAa,IAkDX,mBAECd,EAAQ,GACT,qCACI,eAACpL,EAAA,EAAK8M,SAAN,CAAejZ,UAAU,kBAAzB,mBAAkD4T,EAAKA,QACvD,cAAChL,EAAA,EAAD,CAAQ5I,UAAU,oBAAoByD,QAzCzD,WAjFb2T,EAAYrF,KAAKc,OACjBqG,cAAclC,GACdC,EAAc,GACdO,EAAS,GAgFT,IAAIsB,EAAO,aAAOlY,GAClBkY,EAAQ,GAAG1F,MAAQrB,KAAKc,MACxB8D,GAAgBwC,OAAOL,EAAQ,IAAIlX,MAAK,SAAA+F,GAAG,OAAIH,MAAMG,EAAIM,YACzDyO,EAAQoC,GACRhC,EAAQ,CACJvF,QAAS,GACTpB,OAAQ,GACRyD,KAAM,GACN1B,QAAS,GACTkB,MAAO,MA8BqB,8BAOpB,cAAC1P,EAAA,EAAD,CAAOC,KAAMyU,GAAWxU,OAAQ2U,GAAhC,SACI,eAAChQ,EAAA,EAAD,CAAMD,SAAU,SAAC5B,GAAD,OAAO8R,GAAU9R,IAAjC,UACI,cAAChD,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,yBAEJ,cAACN,EAAA,EAAMO,KAAP,CAAYjE,UAAU,YAAtB,SACI,eAACC,EAAA,EAAD,WACI,eAACsF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,CAAYnO,UAAU,OAAtB,UACI,cAACuI,EAAA,EAAKC,MAAN,qBACA,eAACD,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,SAASmB,KAAK,SACjB8B,SAAU,SAACjC,GAAD,OAAOD,GAAaC,IAC9B1G,UAAWkY,EAAU/H,OAAOF,OAAS,EAAI,aAAe,GAFtE,UAGI,wBAAQ7O,MAAM,GAAd,2BACCkJ,EAAQ2F,QAAU3F,EAAQhH,KAAI,SAAS6M,EAAO5M,GAC3C,OAAO,wBAAoBnC,MAAO+O,EAAOgF,WAAlC,SAA+ChF,EAAOgF,YAAzC5R,SAG5B,cAACgF,EAAA,EAAK6Q,KAAN,CAAWpZ,UAAU,cAArB,SAAoCkY,EAAU/H,cAGtD,cAAC3K,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,CAAYnO,UAAU,OAAtB,UACI,cAACuI,EAAA,EAAKC,MAAN,sBACA,eAACD,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,SAASmB,KAAK,UACjB8B,SAAU,SAACjC,GAAD,OAAOD,GAAaC,IAC9B1G,UAAWkY,EAAU3G,QAAQtB,OAAS,EAAI,aAAe,GAFvE,UAGI,wBAAQ7O,MAAM,GAAd,4BACCmJ,EAAS0F,QAAU1F,EAAS8O,QAAO,SAAA9H,GAAO,OAAIA,EAAQpB,QAAUoB,EAAQpB,OAAOmJ,SAAS1F,EAAKzD,WACzF7M,KAAI,SAASiO,EAAQhO,GAClB,OAAO,wBAAoBnC,MAAOmQ,EAAQhK,IAAnC,SAAyCgK,EAAQ7Q,OAApC6C,SAGhC,cAACgF,EAAA,EAAK6Q,KAAN,CAAWpZ,UAAU,cAArB,SAAoCkY,EAAU3G,kBAI1D,cAAChM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,CAAYnO,UAAU,OAAtB,UACI,cAACuI,EAAA,EAAKC,MAAN,mBACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,OAAO6B,YAAY,sBACpCC,SAAU,SAACjC,GAAD,OAAOD,GAAaC,IAC9B1G,UAAWkY,EAAUtE,KAAK3D,OAAS,EAAI,aAAe,KACpE,cAAC1H,EAAA,EAAK6Q,KAAN,CAAWpZ,UAAU,cAArB,SAAoCkY,EAAUtE,mBAMlE,eAAClQ,EAAA,EAAM6V,OAAP,WACI,cAAC3Q,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByI,KAAK,QAAQhF,QAAS8U,GAA3D,mBAGA,cAAC3P,EAAA,EAAD,CAAQ5I,UAAU,iBAAiByI,KAAK,SAAxC,2BAOZ,cAAC,GAAD,CAAW8D,QAASA,EAAS3L,KAAMA,YC1PxC,SAAS4Y,KAAc,IAAD,QAE3BrU,EAAUC,cAFiB,4CAIjC,sBAAAvE,EAAA,sDACc,YACVsE,EAAQlC,KADE,aADd,4CAJiC,sBASjC,MAA8BoB,mBAAS,CACnC3D,MAAO,GACPyP,OAAQ,GACRwD,YAAa,GACb8F,KAAM,GACNC,QAAS,GACTtR,OAAQ,GACRpH,OAAQuB,aAAaC,QAAQ,aAPjC,mBAAO+O,EAAP,KAAgBoI,EAAhB,KAUA,EAA6BtV,mBAAS,CAClC8Q,WAAa,KADjB,mBAAO7K,EAAP,KAAgBsP,EAAhB,KAIAvU,qBAAU,WACN0S,GAAcC,cAAczV,aAAaC,QAAQ,YAAYZ,MAAK,SAAA+F,GAAG,OAAIiS,EAAUjS,EAAI/G,WACzF,IAEF,MAAwCyD,mBAAS,CAC7C3D,MAAO,GACPyP,OAAQ,GACRwD,YAAa,GACb8F,KAAM,GACNC,QAAS,GACTtR,OAAQ,KANZ,mBAAOoJ,EAAP,KAAqBqI,EAArB,KASMpT,EAAe,SAACC,GAClB,IAAIoT,EAAU,2BAAOvI,GAAP,kBAAiB7K,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QACxDuY,EAAWG,IAmFf,OACI,sBAAK9Z,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,eAEtB,qBAAKV,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,cAACuF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,sBAAM8C,SAAU,SAAC5B,GAAD,OAzFjB,SAACA,GACpBA,EAAEK,iBACF,IAAIC,GAAQ,EACZ6S,EAAgB,CACZnZ,MAAO,GACPyP,OAAQ,GACRwD,YAAa,GACb8F,KAAM,GACNC,QAAS,GACTtR,OAAQ,KAEZ,IAAI2R,EAAe,eAAOvI,GAkE1B,OAhEID,EAAQ7Q,MAAMuP,OAAS,GACvB8J,EAAgBrZ,MAAQ,4BACxBmZ,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgBrZ,MAAQ,GACxBmZ,EAAgBE,KAGhBxI,EAAQpB,OAAOF,OAAS,GACxB8J,EAAgB5J,OAAS,0BACzB0J,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgB5J,OAAS,GACzB0J,EAAgBE,KAGhBxI,EAAQoC,YAAY1D,OAAS,GAC7B8J,EAAgBpG,YAAc,kCAC9BkG,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgBpG,YAAc,GAC9BkG,EAAgBE,KAahBxI,EAAQmI,QAAQzJ,OAAS,GACzB8J,EAAgBL,QAAU,+BAC1BG,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgBL,QAAU,GAC1BG,EAAgBE,KAGhBxI,EAAQnJ,OAAO6H,OAAS,GACxB8J,EAAgB3R,OAAS,6BACzByR,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgB3R,OAAS,GACzByR,EAAgBE,KAGP,IAAV/S,IACCgT,GAAiBrB,IAAIpH,GAAS3P,MAAK,SAAA+F,GAAG,OAAIA,KAC1CxC,EAAQlC,KAAK,cAEV+D,EAYoCiT,CAAevT,IAAtC,SAA0C,mCAEtC,sBAAK1G,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,8BACA,sBAAKA,UAAU,YAAf,UACI,uBAAOU,MAAM,gBAAgBgI,YAAY,sBAAsBC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IACtF1G,UAAWwR,EAAa9Q,MAAMuP,OAAS,EAAI,0BAA4B,eAAgBxH,KAAK,OAAO5B,KAAK,QAAQzD,GAAG,UAC1H,mBAAGpD,UAAU,cAAb,SAA4BwR,EAAa9Q,cAIjD,sBAAKV,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,0BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQU,MAAM,cAAciI,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAClD1G,UAAWwR,EAAarB,OAAOF,OAAS,EAAI,0BAA4B,gBADhF,sBACsG,UADtG,qBACoH,UADpH,0BACuI,gBADvI,0BAEI,wBAAQ7O,MAAM,GAAd,2BACCkJ,EAAQ2F,OAAS,GAAK3F,EAAQhH,KAAI,SAAS6M,EAAO5M,GAC/C,OAAO,wBAAQnC,MAAO+O,EAAOgF,WAAtB,SAAmChF,EAAOgF,kBAJzD,IAOA,mBAAGnV,UAAU,cAAb,SAA4BwR,EAAarB,eAIjD,sBAAKnQ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,2BACA,sBAAKA,UAAU,YAAf,UACZ,6BAAUU,MAAM,sBAAsBgI,YAAY,4BAA6BC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IACnG1G,UAAWwR,EAAamC,YAAY1D,OAAS,EAAI,0BAA4B,eAAgBxH,KAAK,WAAW2E,KAAK,KAD5H,sBACsI,eADtI,qBACyJ,eADzJ,mBAC0K,eAD1K,IAEgB,mBAAGpN,UAAU,cAAb,SAA4BwR,EAAamC,oBAIjD,sBAAK3T,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,4BACA,sBAAKA,UAAU,YAAf,UACI,uBAAOU,MAAM,eAAewZ,IAAI,IAAIxR,YAAY,6BAA6BC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAAI1G,UAAWwR,EAAaiI,KAAKxJ,OAAS,EAAI,0BAA4B,eAAgBxH,KAAK,SAAS5B,KAAK,OAAOzD,GAAG,SAClO,mBAAGpD,UAAU,cAAb,SAA4BwR,EAAaiI,aAIjD,sBAAKzZ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,+BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQU,MAAM,mBAAmBiI,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAAI1G,UAAWwR,EAAakI,QAAQzJ,OAAS,EAAI,0BAA4B,eAAgBpJ,KAAK,WAAjK,sBAAiL,WAAjL,0BAAqM,gBAArM,0BACI,wBAAQzF,MAAM,GAAd,qCACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,uBAJJ,IAMA,mBAAGpB,UAAU,cAAb,SAA4BwR,EAAakI,gBAIjD,sBAAK1Z,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,6BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQU,MAAM,iBAAiBiI,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAAI1G,UAAWwR,EAAapJ,OAAO6H,OAAS,EAAI,0BAA4B,eAAgBpJ,KAAK,UAA9J,sBAA6K,UAA7K,0BAAgM,gBAAhM,0BACI,wBAAQzF,MAAM,GAAd,mCACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,yBAJJ,IAMA,mBAAGpB,UAAU,cAAb,SAA4BwR,EAAapJ,eAIjD,sBAAKpI,UAAU,iBAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,wBAAQyI,KAAK,SAAS/H,MAAM,SAASV,UAAU,kBAA/C,sBAEJ,qBAAKA,UAAU,WAAf,SACI,wBAAQyI,KAAK,SAAS/H,MAAM,SAAS+C,QA5MxC,2CA4MyDzD,UAAU,iBAAhE,sBAEJ,qBAAKA,UAAU,gC,OC1MpC,SAASma,KAEpB,IAAM5N,EAAU,CACZ,CAAEzI,OAAQ,gBAAiB6R,SAAU,SACrC,CAAE7R,OAAQ,cAAe6R,SAAU,eACnC,CAAE7R,OAAQ,cAAe6R,SAAU,UACnC,CAAE7R,OAAQ,SAAU6R,SAAU,UAC9B,CACI7R,OAAQ,UAAW6R,SAAU,MAC7Ba,KAAM,gBAAGvH,EAAH,EAAGA,IAAH,OAAc,sBAAKjP,UAAU,oBAAf,UAAmC,mBAAGA,UAAU,mBAAmBoa,MAAM,QAAQ3W,QAAS,kBATvF,2CAS6F4W,CAAYpL,EAAIqL,SAAS/S,MAAtF,kBAAqG,mBAAG7G,MAAM,eAAe+C,QAAS,kBATtK,2CAS4K8W,CAAYtL,EAAIqL,SAAS/S,MAAMvH,UAAU,mBAAhF,kBAA2G,mBAAGU,MAAM,iBAAiB+C,QAAS,WAAQ+W,EAAcvL,EAAIqL,WAAata,UAAU,gBAApF,0BAI/Q,EAAwBqE,mBAAS,IAAjC,mBAAOzD,EAAP,KAAa8V,EAAb,KACArR,qBAAU,WACN2U,GAAiBpD,KAAK,CAAC,OAAUrU,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAI+O,EAAQ/O,EAAI/G,WAC7F,IAEF,IAAM4Z,EAAgB,SAACjJ,GACnB,GAAIqH,OAAOC,QAAQ,iBAAkB,CACtB,aAAOjY,GAClBoZ,GAAiBjB,OAAOxH,GAAS3P,MAAK,SAAA+F,GAAG,OAAIH,MAAMG,EAAIM,YACvD+R,GAAiBpD,OAAOhV,MAAK,SAAA+F,GAAG,OAAI+O,EAAQ/O,EAAI/G,WAIxD,EAAkCyD,oBAAS,GAA3C,mBAMMc,GANN,UAMgBC,eAhCe,4CAkC/B,WAA2BhC,GAA3B,eAAAvC,EAAA,sDACQ4Z,EAAM,kBAAoBrX,EAC9B+B,EAAQlC,KAAKwX,GAFjB,4CAlC+B,kEAuC/B,WAA2BrX,GAA3B,eAAAvC,EAAA,sDACQ4Z,EAAM,kBAAoBrX,EAC9B+B,EAAQlC,KAAKwX,GAFjB,4CAvC+B,sBA4C/B,OACI,sBAAKza,UAAU,oCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,eAEtB,qBAAKV,UAAU,yBAAf,SACA,sBAAKA,UAAU,eAAf,UACI,cAACuF,EAAA,EAAD,CAAKvF,UAAU,mBAAf,SACI,cAACwF,EAAA,EAAD,CAAKxF,UAAU,aAAf,SACI,mBAAGG,KAAK,gBAAgBO,MAAM,cAAcV,UAAU,qBAAtD,6BAGR,cAACuF,EAAA,EAAD,CAAKvF,UAAU,uBAAf,SACI,cAACwF,EAAA,EAAD,UACI,cAAC,GAAD,CAAW+G,QAASA,EAAS3L,KAAMA,gBC9D3D,IAiNe8Z,GAjNM,SAACC,GAEJC,cAFc,IAAD,QAIrBzV,EAAUC,cAJW,4CAM3B,sBAAAvE,EAAA,sDACc,YACVsE,EAAQlC,KADE,aADd,4CAN2B,sBAW3B,IAAMmH,EAASjF,EAAQX,SAASQ,SAAS6V,MAAM,KAE/C,EAA8BxW,mBAAS,CACnC3D,MAAO,GACPyP,OAAQ,GACRwD,YAAa,GACb+F,QAAS,GACTD,KAAM,GACNrR,OAAQ,KANZ,mBAAOmJ,EAAP,KAAgBoI,EAAhB,KASA,EAA6BtV,mBAAS,CAClC8Q,WAAa,KADjB,mBAAO7K,EAAP,KAAgBsP,EAAhB,KAIAvU,qBAAU,WACN0S,GAAcC,cAAczV,aAAaC,QAAQ,YAAYZ,MAAK,SAAA+F,GAAG,OAAIiS,EAAUjS,EAAI/G,SACvFoZ,GAAiB7P,IAAIC,EAAOA,EAAO6F,OAAO,IAAIrO,MAAK,SAAA+F,GAAG,OAAIgS,EAAWhS,EAAI/G,WAC3E,IAEF,MAAwCyD,mBAAS,CAC7C3D,MAAO,GACPyP,OAAQ,GACRwD,YAAa,GACb+F,QAAS,GACTD,KAAM,GACNrR,OAAQ,KANZ,mBAAOoJ,EAAP,KAAqBqI,EAArB,KASMpT,EAAe,SAACC,GAClB,IAAIoT,EAAU,2BAAOvI,GAAP,kBAAiB7K,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QACxDuY,EAAWG,IAyEf,OACI,sBAAK9Z,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,oBAEtB,qBAAKV,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,cAACuF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,uBAAM8C,SAAU,SAAC5B,GAAD,OA/EjB,SAACA,GACpBA,EAAEK,iBACF,IAAIC,GAAQ,EACZ6S,EAAgB,CACZnZ,MAAO,GACPyP,OAAQ,GACRwD,YAAa,GACb+F,QAAS,GACTD,KAAM,GACNrR,OAAQ,KAEZ,IAAI2R,EAAe,eAAOvI,GAwD1B,OAtDID,EAAQ7Q,MAAMuP,OAAS,GACvB8J,EAAgBrZ,MAAQ,4BACxBmZ,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgBrZ,MAAQ,GACxBmZ,EAAgBE,KAGhBxI,EAAQpB,OAAOF,OAAS,GACxB8J,EAAgB5J,OAAS,0BACzB0J,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgB5J,OAAS,GACzB0J,EAAgBE,KAGhBxI,EAAQoC,YAAY1D,OAAS,GAC7B8J,EAAgBpG,YAAc,kCAC9BkG,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgBpG,YAAc,GAC9BkG,EAAgBE,KAGhBxI,EAAQmI,QAAQzJ,OAAS,GACzB8J,EAAgBL,QAAU,+BAC1BG,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgBL,QAAU,GAC1BG,EAAgBE,KAGhBxI,EAAQnJ,OAAO6H,OAAS,GACxB8J,EAAgB3R,OAAS,6BACzByR,EAAgBE,GAChB/S,GAAQ,IAGR+S,EAAgB3R,OAAS,GACzByR,EAAgBE,KAGP,IAAV/S,IACCgT,GAAiBb,OAAO5H,GAAS3P,MAAK,SAAA+F,GAAG,OAAIA,KAC7CxC,EAAQlC,KAAK,cAEV+D,EAYoCiT,CAAevT,IAAtC,UACI,sBAAK1G,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,8BACA,sBAAKA,UAAU,YAAf,UACI,uBAAOU,MAAM,gBAAgBgI,YAAY,sBAAsBC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IACtF1G,UAAWwR,EAAa9Q,MAAMuP,OAAS,EAAI,0BAA4B,eAAgBxH,KAAK,OAAOrH,MAAOmQ,EAAQ7Q,MAAMuP,OAAS,GAAKsB,EAAQ7Q,MAAOmG,KAAK,QAAQzD,GAAG,UAC5K,mBAAGpD,UAAU,cAAb,SAA4BwR,EAAa9Q,cAGjD,sBAAKV,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,0BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQU,MAAM,cAAciI,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAClD1G,UAAWwR,EAAarB,OAAOF,OAAS,EAAI,0BAA4B,gBADhF,sBACsG,UADtG,qBACoH,UADpH,0BACuI,gBADvI,0BAEI,wBAAQ7O,MAAM,GAAd,2BACCkJ,EAAQ2F,OAAS,GAAK3F,EAAQhH,KAAI,SAAS6M,EAAO5M,GAC/C,OAAO,wBAAQnC,MAAO+O,EAAOgF,WAAY2F,SAAU3K,EAAOgF,aAAe5D,EAAQpB,OAAS,OAAO,QAA1F,SAAoGA,EAAOgF,kBAJ1H,IAOA,mBAAGnV,UAAU,cAAb,SAA4BwR,EAAarB,eAIjD,sBAAKnQ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,2BACA,sBAAKA,UAAU,YAAf,UACZ,6BAAUU,MAAM,sBAAsBgI,YAAY,4BAA6BC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IACnG1G,UAAWwR,EAAamC,YAAY1D,OAAS,EAAI,0BAA4B,eAAgB7O,MAAOmQ,EAAQoC,YAAalL,KAAK,WAAW2E,KAAK,KADxJ,sBACkK,eADlK,qBACqL,eADrL,mBACsM,eADtM,IAEgB,mBAAGpN,UAAU,cAAb,SAA4BwR,EAAamC,oBAIjD,sBAAK3T,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,4BACA,sBAAKA,UAAU,YAAf,UACI,uBAAOU,MAAM,eAAewZ,IAAI,IAAIxR,YAAY,6BAA6BC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAAItF,MAAOmQ,EAAQkI,KAAMzZ,UAAWwR,EAAaiI,KAAKxJ,OAAS,EAAI,0BAA4B,eAAgBxH,KAAK,SAAS5B,KAAK,OAAOzD,GAAG,SACvP,mBAAGpD,UAAU,cAAb,SAA4BwR,EAAaiI,aAIjD,sBAAKzZ,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,+BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQU,MAAM,mBAAmBiI,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAAI1G,UAAWwR,EAAakI,QAAQzJ,OAAS,EAAI,0BAA4B,eAAgBpJ,KAAK,WAAjK,sBAAiL,WAAjL,0BAAqM,gBAArM,0BACI,wBAAQzF,MAAM,GAAd,qCACA,wBAAQA,MAAM,QAAQ0Z,SAA8B,UAApBvJ,EAAQmI,QAAsB,OAAO,QAArE,mBACA,wBAAQtY,MAAM,SAAS0Z,SAA8B,WAApBvJ,EAAQmI,QAAuB,OAAO,QAAvE,oBACA,wBAAQtY,MAAM,UAAU0Z,SAA8B,YAApBvJ,EAAQmI,QAAwB,OAAO,QAAzE,uBAJJ,IAMA,mBAAG1Z,UAAU,cAAb,SAA4BwR,EAAakI,gBAIjD,sBAAK1Z,UAAU,iBAAf,UACI,uBAAOA,UAAU,0BAAjB,6BACA,sBAAKA,UAAU,YAAf,UACI,4BAAQU,MAAM,iBAAiBiI,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAAI1G,UAAWwR,EAAapJ,OAAO6H,OAAS,EAAI,0BAA4B,eAAgBpJ,KAAK,UAA9J,sBAA6K,UAA7K,0BAAgM,gBAAhM,0BACI,wBAAQzF,MAAM,GAAd,mCACA,wBAAQA,MAAM,cAAc0Z,SAA6B,gBAAnBvJ,EAAQnJ,OAA2B,OAAO,QAAhF,yBACA,wBAAQhH,MAAM,UAAU0Z,SAA6B,YAAnBvJ,EAAQnJ,OAAuB,OAAO,QAAxE,qBACA,wBAAQhH,MAAM,YAAY0Z,SAA6B,cAAnBvJ,EAAQnJ,OAAyB,OAAO,QAA5E,yBAJJ,IAMA,mBAAGpI,UAAU,cAAb,SAA4BwR,EAAapJ,eAIjD,sBAAKpI,UAAU,iBAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,wBAAQyI,KAAK,SAAS/H,MAAM,SAASV,UAAU,kBAA/C,sBAEJ,qBAAKA,UAAU,WAAf,SACI,wBAAQyI,KAAK,SAAS/H,MAAM,SAAS+C,QApM9C,2CAoM+DzD,UAAU,iBAAhE,sBAEJ,qBAAKA,UAAU,+BC1HnC+a,GA7EK,SAACJ,GAEjB,IAAMxV,EAAUC,cAFU,4CAI1B,sBAAAvE,EAAA,sDACc,YACVsE,EAAQlC,KADE,aADd,4CAJ0B,sBAS1B,IAAMmH,EAASjF,EAAQX,SAASQ,SAAS6V,MAAM,KAE/C,EAA8BxW,mBAAS,CACnC3D,MAAO,GACPyP,OAAQ,GACRwD,YAAa,GACb+F,QAAS,GACTD,KAAM,GACNrR,OAAQ,KANZ,mBAAOmJ,EAAP,KAAgBoI,EAAhB,KAaA,OAJAtU,qBAAU,WACN2U,GAAiB7P,IAAIC,EAAOA,EAAO6F,OAAO,IAAIrO,MAAK,SAAA+F,GAAG,OAAIgS,EAAWhS,EAAI/G,WAC3E,IAGE,sBAAKZ,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,mBAEtB,qBAAKV,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACA,cAACuF,EAAA,EAAD,UACG,cAACC,EAAA,EAAD,CAAKxF,UAAU,aAAf,SACI,eAAC4I,EAAA,EAAD,CAAQ5I,UAAU,qBAAqByD,QAjChC,2CAiCP,UACI,mBAAGzD,UAAU,iBADjB,gBAKR,uBACI,cAACuF,EAAA,EAAD,CAAKvF,UAAU,yBAAf,SACI,cAACwF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAAC4I,GAAA,EAAD,CAAOC,UAAQ,EAACwC,OAAK,EAArB,SACI,kCACA,+BACI,gDACA,6BAAKS,EAAQ7Q,WAEjB,+BACI,8CACA,6BAAK6Q,EAAQpB,YAEjB,+BACI,8CACA,6BAAKoB,EAAQoC,iBAEjB,+BACI,+CACA,6BAAKpC,EAAQkI,UAEjB,+BACI,mDACA,6BAAKlI,EAAQmI,aAEjB,+BACI,iDACA,6BAAKnI,EAAQnJ,8B,kCC7DpC4S,GAAb,kDAGI,WAAYva,GAAQ,IAAD,8BACf,cAAMA,IA+BV0Q,cAAgB,SAACC,GACb,EAAK3P,SAAL,eACK2P,EAAMxK,OAAOC,KAAOuK,EAAMxK,OAAOxF,SAlCvB,EA0DnB6Z,eAAiB,SAAC7J,GACd,IAAIE,GAAU,EAQd,OAPK,EAAKlP,MAAM2F,WAKZ,EAAKtG,SAAS,CAAEyZ,gBAAiB,MAJjC,EAAKzZ,SAAS,CAAEyZ,gBAAiB,4BACjC5J,GAAU,GAKPA,GAnEQ,EA0EnB6J,qBAAuB,SAAC/J,GACpB,IAAIE,GAAU,EAQd,OAPK,EAAKlP,MAAMgZ,iBAKZ,EAAK3Z,SAAS,CAAE4Z,sBAAuB,MAJvC,EAAK5Z,SAAS,CAAE4Z,sBAAuB,kCACvC/J,GAAU,GAKPA,GAnFQ,EA0FnBgK,kBAAoB,SAAClK,GACjB,IAAIE,GAAU,EAgBd,OAfK,EAAKlP,MAAMmZ,YACZ,EAAK9Z,SAAS,CAAE+Z,eAAgB,2BAChClK,GAAU,IAIC,IAFD,IAAImK,OAAO,cACFzR,KAAK,EAAK5H,MAAMmZ,WAEnC,EAAK9Z,SAAS,CACV6P,SAAS,EACTkK,eAAgB,mEAIpB,EAAK/Z,SAAS,CAAE+Z,eAAgB,KAE7BlK,GA3GQ,EAkHnBoK,oBAAsB,SAACtK,GAGnB,GAAG,EAAKhP,MAAMuZ,YAAY,EAGP,IAFC,6NACO3R,KAAK,EAAK5H,MAAMuZ,aAEnC,EAAKla,SAAS,CACV6P,SAAS,EACTsK,iBAAkB,4DAItB,EAAKna,SAAS,CAAEma,iBAAkB,KAG1C,OAfc,GAnHC,EAyInBC,gBAAkB,SAACzK,GACf,IAAIE,GAAU,EACT,EAAKlP,MAAM0Z,UACZ,EAAKra,SAAS,CAAEsa,aAAc,yBAC9BzK,GAAU,GAYd,OARe,IAFC,gEACOtH,KAAK,EAAK5H,MAAM0Z,SAEnC,EAAKra,SAAS,CACV6P,SAAS,EACTyK,aAAc,qEAGlB,EAAKta,SAAS,CAAEsa,aAAc,KAE3BzK,GAzJQ,EAgKnB0K,wBAA0B,SAAC5K,GAGvB,GAAG,EAAKhP,MAAM6Z,gBAAgB,EAIX,IAFC,8GACOjS,KAAK,EAAK5H,MAAM6Z,iBAEnC,EAAKxa,SAAS,CACV6P,SAAS,EACT4K,qBAAsB,kCAG1B,EAAKza,SAAS,CAAEya,qBAAsB,KAG9C,OAdc,GAlKC,EAuLnBC,eAAiB,SAAC/K,GAEd,GAAG,EAAKhP,MAAMga,OAAO,EAIF,IAFC,eACOpS,KAAK,EAAK5H,MAAMga,QAEnC,EAAK3a,SAAS,CACV6P,SAAS,EACT+K,YAAa,iDAIjB,EAAK5a,SAAS,CAAE4a,YAAa,KAGrC,OAfc,GAxLC,EA8MnBC,mBAAqB,SAAClL,GAElB,GAAG,EAAKhP,MAAMma,WAAW,EAGN,IAFC,eACOvS,KAAK,EAAK5H,MAAMma,YAEnC,EAAK9a,SAAS,CACV6P,SAAS,EACTkL,gBAAiB,sDAIrB,EAAK/a,SAAS,CAAE+a,gBAAiB,KAGzC,OAdc,GA/MC,EAoOnBC,wBAA0B,SAACrL,GACvB,IAAIE,GAAU,EAQd,OAPK,EAAKlP,MAAMsa,gBAKZ,EAAKjb,SAAS,CAAEkb,qBAAsB,MAJtC,EAAKlb,SAAS,CAAEkb,qBAAsB,iCACtCrL,GAAU,GAKPA,GA7OQ,EAoPnBmB,aAAe,SAACrB,GACZ,IAAIE,GAAU,EA4Bd,OA3BK,EAAK2J,mBACN3J,GAAU,GAET,EAAK6J,yBACN7J,GAAU,GAET,EAAKgK,sBACNhK,GAAU,GAET,EAAKoK,wBACNpK,GAAU,GAET,EAAKuK,oBACNvK,GAAU,GAET,EAAK0K,4BACN1K,GAAU,GAET,EAAK6K,mBACN7K,GAAU,GAET,EAAKgL,uBACNhL,GAAU,GAET,EAAKmL,4BACNnL,GAAU,GAEPA,GAjRQ,EAwRnBhJ,SAAW,SAAC8I,GACRA,EAAMrK,iBACNgR,GAAc6E,aAAa,EAAKxa,OAAOR,MAAK,SAACC,GACrC,EAAK4Q,gBACLjL,MAAM,gCAEV,EAAK/G,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,gBACrChD,OAAM,SAACC,GACNuF,MAAM,6BACNtF,QAAQC,IAAIF,OAjSD,EAySnB4a,YAAc,SAACzL,GACXA,EAAMrK,iBACN,EAAKtG,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,cAzSpC,EAAK5C,MAAQ,CACT2F,WAAY,GACZmT,gBAAiB,GACjBE,iBAAkB,GAClBC,sBAAuB,GACvBE,UAAW,GACXC,eAAgB,GAChBG,YAAa,GACbC,iBAAkB,GAClBK,gBAAiB,GACjBC,qBAAsB,GACtBJ,QAAS,GACTC,aAAc,GACdK,OAAQ,GACRC,YAAa,GACbS,oBAAqB,GACrBP,WAAY,GACZC,gBAAiB,GACjBE,gBAAiB,GACjBC,qBAAsB,GACtBI,QAAS,GACTC,OAAQ,GACRhc,OAAQP,EAAM+D,SAASxD,QAxBZ,EAHvB,iDA6CI,SAAcic,GACVta,KAAKlB,SAAS,CAAEsb,QAASE,MA9CjC,0BAqDI,SAAaA,GACTta,KAAKlB,SAAS,CAAEub,OAAQC,MAtDhC,oBAiTI,WAAU,IAAD,OACL,OACI,sBAAKjd,UAAU,sCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,aAAaC,SAAS,OAE5C,qBAAKX,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,cAACuF,EAAA,EAAD,CAAKvF,UAAU,qBAAf,SACI,cAACwF,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAD,WACI,eAAChD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,yBACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,aAAa6B,YAAY,oBAAoBtH,MAAOuB,KAAKP,MAAM+S,WAAYxM,SAAUhG,KAAKwO,cAC3GgF,OAAQxT,KAAKua,mBACb9G,UAAWzT,KAAKP,MAAM8Y,kBACpC,cAAC3S,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM8Y,uBAKxB,cAAC1V,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,0BACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,mBAAmB6B,YAAY,0BAA0BtH,MAAOuB,KAAKP,MAAM+a,iBAAkBxU,SAAUhG,KAAKwO,cAC7HgF,OAAQxT,KAAKwY,qBACb/E,UAAWzT,KAAKP,MAAMiZ,wBACpC,cAAC9S,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMiZ,gCAK5B,eAAC9V,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,wBACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,YAAY6B,YAAY,mBAAmBtH,MAAOuB,KAAKP,MAAMuO,UAAWhI,SAAUhG,KAAKwO,cACxGgF,OAAQxT,KAAK2Y,kBACblF,UAAWzT,KAAKP,MAAMoZ,iBACpC,cAACjT,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMoZ,sBAKxB,cAAChW,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,sBACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,cAAc6B,YAAY,qBAAqBtH,MAAOuB,KAAKP,MAAMgb,YAAazU,SAAUhG,KAAKwO,cAC9GgF,OAAQxT,KAAK+Y,oBACbtF,UAAWzT,KAAKP,MAAMwZ,mBACpC,cAACrT,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMwZ,2BAM5B,eAACrW,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,mBACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,UAAU6B,YAAY,iBAAiBtH,MAAOuB,KAAKP,MAAMib,QAAS1U,SAAUhG,KAAKwO,cAClGgF,OAAQxT,KAAKkZ,gBACbzF,UAAWzT,KAAKP,MAAM2Z,eACpC,cAACxT,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM2Z,oBAKxB,cAACvW,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,+BACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,kBAAkB6B,YAAY,yBAAyBtH,MAAOuB,KAAKP,MAAM6Z,gBAAiBtT,SAAUhG,KAAKwO,cAC1HgF,OAAQxT,KAAKqZ,wBACb5F,UAAWzT,KAAKP,MAAM8Z,uBACpC,cAAC3T,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM8Z,+BAM5B,eAAC3W,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,qBACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,SAAS6B,YAAY,oBAAoBtH,MAAOuB,KAAKP,MAAMkb,OAAQ3U,SAAUhG,KAAKwO,cACnGgF,OAAQxT,KAAKwZ,eACb/F,UAAWzT,KAAKP,MAAMia,cACpC,cAAC9T,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMia,mBAKxB,cAAC7W,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,mCACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,sBAAsB6B,YAAY,6BAA6BtH,MAAOuB,KAAKP,MAAMmb,oBAAqB5U,SAAUhG,KAAKwO,cACtIgF,OAAQxT,KAAK6a,sCAQvC,eAACjY,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,0BACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,aAAa6B,YAAY,oBAAoBtH,MAAOuB,KAAKP,MAAMqb,WAAY9U,SAAUhG,KAAKwO,cAC3GgF,OAAQxT,KAAK2Z,mBACblG,UAAWzT,KAAKP,MAAMoa,kBACpC,cAACjU,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMoa,uBAIxB,cAAChX,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,8BACA,eAACuI,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,SAASmB,KAAK,kBAAkB6B,YAAY,yBAAyBtH,MAAOuB,KAAKP,MAAMsb,gBAAiB/U,SAAUhG,KAAKwO,cAC1HgF,OAAQxT,KAAK8Z,wBACbrG,UAAWzT,KAAKP,MAAMua,qBAFpC,UAGI,oDACA,wBAAQvb,MAAM,cAAd,yBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,0BAEJ,cAACmH,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMua,+BAQ5B,eAACpX,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAACD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC+C,EAAA,EAAK4F,MAAN,UACI,sBAAKnO,UAAU,UAAf,UACI,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,sBACA,cAAC,KAAD,CAAiBA,UAAU,eAAe0F,GAAG,SAASmB,KAAK,UAAU8W,mBAAmB,iBAAiBvc,MAAOuB,KAAKP,MAAM2a,QAC1GpU,SAAU,SAACvH,GAAD,OAAW,EAAKwc,cAAcxc,aAKrE,cAACoE,EAAA,EAAD,UACI,cAAC+C,EAAA,EAAK4F,MAAN,UACI,sBAAKnO,UAAU,SAAf,UACI,cAACuI,EAAA,EAAKC,MAAN,sBACA,cAAC,KAAD,CAAgBxI,UAAU,eACV+c,QAASpa,KAAKP,MAAM2a,QAASc,iBAAiB,sBAAsBF,mBAAmB,gBACvFjY,GAAG,SAASmB,KAAK,SAASzF,MAAOuB,KAAKP,MAAM4a,OAAQrU,SAAU,SAACvH,GAAD,OAAW,EAAK0c,aAAa1c,kBAO/H,cAACoE,EAAA,EAAD,OAGJ,eAACD,EAAA,EAAD,CAAKvF,UAAU,4BAAf,UACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,qBAAqByD,QAASd,KAAK2F,SAArD,oBAGA,cAACM,EAAA,EAAD,CAAQ5I,UAAU,uBAAuByD,QAASd,KAAKka,YAAvD,uCApexC,GAA+B3Y,aAmfhBC,eAAW6W,ICnfb+C,GAAb,kDAGE,WAAYtd,GAAQ,IAAD,8BACjB,cAAMA,IA8DR4Z,YAAc,SAACpL,GAEb8I,GAAciG,cAAc/O,EAAIqL,UAAU1Y,MAAK,SAACC,GAC5C,EAAKpB,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,eAAiB,CACnD5C,MAAOP,EAASjB,UAEnBoB,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAtEC,EA8EnBgc,YAAc,SAAChP,GACb8I,GAAciG,cAAc/O,EAAIqL,UAAU1Y,MAAK,SAACC,GAC5C,EAAKpB,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,eAAiB,CACnD5C,MAAOP,EAASjB,UAEnBoB,OAAM,SAACC,GACNC,QAAQC,IAAIF,OApFC,EA4FnBic,cAAgB,SAACjP,GACf8I,GAAcoG,aAAalP,EAAIqL,UAAU1Y,MAAK,SAACC,GACzC2F,MAAM,gCACNuQ,GAAcC,cAAc,EAAKhX,QAAQY,MAAK,SAACC,GAC3C,GAAuB,KAAnBA,EAASuG,OAAe,CACxB,EAAKsO,QAAQ7U,EAASjB,MACtB,IAAIwd,EAAa,GACjBvc,EAASjB,KAAKiC,SAAQ,SAAAC,GACpB,IAAImM,EAAM,GACVA,EAAIkG,WAAarS,EAAQqS,WACzBlG,EAAI0B,UAAY7N,EAAQ6N,UACxB1B,EAAIoP,QAAUvb,EAAQsE,MACtB6H,EAAI4B,QAAU/N,EAAQ+N,QACtBuN,EAAWnb,KAAKgM,MAElB,EAAKxN,SAAS,CAACb,KAAMwd,QAE1Bpc,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAEjBD,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAjHD,EAqHnByU,QAAU,SAAC7U,GACT,EAAKjB,KAAO,IAtHK,EA6HnB0d,gBAAkB,SAAC5X,GACjBA,EAAEK,iBACF,EAAKtG,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,eACVhE,OAAQ,EAAKA,UA9HvC,EAAKoB,MAAQ,CACXxB,KAAO,GACPuU,WAAY,GACZoJ,aAAc,GACd5N,UAAW,GACX0N,QAAS,IAEX,EAAKC,gBAAkB,EAAKA,gBAAgBE,KAArB,iBAEvB,EAAKjS,QAAU,CACb,CAAEzI,OAAQ,cAAe6R,SAAU,cACnC,CAAE7R,OAAQ,aAAc6R,SAAU,aAClC,CAAE7R,OAAQ,QAAS6R,SAAU,WAC7B,CAAE7R,OAAQ,UAAW6R,SAAU,WAC/B,CACE7R,OAAQ,SAAU6R,SAAU,MAC5Ba,KAAM,gBAAGvH,EAAH,EAAGA,IAAH,OAEJ,sBAAKjP,UAAU,4BAAf,UACE,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,mBAAmBoa,MAAM,QAAQ3W,QAAS,kBAAM,EAAK4W,YAAYpL,IAAnF,kBACA,cAACrG,EAAA,EAAD,CAAQ5I,UAAU,mBAAmBoa,MAAM,QAAS3W,QAAS,kBAAM,EAAKwa,YAAYhP,IAApF,kBACA,cAACrG,EAAA,EAAD,CAAQ5I,UAAU,gBAAgBoa,MAAM,QAAS3W,QAAS,kBAAM,EAAKya,cAAcjP,IAAnF,0BAKN,EAAKjO,OAASuB,aAAaC,QAAQ,WA5BpB,EAHrB,qDAsCE,WAAqB,IAAD,OAElBuV,GAAcC,cAAcrV,KAAK3B,QAAQY,MAAK,SAACC,GAC3C,GAAuB,KAAnBA,EAASuG,OAAe,CACxB,EAAKsO,QAAQ7U,EAASjB,MACtB,IAAI6d,EAAa,GACjB5c,EAASjB,KAAKiC,SAAQ,SAAAC,GACpB,IAAImM,EAAM,GACVA,EAAIkG,WAAarS,EAAQqS,WACzBlG,EAAI0B,UAAY7N,EAAQ6N,UACxB1B,EAAIoP,QAAUvb,EAAQsE,MACtB6H,EAAI4B,QAAU/N,EAAQ+N,QACtB4N,EAAWxb,KAAKgM,MAElB,EAAKxN,SAAS,CACZb,KAAM6d,QAGbzc,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAzDpB,oBAsIE,WACE,OACE,8BACE,sBAAKjC,UAAU,mCAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,CAAYU,MAAM,UAAUC,SAAS,OAEvC,qBAAKX,UAAU,yBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAACuF,EAAA,EAAD,CAAKvF,UAAU,mBAAf,SACE,cAACwF,EAAA,EAAD,UACE,cAACoD,EAAA,EAAD,CAAQ5I,UAAU,iBAAiByI,KAAK,SAAS2R,MAAM,QAAQ3W,QAASd,KAAK2b,gBAA7E,yBAGJ,cAAC/Y,EAAA,EAAD,CAAKvF,UAAU,uBAAf,SACE,cAACwF,EAAA,EAAD,UACE,cAAC,GAAD,CAAW+G,QAAS5J,KAAK4J,QAAS3L,KAAM+B,KAAKP,MAAMxB,yBAtJrE,GAA6BsD,aAiKdC,eAAW4Z,ICnKbW,GAAb,kDAGI,WAAYje,GAAQ,IAAD,8BACf,cAAMA,IAgCV0Q,cAAgB,SAACC,GACb,EAAK3P,SAAL,eACK2P,EAAMxK,OAAOC,KAAOuK,EAAMxK,OAAOxF,SAnCvB,EA2DnB6Z,eAAiB,SAAC7J,GACd,IAAIE,GAAU,EAQd,OAPK,EAAKlP,MAAM2F,WAKZ,EAAKtG,SAAS,CAAEyZ,gBAAiB,MAJjC,EAAKzZ,SAAS,CAAEyZ,gBAAiB,4BACjC5J,GAAU,GAKPA,GApEQ,EA2EnB6J,qBAAuB,SAAC/J,GACpB,IAAIE,GAAU,EAQd,OAPK,EAAKlP,MAAMgZ,iBAKZ,EAAK3Z,SAAS,CAAE4Z,sBAAuB,MAJvC,EAAK5Z,SAAS,CAAE4Z,sBAAuB,kCACvC/J,GAAU,GAKPA,GApFQ,EA2FnBgK,kBAAoB,SAAClK,GACjB,IAAIE,GAAU,EAgBd,OAfK,EAAKlP,MAAMmZ,YACZ,EAAK9Z,SAAS,CAAE+Z,eAAgB,2BAChClK,GAAU,IAIC,IAFD,IAAImK,OAAO,cACFzR,KAAK,EAAK5H,MAAMmZ,WAEnC,EAAK9Z,SAAS,CACV6P,SAAS,EACTkK,eAAgB,mEAIpB,EAAK/Z,SAAS,CAAE+Z,eAAgB,KAE7BlK,GA5GQ,EAmHnBoK,oBAAsB,SAACtK,GAGnB,GAAG,EAAKhP,MAAMuZ,YAAY,EAGP,IAFC,6NACO3R,KAAK,EAAK5H,MAAMuZ,aAEnC,EAAKla,SAAS,CACV6P,SAAS,EACTsK,iBAAkB,4DAItB,EAAKna,SAAS,CAAEma,iBAAkB,KAG1C,OAfc,GApHC,EA0InBC,gBAAkB,SAACzK,GACf,IAAIE,GAAU,EACT,EAAKlP,MAAM0Z,UACZ,EAAKra,SAAS,CAAEsa,aAAc,yBAC9BzK,GAAU,GAYd,OARe,IAFC,gEACOtH,KAAK,EAAK5H,MAAM0Z,SAEnC,EAAKra,SAAS,CACV6P,SAAS,EACTyK,aAAc,qEAGlB,EAAKta,SAAS,CAAEsa,aAAc,KAE3BzK,GA1JQ,EAiKnB0K,wBAA0B,SAAC5K,GAGvB,GAAG,EAAKhP,MAAM6Z,gBAAgB,EAIX,IAFC,8GACOjS,KAAK,EAAK5H,MAAM6Z,iBAEnC,EAAKxa,SAAS,CACV6P,SAAS,EACT4K,qBAAsB,kCAG1B,EAAKza,SAAS,CAAEya,qBAAsB,KAG9C,OAdc,GAnKC,EAwLnBC,eAAiB,SAAC/K,GAEd,GAAG,EAAKhP,MAAMga,OAAO,EAIF,IAFC,eACOpS,KAAK,EAAK5H,MAAMga,QAEnC,EAAK3a,SAAS,CACV6P,SAAS,EACT+K,YAAa,iDAIjB,EAAK5a,SAAS,CAAE4a,YAAa,KAGrC,OAfc,GAzLC,EA+MnBC,mBAAqB,SAAClL,GAElB,GAAG,EAAKhP,MAAMma,WAAW,EAGN,IAFC,eACOvS,KAAK,EAAK5H,MAAMma,YAEnC,EAAK9a,SAAS,CACV6P,SAAS,EACTkL,gBAAiB,sDAIrB,EAAK/a,SAAS,CAAE+a,gBAAiB,KAGzC,OAdc,GAhNC,EAqOnBC,wBAA0B,SAACrL,GACvB,IAAIE,GAAU,EAQd,OAPK,EAAKlP,MAAMsa,gBAKZ,EAAKjb,SAAS,CAAEkb,qBAAsB,MAJtC,EAAKlb,SAAS,CAAEkb,qBAAsB,iCACtCrL,GAAU,GAKPA,GA9OQ,EAqPnBmB,aAAe,SAACrB,GACZ,IAAIE,GAAU,EA4Bd,OA3BK,EAAK2J,mBACN3J,GAAU,GAET,EAAK6J,yBACN7J,GAAU,GAET,EAAKgK,sBACNhK,GAAU,GAET,EAAKoK,wBACNpK,GAAU,GAET,EAAKuK,oBACNvK,GAAU,GAET,EAAK0K,4BACN1K,GAAU,GAET,EAAK6K,mBACN7K,GAAU,GAET,EAAKgL,uBACNhL,GAAU,GAET,EAAKmL,4BACNnL,GAAU,GAEPA,GAlRQ,EAyRnBqN,SAAW,SAACvN,GACRA,EAAMrK,iBACF,EAAK0L,iBACLsF,GAAc6G,WAAW,EAAKxc,OAAOR,MAAK,SAACC,OACxCG,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhBuF,MAAM,kCACN,EAAK/G,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,eAjSzB,EAySnB6X,YAAc,SAACzL,GACXA,EAAMrK,iBACN,EAAKtG,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,cAxSpC,EAAK5C,MAAQ,CACTyc,SAAUpe,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM0c,SAC7C/W,WAAYtH,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM+S,WAC/C+F,gBAAiB,GACjBE,iBAAkB3a,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMmc,aACrDlD,sBAAuB,GACvBE,UAAW9a,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMuO,UAC9C6K,eAAgB,GAChBG,YAAalb,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMyO,QAChD+K,iBAAkB,GAClBE,QAASrb,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMgF,MAC5C2U,aAAc,GACdE,gBAAiBxb,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMwO,gBACpDsL,qBAAsB,GACtBE,OAAQ3b,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMkb,OAC3CjB,YAAa,GACbS,oBAAqBrc,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMmb,oBACxDhB,WAAY9b,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMqb,WAC/CjB,gBAAiB,GACjBE,gBAAiBjc,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMsb,gBACpDf,qBAAsB,GACtBI,QAAStc,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM2c,QAC5C/B,OAAQvc,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM4c,QAzBhC,EAHvB,iDA8CI,SAAenY,EAAMoW,GACjBta,KAAKlB,SAAS,CAAGoF,KAAMoW,MA/C/B,0BAsDI,SAAcA,GACVta,KAAKlB,SAAS,CAAEoF,KAAMoW,MAvD9B,oBAiTI,WAAU,IAAD,OACL,OACI,sBAAKjd,UAAU,sCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,cAAcC,SAAS,OAE7C,qBAAKX,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,cAACuF,EAAA,EAAD,CAAKvF,UAAU,qBAAf,SACI,cAACwF,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAD,WACI,eAAChD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,yBACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,aAAa6B,YAAY,oBAAoBtH,MAAOuB,KAAKP,MAAM2F,WAAYY,SAAUhG,KAAKwO,cAC3GgF,OAAQxT,KAAKua,mBACb9G,UAAazT,KAAKP,MAAM8Y,kBACtC,cAAC3S,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM8Y,uBAKxB,cAAC1V,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,0BACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,mBAAmB6B,YAAY,0BAA0BtH,MAAOuB,KAAKP,MAAMgZ,iBAAkBzS,SAAUhG,KAAKwO,cAC7HgF,OAAQxT,KAAKwY,qBACb/E,UAAazT,KAAKP,MAAMiZ,wBACtC,cAAC9S,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMiZ,gCAK5B,eAAC9V,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,wBACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,YAAY6B,YAAY,mBAAmBtH,MAAOuB,KAAKP,MAAMmZ,UAAW5S,SAAUhG,KAAKwO,cACxGgF,OAAQxT,KAAK2Y,kBACblF,UAAWzT,KAAKP,MAAMoZ,iBACpC,cAACjT,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMoZ,sBAKxB,cAAChW,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,sBACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,cAAc6B,YAAY,qBAAqBtH,MAAOuB,KAAKP,MAAMuZ,YAAahT,SAAUhG,KAAKwO,cAC9GgF,OAAQxT,KAAK+Y,oBACbtF,UAAWzT,KAAKP,MAAMwZ,mBACpC,cAACrT,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMwZ,2BAM5B,eAACrW,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,mBACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,UAAU6B,YAAY,iBAAiBtH,MAAOuB,KAAKP,MAAM0Z,QAASnT,SAAUhG,KAAKwO,cAClGgF,OAAQxT,KAAKkZ,gBACbzF,UAAWzT,KAAKP,MAAM2Z,eACpC,cAACxT,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM2Z,oBAKxB,cAACvW,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,+BACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,kBAAkB6B,YAAY,yBAAyBtH,MAAOuB,KAAKP,MAAM6Z,gBAAiBtT,SAAUhG,KAAKwO,cAC1HgF,OAAQxT,KAAKqZ,wBACb5F,UAAWzT,KAAKP,MAAM8Z,uBACpC,cAAC3T,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM8Z,+BAM5B,eAAC3W,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,qBACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,SAAS6B,YAAY,oBAAoBtH,MAAOuB,KAAKP,MAAMga,OAAQzT,SAAUhG,KAAKwO,cACnGgF,OAAQxT,KAAKwZ,eACb/F,UAAWzT,KAAKP,MAAMia,cACpC,cAAC9T,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMia,mBAKxB,cAAC7W,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,mCACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,sBAAsB6B,YAAY,6BAA6BtH,MAAOuB,KAAKP,MAAM0a,oBAAqBnU,SAAUhG,KAAKwO,cACtIgF,OAAQxT,KAAK6a,sCAQvC,eAACjY,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,0BACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,aAAa6B,YAAY,oBAAoBtH,MAAOuB,KAAKP,MAAMma,WAAY5T,SAAUhG,KAAKwO,cAC3GgF,OAAQxT,KAAK2Z,mBACblG,UAAWzT,KAAKP,MAAMoa,kBACpC,cAACjU,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMoa,uBAIxB,cAAChX,EAAA,EAAD,UACI,eAAC+C,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,8BACA,eAACuI,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,SAASmB,KAAK,kBAAkB6B,YAAY,yBAAyBtH,MAAOuB,KAAKP,MAAMsa,gBAAiB/T,SAAUhG,KAAKwO,cAC1HgF,OAAQxT,KAAK8Z,wBACbrG,UAAWzT,KAAKP,MAAMua,qBAFpC,UAGI,oDACA,wBAAQvb,MAAM,cAAd,yBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,0BAEJ,cAACmH,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMua,+BAQ5B,eAACpX,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC+C,EAAA,EAAK4F,MAAN,UACI,eAAC5I,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,sBAAKxF,UAAU,UAAf,UACI,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,sBACA,cAAC,KAAD,CAAiBA,UAAU,eAAe0F,GAAG,SAASmB,KAAK,UAAU8W,mBAAmB,iBAAiBvc,MAAOuB,KAAKP,MAAM2a,QAC1GpU,SAAU,SAACvH,GAAD,OAAW,EAAKwc,cAAcxc,WAIjE,cAACoE,EAAA,EAAD,UACI,sBAAKxF,UAAU,SAAf,UACI,cAACuI,EAAA,EAAKC,MAAN,sBACA,cAAC,KAAD,CAAgBxI,UAAU,eACtB+c,QAASpa,KAAKP,MAAM2a,QAASc,iBAAiB,sBAAsBF,mBAAmB,gBACvFjY,GAAG,SAASmB,KAAK,SAASzF,MAAOuB,KAAKP,MAAM4a,OAAQrU,SAAU,SAACvH,GAAD,OAAW,EAAK0c,aAAa1c,kBAOnH,cAACoE,EAAA,EAAD,OAGJ,eAACD,EAAA,EAAD,CAAKvF,UAAU,4BAAf,UACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,qBAAqByD,QAASd,KAAKgc,SAArD,oBAGA,cAAC/V,EAAA,EAAD,CAAQ5I,UAAU,uBAAuByD,QAASd,KAAKka,YAAvD,uCAlexC,GAAgC3Y,aAifjBC,eAAWua,IClfbO,GAAb,kDAGI,WAAYxe,GAAQ,IAAD,8BACf,cAAMA,IAuBVoc,YAAc,SAACzL,GACXA,EAAMrK,iBACN,EAAKtG,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,cAvBpC,EAAK5C,MAAQ,CACT0c,SAAUre,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM0c,SAC7C/W,WAAYtH,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM+S,WAC/CiG,iBAAkB3a,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMmc,aACrDhD,UAAW9a,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMuO,UAC9CgL,YAAalb,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMyO,QAChDoL,gBAAiBxb,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMwO,gBACpDkL,QAASrb,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMgF,MAC5CgV,OAAQ3b,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMkb,OAC3CR,oBAAqBrc,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMmb,oBACxDhB,WAAY9b,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMqb,WAC/Cf,gBAAiBjc,EAAM0E,QAAQX,SAASpC,MAAMA,MAAMsb,gBACpDX,QAAStc,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM2c,QAC5C/B,OAAQvc,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM4c,QAhBhC,EAHvB,0CAgCI,WACI,OACI,sBAAKhf,UAAU,sCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,cAAcC,SAAS,OAE7C,qBAAKX,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAACuF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKxF,UAAU,aAAf,SACI,eAAC4I,EAAA,EAAD,CAAQ5I,UAAU,qBAAqByD,QAASd,KAAKka,YAArD,UACI,mBAAG7c,UAAU,iBADjB,gBAKR,uBACA,cAACuF,EAAA,EAAD,CAAKvF,UAAU,yBAAf,SACI,cAACwF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAAC4I,GAAA,EAAD,CAAOC,UAAQ,EAACwC,OAAK,EAArB,SACI,kCACA,+BACI,8CACA,6BAAKnO,KAAKP,MAAM2F,gBAEpB,+BACI,6CACA,6BAAKpF,KAAKP,MAAMmZ,eAEpB,+BACI,wCACA,6BAAK5Y,KAAKP,MAAM0Z,aAEpB,+BACI,yCACA,6BAAKnZ,KAAKP,MAAMga,YAEpB,+BACI,8CACA,6BAAKzZ,KAAKP,MAAMma,gBAEpB,+BACI,yCACA,6BAAK5Z,KAAKP,MAAM4a,YAEpB,+BACI,0CACA,6BAAKra,KAAKP,MAAM2a,aAEpB,+BACI,+CACA,6BAAKpa,KAAKP,MAAMgZ,sBAEpB,+BACI,0CACA,6BAAKzY,KAAKP,MAAMuZ,iBAEpB,+BACI,mDACA,6BAAKhZ,KAAKP,MAAM6Z,qBAEpB,+BACI,uDACA,6BAAKtZ,KAAKP,MAAM0a,yBAEpB,+BACI,mDACA,6BAAKna,KAAKP,MAAMsa,0CAlGxD,GAAgCxY,aA+GjBC,eAAW8a,IC1FX,OA7Bf,2HAGI,WAAWre,GAAX,iBAAAC,EAAA,6DACQC,EAAS,IACP,OAAaF,EAAKI,OAF5B,SAGyBC,IAAMC,KAAK,oBAAoBJ,GAHxD,cAGUK,EAHV,yBAIWA,EAAOP,MAJlB,2CAHJ,+GAWI,WAAUA,GAAV,eAAAC,EAAA,sEACyBI,IAAMC,KAAK,wBAAwBN,GAD5D,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CAXJ,kHAiBI,WAAaA,GAAb,eAAAC,EAAA,sEACyBI,IAAM8E,IAAI,4BAA4BnF,EAAKwC,GAAGxC,GADvE,cACUO,EADV,yBAEWA,EAAOP,MAFlB,2CAjBJ,kHAuBI,WAAayP,GAAb,eAAAxP,EAAA,sEACyBI,IAAMC,KAAK,2BAA4BmP,GADhE,cACUlP,EADV,yBAEWA,EAAOP,MAFlB,2CAvBJ,+DC2Oese,GA/NM,WAKjB,IAAM3S,EAAU,CACZ,CAAEzI,OAAQ,UAAW6R,SAAU,WAC/B,CAAE7R,OAAQ,SAAU6R,SAAU,UAC9B,CAAE7R,OAAQ,WAAY6R,SAAU,YAGhC,CAEI7R,OAAQ,UAAW6R,SAAU,MAC7Ba,KAAM,gBAAGvH,EAAH,EAAGA,IAAH,OACF,qBAAKjP,UAAU,SAAf,SACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,gBAAiByD,QAAU,kBAAM0b,EAAkBlQ,IAArE,yBAUhB,EAA+B5K,mBAAS,IAAxC,mBAAOkN,EAAP,KAAgBsG,EAAhB,KACAxS,qBAAU,WACN4S,GAAgBrB,KAAK,CAAC,OAAUrU,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAIkQ,EAAYlQ,EAAI/G,WAChG,IAMF,MAA4ByD,mBAAS,IAArC,mBAAO8L,EAAP,KAAeyJ,EAAf,KACAvU,qBAAU,WACN+Z,GAAepH,cAAczV,aAAaC,QAAQ,YAAYZ,MAAK,SAAA+F,GAAG,OAAIiS,EAAUjS,EAAI/G,WAC1F,IAKK,MAAsCyD,mBAAS,IAA/C,mBAAOgb,EAAP,KAAoBC,EAApB,KACPja,qBAAU,WACNka,GAAoB3I,KAAK,CAAC5V,OAAQuB,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAI2X,EAAe3X,EAAI/G,WACrG,IAKF,MAAgCyD,mBAAS,CACrCkN,QAAS,GACTpB,OAAQ,GACRlI,QAAS,GACT7E,GAAI,GACJpC,OAAQuB,aAAaC,QAAQ,aALjC,mBAAOgd,EAAP,KAAiBC,EAAjB,KA8DA,IAAMN,EAAoB,SAAClQ,GACnB2J,OAAOC,QAAQ,mBACf0G,GAAoBrP,OAAOjB,EAAIqL,UAAU1Y,MAAK,SAAA+F,GAAG,OAAIH,MAAMG,EAAIM,YAC/DsX,GAAoB3I,KAAK,CAAC5V,OAAQuB,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAAG,OAAI2X,EAAe3X,EAAI/G,WASrG6F,EAAe,SAACC,GAClB,IAAIgZ,EAAU,2BAAOF,GAAP,kBAAkB9Y,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QACzDqe,EAAYC,IAIhB,EAA4Brb,oBAAS,GAArC,mBAAOsb,EAAP,KAAeC,EAAf,KAEA,OACI,sBAAK5f,UAAU,2CAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,mBAEtB,qBAAKV,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,eAACuF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKqa,GAAI,GAAT,SACI,qBAAK7f,UAAU,4BAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,aACf,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,qBAAKA,UAAU,4BAAf,SACI,wBAAQA,UAAU,iBAAiByI,KAAK,SAAS2R,MAAM,QAAQ3W,QAAS,kBAAMmc,GAAU,IAAxF,0BAGR,eAAClc,EAAA,EAAD,CACIoc,KAAK,KACLnc,KAAMgc,EACN/b,OAAQ,kBAAMgc,GAAU,IACxBG,kBAAgB,+BAJpB,UAMI,cAACrc,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,CAAaZ,GAAG,+BAAhB,mCAIJ,cAACM,EAAA,EAAMO,KAAP,UACI,eAACsE,EAAA,EAAD,CAAMnF,GAAG,eAAT,UAEI,uBAAOqF,KAAK,SAAS5B,KAAK,iBAAiBzD,GAAG,iBAAiBhC,MAAM,oBACrE,uBAAOqH,KAAK,SAAS5B,KAAK,iBAAiBzD,GAAG,iBAAiBhC,MAAM,2BACrE,uBAAOqH,KAAK,SAAS5B,KAAK,aAAazD,GAAG,aAAahC,MAAM,gBAC7D,uBAAOqH,KAAK,SAAS5B,KAAK,aAAazD,GAAG,aAAahC,MAAM,6BAC7D,uBAAOqH,KAAK,SAAS5B,KAAK,UAAUzD,GAAG,UAAUhC,MAAM,gBAEvD,eAACmH,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,sBAAtB,oBACA,eAACuI,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,SAASmB,KAAK,SACjB8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAD5C,UAGI,mDACCyJ,EAAOF,QAAUE,EAAO7M,KAAI,SAAS0c,EAAIzc,GACtC,OAAO,wBAAoBnC,MAAO4e,EAAI7K,WAA/B,SAA4C6K,EAAI7K,YAAnC5R,YAKhC,eAACgF,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,sBAAtB,qBACA,eAACuI,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,SAASmB,KAAK,UACjB8B,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAD5C,UAGI,oDACC6K,EAAQtB,QAAUsB,EAAQ8H,QAAO,SAAA4G,GAAI,OAAIA,EAAK9P,QAAU8P,EAAK9P,OAAOmJ,SAASkG,EAASrP,WAClF7M,KAAI,SAAS2c,EAAK1c,GACf,OAAO,wBAAoBnC,MAAO6e,EAAKvf,MAAhC,SAAwCuf,EAAKvf,OAAhC6C,YAKpC,eAACgF,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,sBAAtB,iCACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,WAAWmB,KAAK,UAAUuG,KAAM,EAAGhK,GAAG,UACzCuF,SAAU,SAACjC,GAAD,OAAOD,EAAaC,SAGhD,cAACkC,EAAA,EAAD,CAAQsB,QAAQ,UAAUzB,KAAK,SAASrF,GAAG,SAAShC,MAAM,OAAOqC,QA1I/F,SAACiD,GACfA,EAAEK,iBACF6Y,GAAU,GACVL,GAAoB5G,IAAI6G,GAAU5d,MAAK,SAAAC,GACnC2d,EAASpc,GAAKvB,EAASV,OAAOoG,OAWtC,WAEI,IAAM2Y,EAAY,0DAA4DV,EAASpc,GAGnFwE,EAAa,CAGbC,eAAgB,aAChBC,eAAgB,yBAGhBC,WAAY,SACZC,WAAY,2BAGZC,QAASuX,EAASvX,QAClBkY,KAAMD,GAIVhY,IAAQC,KAAK,sBAAuB,mBAAoBP,EAAY,8BAC/DhG,MAAK,SAAUC,GACZ2F,MAAM,iBACP,SAAUvF,GACTuF,MAAM,UAAYvF,GAClBC,QAAQC,IAAIF,MAlCpBme,IAmI4C,oCAU5B,cAAC5a,EAAA,EAAD,CAAKqa,GAAI,GAAT,SACI,cAAC,GAAD,CAAWtT,QAASA,EAAS3L,KAAMye,iBCzIhDgB,GA3EY,SAAC1F,GAExB,IAAM2F,EAAQ1F,cAGd,EAAgCvW,mBAAS,CAErCkc,SAAU,GACVnd,GAAKkd,EAAMld,KAHf,mBAAOmd,EAAP,KAAiBC,EAAjB,KA0BA,OACI,gCACI,qBAAKxgB,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,0BAEtB,sBAAKV,UAAU,yBAAf,UACA,8BACA,eAACuF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAM,IACX,cAACD,EAAA,EAAD,CAAKC,GAAM,UAGf,eAACF,EAAA,EAAD,WACQ,cAACC,EAAA,EAAD,CAAKC,GAAM,IACX,cAACD,EAAA,EAAD,CAAKC,GAAM,GAAX,SACA,eAAC8C,EAAA,EAAD,CAAMvI,UAAU,gBAAhB,UACY,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACI,eAACuI,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,sBAAtB,wBACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc1I,GAAG,WAAWmB,KAAK,WAAWuG,KAAM,EAAGhK,GAAG,WAAWsF,YAAY,6BAC3EC,SAAU,SAACjC,GAAD,OApC7B,SAACA,GAClB,IAAI+Z,EAAW,2BAAOF,GAAP,kBAAkB7Z,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QAC1Dof,EAAYC,GAkCyCha,CAAaC,WAI1C,qBAAK1G,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACA,cAAC4I,EAAA,EAAD,CAAQsB,QAAQ,UAAUzB,KAAK,SAASrF,GAAG,iBAAiBK,QAjCtE,SAACiD,GACfA,EAAEK,iBACFwY,GAAoBpG,OAAOoH,IA+BH,sBAIA,qBAAKvgB,UAAU,kBAI3B,cAACwF,EAAA,EAAD,CAAKC,GAAM,cCzElBib,I,cAAb,kDAEI,WAAYjgB,GAAQ,IAAD,8BACf,cAAMA,IAkEVkgB,YAAc,SAAC1R,GACX,EAAKxO,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,gBAAkB,CAClD5C,MAAO6M,EAAIqL,SAASsG,iBArET,EAyEnBC,YAAc,SAAC5R,GAEX,EAAKxO,MAAM0E,QAAQlC,KAAK,CAAE+B,SAAU,sBAAwB,CACxD5C,MAAO6M,EAAIqL,SAASsG,iBA5ET,EAiFnBE,cAAgB,SAAC7R,GACb6D,GAAgBiO,cAAc9R,EAAIqL,UAAU1Y,MAAK,SAACC,GAC1CA,IACA,EAAKJ,SAAS,CAAEyO,OAAQ,SACxB1I,MAAM,mBACN,EAAKwZ,qBAEVhf,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAvFhB,EAAKG,MAAQ,CACT0D,KAAMvD,aAAaC,QAAQ,WAC3Bye,SAAU,OACV/Q,OAAQ,QACR3D,QAAS,CACL,CAAEzI,OAAQ,iBAAkB6R,SAAU,iBACtC,CAAE7R,OAAQ,iBAAkB6R,SAAU,iBACtC,CAAE7R,OAAQ,YAAa6R,SAAU,YACjC,CAAE7R,OAAQ,UAAW6R,SAAU,UAC/B,CAAE7R,OAAQ,WAAY6R,SAAU,WAChC,CAAE7R,OAAQ,cAAe6R,SAAU,cACnC,CAAE7R,OAAQ,eAAgB6R,SAAU,eACpC,CAAE7R,OAAQ,iBAAkB6R,SAAU,iBACtC,CACI7R,OAAQ,SAAU6R,SAAU,UAC5Ba,KAAM,gBAAGvH,EAAH,EAAGA,IAAH,OACF,gCACI,cAACrG,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAAS,kBAAM,EAAKkd,YAAY1R,IAArE,kBACA,cAACrG,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAAS,kBAAM,EAAKod,YAAY5R,IAArE,kBACA,cAACrG,EAAA,EAAD,CAAQ5I,UAAU,gBAAgByD,QAAS,kBAAM,EAAKqd,cAAc7R,IAApE,0BAIhBrO,KAAM,IAzBK,EAFvB,kDAgCI,WAAkB,IAAD,OAEbkS,GAAgBkO,eAAere,KAAKP,OAAOR,MAAK,SAACC,GAC7C,GAAuB,KAAnBA,EAASuG,OAAe,CACxB,IAAIuK,EAAiB,GACrB9Q,EAASjB,KAAKO,OAAO0B,SAAQ,SAAAC,GAEzB,IAAImM,EAAM,GACVA,EAAI2R,cAAgB9d,EAAQyE,IAC5B0H,EAAIiS,cAAgB1M,IAAO1R,EAAQ4S,eAAehT,OAAO,cACzDuM,EAAIkS,SAAW3M,IAAO1R,EAAQgT,WAAWpT,OAAO,cAChDuM,EAAImS,OAAS5M,IAAO1R,EAAQiT,aAAarT,OAAO,cAChDuM,EAAIoS,QAAU7M,IAAO1R,EAAQ+O,SAASnP,OAAO,cAC7CuM,EAAIqS,WAAaxe,EAAQiF,WACzBkH,EAAIsS,YAAcze,EAAQ+S,YAC1B5G,EAAIuS,cAAgB1e,EAAQyS,cAC5BtG,EAAI6G,UAAYtB,IAAO1R,EAAQgT,WAAWpT,OAAO,cAEjDiQ,EAAe1P,KAAKgM,MAGK,GAAzB0D,EAAe1C,QACf,EAAKxO,SAAS,CACVb,KAAM+R,QAInB3Q,OAAM,SAACC,GACNC,QAAQC,IAAIF,QA5DxB,+BAgEI,WACIU,KAAKqe,mBAjEb,oBA+FI,WACI,OAEI,sBAAKhhB,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,qBAAqBC,SAAS,OAEpD,qBAAKX,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAACuF,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAKxF,UAAU,kBAAf,SACI,mBAAGG,KAAK,qBAAqBO,MAAM,cAAcV,UAAU,qBAA3D,kCAKJ,cAAC,GAAD,CAAWuM,QAAS5J,KAAKP,MAAMmK,QAAS3L,KAAM+B,KAAKP,MAAMxB,KAAM4L,SAAS,sBA/GhG,GAA8BtI,cAsHfC,eAAWuc,ICtGX,I,OAAA,IAzBf,kIACI,WAAkB9f,GAAlB,iBAAAC,EAAA,6DACQC,EAAS,IACP,YAAkBF,EAAKG,YAC7BD,EAAM,OAAaF,EAAKI,OAH5B,SAIyBC,IAAMC,KAAK,yBAA0BJ,GAJ9D,cAIUK,EAJV,yBAKWA,GALX,2CADJ,0HASI,WAAqBiC,GAArB,eAAAvC,EAAA,sEACyBI,IAAM8E,IAAI,4BAA6B,CAAE,GAAM3C,IADxE,cACUjC,EADV,yBAEWA,GAFX,2CATJ,sHAcI,WAAiBiC,GAAjB,eAAAvC,EAAA,sEACyBI,IAAMiP,OAAO,6BAA+B9M,GADrE,cACUjC,EADV,yBAEWA,GAFX,2CAdJ,oHAmBI,WAAeiP,GAAf,eAAAvP,EAAA,sEACyBI,IAAMC,KAAK,0BAA2BkP,GAD/D,cACUjP,EADV,yBAEWA,GAFX,2CAnBJ,gECQasgB,GAAb,kDAEI,WAAYhhB,GAAQ,IAAD,uBACf,cAAMA,IA0BV0Q,cAAgB,SAACC,GACb,EAAK3P,SAAL,eACK2P,EAAMxK,OAAOC,KAAOuK,EAAMxK,OAAOxF,SA7BvB,EA+FnBsgB,SAAW,SAACtQ,GAER,GADAA,EAAMrK,iBACF,EAAK3E,MAAMkW,QAAS,CACpB,IAAIlI,EAAW,CACX1P,MAAO,EAAK0B,MAAMkW,QAClBrH,KAAM,EAAK7O,MAAM6O,KACjBjQ,OAAQ,EAAKA,QAEjB2gB,GAAgBC,SAASxR,GAAUxO,MAAK,SAAAC,GACb,KAAnBA,EAASuG,SACT,EAAK3G,SAAS,CAAE6W,QAAS,KACzB,EAAKuJ,WAAW,EAAKzf,MAAM6O,MAC3BzJ,MAAM,oCAIdA,MAAM,4BA/GK,EAwHnBsa,gBAAkB,SAAC1Q,GACf,IAAI2Q,EAAetf,IAAO,EAAKL,MAAM6O,KAAM,cAAc+Q,SAAS,EAAG,OAAOtf,OAAO,cACnF,EAAKjB,SAAS,CAAEwP,KAAM8Q,IACtB,EAAKF,WAAWE,IA3HD,EAkInBE,YAAc,SAAC7Q,GACX,IAAI8Q,EAAWzf,IAAO,EAAKL,MAAM6O,KAAM,cAAc0H,IAAI,EAAG,OAAOjW,OAAO,cAC1E,EAAKjB,SAAS,CAAEwP,KAAMiR,IACtB,EAAKL,WAAWK,IAlIhB,IAAMnhB,EAAc0B,MAASC,OAAO,cAHrB,OAIf,EAAKN,MAAQ,CACT+f,cAAe,GACfC,gBAAiB,GACjBnR,KAAMlQ,EACNuX,QAAS,IAGb,EAAKvV,KAAO,CACRrC,MAAO,GACP0H,QAAQ,EACR6I,KAAMlQ,GAEV,EAAKC,OAASuB,aAAaC,QAAQ,WAhBpB,EAFvB,qDAqBI,WACIG,KAAKkf,WAAWlf,KAAKP,MAAM6O,QAtBnC,wBAyCI,SAAWA,GAAO,IAAD,OACb0Q,GAAgBU,YAAY,CAAC,YAAepR,EAAM,OAAUtO,KAAK3B,SAASY,MAAK,SAAAC,GAC3E,GAAwB,MAApBA,EAASuG,OACT,GAAIvG,EAASjB,MAAQiB,EAASjB,KAAKO,QAAUU,EAASjB,KAAKO,OAAO8O,OAAQ,CACtE,IAAIqS,EAAe,GACfC,EAAiB,GACrB1gB,EAASjB,KAAKO,OAAO0B,SAAQ,SAAAoM,GACrBA,GAAqB,GAAdA,EAAI7G,OACXka,EAAarf,KAAKgM,GAElBsT,EAAetf,KAAKgM,MAG5B,EAAKxN,SAAS,CAAE0gB,cAAeG,IAC/B,EAAK7gB,SAAS,CAAE2gB,gBAAiBG,SAEjC,EAAK9gB,SAAS,CAAE0gB,cAAe,KAC/B,EAAK1gB,SAAS,CAAE2gB,gBAAiB,UA1DrD,8BAqEI,SAAiBI,GAAU,IAAD,OACtBb,GAAgBc,eAAeD,EAAQjb,KAAK3F,MAAK,SAAAC,GACtB,KAAnBA,EAASuG,SACT,EAAKyZ,WAAW,EAAKzf,MAAM6O,MAC3BzJ,MAAM,qCAzEtB,4BAmFI,SAAegb,GAAU,IAAD,OACpBb,GAAgBlL,WAAW+L,EAAQjb,KAAK3F,MAAK,SAAAC,GAClB,KAAnBA,EAASuG,SACT,EAAKyZ,WAAW,EAAKzf,MAAM6O,MAC3BzJ,MAAM,mCAvFtB,oBA0II,WAAU,IAAD,OACL,OACI,sBAAKxH,UAAU,sCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,YAAYC,SAAS,OAE3C,qBAAKX,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,eAACC,EAAA,EAAD,CAAWD,UAAU,qBAArB,UACI,cAACuF,EAAA,EAAD,CAAKvF,UAAU,WAAf,SACI,eAACwF,EAAA,EAAD,CAAKxF,UAAU,eAAf,UACI,sBAAMA,UAAU,gBAAgByD,QAASd,KAAKmf,gBAA9C,SACI,mBAAG9hB,UAAU,0BAEjB,+BACK2C,KAAKP,MAAM6O,OAEhB,sBAAMjR,UAAU,gBAAgByD,QAASd,KAAKsf,YAA9C,SACI,mBAAGjiB,UAAU,gCAIzB,eAACuF,EAAA,EAAD,CAAKvF,UAAU,UAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBAAOyI,KAAK,OAAOia,YAAY,WAAW7b,KAAK,UAAUzF,MAAOuB,KAAKP,MAAMkW,QAAS3P,SAAUhG,KAAKwO,cAAenR,UAAU,oBAEhI,qBAAKA,UAAU,aAAf,SACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,4BAA4ByD,QAASd,KAAK+e,SAA5D,sBAGR,eAACnc,EAAA,EAAD,CAAKvF,UAAU,mBAAf,UACI,cAACwF,EAAA,EAAD,CAAKC,GAAI,GAAIkd,GAAI,EAAjB,SACI,8BACKhgB,KAAKP,MAAMggB,gBAAgB9e,KAAI,SAAA2L,GAAG,OAC/B,cAAC9C,EAAA,EAAD,CAAMnM,UAAU,0BAAhB,SACI,eAACuF,EAAA,EAAD,CAAKvF,UAAU,YAAf,UACI,cAACwF,EAAA,EAAD,CAAKqa,GAAI,EAAGpa,GAAI,EAAGzF,UAAU,oBAA7B,SACI,uBAAOyI,KAAK,WAAWma,QAAS3T,EAAI7G,OAAQ3E,QAAS,kBAAM,EAAKof,iBAAiB5T,QAErF,cAACzJ,EAAA,EAAD,CAAKqa,GAAI,EAAGpa,GAAI,EAAGzF,UAAU,oBAA7B,SACI,cAACmM,EAAA,EAAKlI,KAAN,UACI,cAACkI,EAAA,EAAKnI,MAAN,UAAaiL,EAAIvO,YAGzB,cAAC8E,EAAA,EAAD,CAAKqa,GAAI,EAAGpa,GAAI,EAAGzF,UAAU,oBAA7B,SACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,iBAAiByD,QAAS,kBAAM,EAAKqf,eAAe7T,IAAtE,kCAOxB,cAACzJ,EAAA,EAAD,CAAKC,GAAI,GAAIkd,GAAI,EAAjB,SACI,8BACKhgB,KAAKP,MAAM+f,cAAc7e,KAAI,SAAA2L,GAAG,OAC7B,cAAC9C,EAAA,EAAD,CAAMnM,UAAU,wBAAhB,SACI,cAACmM,EAAA,EAAKlI,KAAN,UACI,cAACkI,EAAA,EAAKnI,MAAN,CAAYhE,UAAU,sBAAtB,SAA6CiP,EAAIvO,oCAnMrG,GAA8BwD,aAmNfC,eAAWsd,I,8BCpMV,OArBf,2HAKG,WAAW7gB,GAAX,iBAAAC,EAAA,6DACQC,EAAS,IACP,OAAaF,EAAKI,OAF5B,SAGyBC,IAAMC,KAAK,gBAAgBJ,GAHpD,cAGUK,EAHV,yBAIWA,EAAOP,MAJlB,2CALH,+GAeI,WAAUA,GAAV,eAAAC,EAAA,sEACwBI,IAAMC,KAAK,oBAAoBN,GADvD,cACSO,EADT,yBAEUA,EAAOP,MAFjB,2CAfJ,+D,OCEc,SAASmiB,KACpB,MAA4B1e,mBAAS,IAArC,mBAAO2e,EAAP,KAAeC,EAAf,KAEA5d,qBAAU,WACN6d,GAAiBtM,KAAK,CAAC,OAAUrU,aAAaC,QAAQ,aAAaZ,MAAK,SAAA+F,GAEpE,IADA,IAAIwb,EAAS,aAAOH,GACX9T,EAAI,EAAGA,EAAIvH,EAAI/G,KAAKqP,OAAQf,IAAK,CACtC,IAAMkU,EAAW3gB,IAAO,GAAD,OAAIkF,EAAI/G,KAAKsO,GAAG+B,KAAhB,YAAwBtJ,EAAI/G,KAAKsO,GAAGmU,MAAQ,uBAAuB3gB,SACtF9B,EAAO,CAACF,MAAQiH,EAAI/G,KAAKsO,GAAG7N,UAAY4P,KAAOmS,GACnDD,EAAUlgB,KAAKrC,GAEnBqiB,EAAUE,QAEhB,IAEF,MAA0C9e,mBAAS,CAC/ChD,UAAW,GACXC,SAAU,GACV2P,KAAM,GACNoS,KAAM,GACNriB,OAAQuB,aAAaC,QAAQ,aALjC,mBAAO8gB,EAAP,KAAsBC,EAAtB,KAQA,EAAoDlf,mBAAS,CACzDhD,UAAW,GACXC,SAAU,GACV2P,KAAM,GACNoS,KAAM,KAJV,mBAAOG,EAAP,KAA2BC,EAA3B,KAQMhd,EAAe,SAACC,GAClB,IAAIgd,EAAgB,2BAAOJ,GAAP,kBAAuB5c,EAAEE,OAAOC,KAAOH,EAAEE,OAAOxF,QACpEmiB,EAAiBG,IAGrB,EAAkCrf,oBAAS,GAA3C,mBAAO+T,EAAP,KAAkBC,EAAlB,KAwDME,EAAmB,kBAAMF,GAAa,IAM5C,OACI,sBAAKrY,UAAU,oCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,eAEtB,qBAAKV,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAWD,UAAU,uBACrB,cAAC,KAAD,CACI2jB,YAAY,eACZC,QAAS,CAACC,KAAeC,MACzBd,OAAQA,EACRe,UAjBI,SAACC,GACrBV,EAAcrS,KAAO+S,EAAIC,QACzB5L,GAAa,MAiBD,cAAC3U,EAAA,EAAD,CAAOC,KAAMyU,EAAWxU,OAAQ2U,EAAhC,SACQ,eAAChQ,EAAA,EAAD,CAAMD,SAAU,SAAC5B,GAAD,OA3EnB,SAACA,GAClBA,EAAEK,iBACF,IAAIC,GAAQ,EACZyc,EAAsB,CAClBpiB,UAAW,GACXC,SAAU,GACV2P,KAAM,GACNoS,KAAM,KAEV,IAAIa,EAAqB,eAAOV,GAgChC,IA9BKF,EAAcjiB,UAAU4O,OAAS,GAClCiU,EAAsB7iB,UAAY,yBAClCoiB,EAAsBS,GACtBld,GAAQ,IAGRkd,EAAsB7iB,UAAY,GAClCoiB,EAAsBS,KAGrBZ,EAAchiB,SAAS2O,OAAS,GACjCiU,EAAsB5iB,SAAW,uBACjCmiB,EAAsBS,GACtBld,GAAQ,IAGRkd,EAAsB5iB,SAAW,GACjCmiB,EAAsBS,KAGrBZ,EAAcD,KAAKpT,OAAS,GAC7BiU,EAAsBb,KAAO,yBAC7BI,EAAsBS,GACtBld,GAAQ,IAGRkd,EAAsBb,KAAO,GAC7BI,EAAsBS,KAGb,IAAVld,EAAe,CACdkc,GAAiBvK,IAAI2K,GAAe1hB,MAAK,SAAA+F,GAAG,OAAIA,KAChD,IAAIwb,EAAS,aAAOH,GACdI,EAAW3gB,IAAO,GAAD,OAAI6gB,EAAcrS,KAAlB,YAA0BqS,EAAcD,MAAQ,uBAAuB3gB,SAC1F9B,EAAO,CAACF,MAAQ4iB,EAAcjiB,UAAY4P,KAAOmS,GACrDD,EAAUlgB,KAAKrC,GACfqiB,EAAUE,GACV5K,IAEJ,OAAOvR,EAyBoCmd,CAAazd,IAApC,UACI,cAAChD,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,mCAEJ,cAACN,EAAA,EAAMO,KAAP,CAAYjE,UAAU,YAAtB,SACI,eAACC,EAAA,EAAD,WACI,cAACsF,EAAA,EAAD,UACI,eAACgD,EAAA,EAAK4F,MAAN,CAAYnO,UAAU,OAAtB,UACI,cAACuI,EAAA,EAAKC,MAAN,yBACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,YAAY6B,YAAY,gBACvCC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAC9B1G,UAAWwjB,EAAmBniB,UAAU4O,OAAS,EAAI,aAAe,KACpF,cAAC1H,EAAA,EAAK6Q,KAAN,CAAWpZ,UAAU,cAArB,SAAoCwjB,EAAmBniB,iBAG/D,cAACkE,EAAA,EAAD,UACI,eAACgD,EAAA,EAAK4F,MAAN,CAAYnO,UAAU,OAAtB,UACI,cAACuI,EAAA,EAAKC,MAAN,6BACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,WAAW6B,YAAY,oBACtCC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAC9B1G,UAAWwjB,EAAmBliB,SAAS2O,OAAS,EAAI,aAAe,KACnF,cAAC1H,EAAA,EAAK6Q,KAAN,CAAWpZ,UAAU,cAArB,SAAoCwjB,EAAmBliB,gBAG/D,cAACiE,EAAA,EAAD,UACI,eAACgD,EAAA,EAAK4F,MAAN,CAAYnO,UAAU,OAAtB,UACI,cAACuI,EAAA,EAAKC,MAAN,yBACA,cAACD,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,OAAO6B,YAAY,gBAClCC,SAAU,SAACjC,GAAD,OAAOD,EAAaC,IAC9B1G,UAAWwjB,EAAmBH,KAAKpT,OAAS,EAAI,aAAe,KAC/E,cAAC1H,EAAA,EAAK6Q,KAAN,CAAWpZ,UAAU,cAArB,SAAoCwjB,EAAmBH,iBAKvE,eAAC3f,EAAA,EAAM6V,OAAP,WACI,cAAC3Q,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByI,KAAK,QAAQhF,QAAS8U,EAA3D,mBAGA,cAAC3P,EAAA,EAAD,CAAQ5I,UAAU,iBAAiByI,KAAK,SAAxC,iC,WCjJvB2b,GAAb,kDAEI,WAAY3jB,GAAQ,IAAD,8BACf,cAAMA,IAuCN0Q,cAAgB,SAACC,GACb,EAAK3P,SAAL,eACK2P,EAAMxK,OAAOC,KAAOuK,EAAMxK,OAAOxF,SA1C3B,EA+CfwQ,gBAAkB,SAACR,GACf,IAAIE,GAAU,EACd,GAAI,EAAKlP,MAAMyP,QAAS,CACpB,IAAMO,EAAQ,IAAIL,KACG,IAAIA,KAAK,EAAK3P,MAAMyP,SACtBO,GACf,EAAK3Q,SAAS,CAAEwQ,aAAc,iCAC9BX,GAAU,GAGV,EAAK7P,SAAS,CAAEwQ,aAAc,KAGtC,OAAOX,GA5DI,EAgEfmB,aAAe,SAACrB,GACZ,IAAIE,GAAU,EAKd,OAJK,EAAKM,oBACNN,GAAU,GAGPA,GAtEI,EAyEf6H,OAAS,SAACzS,GACH,EAAK+L,iBACA,EAAKrQ,MAAMof,eAAkB,EAAKpf,MAAMyP,QAIxCiB,GAAgBuR,cAAc,EAAKjiB,OAAOR,MAAK,SAACC,GAC7CA,IACC2F,MAAM,wBACN,EAAK8c,aAEVtiB,OAAM,SAACC,GACLC,QAAQC,IAAIF,MATbuF,MAAM,2BA5EH,EA4Ff8c,OAAS,SAAC5d,GACN,EAAKjG,MAAM0E,QAAQlC,KAAK,cA3F5B,EAAKb,MAAM,CACPiT,UAAW5U,GAASA,EAAM0E,SAAW1E,EAAM0E,QAAQX,UAAU/D,EAAM0E,QAAQX,SAASpC,OAAQ3B,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM3B,EAAM0E,QAAQX,SAASpC,MAAMA,MAAM,EAClKoT,cAAc,GACdO,YAAY,GACZwO,cAAc,GACdha,SAAS,GACTxC,WAAW,GACX2N,cAAc,GACd7D,QAAQ,GACRU,WAAW,GACXkD,MAAM,GACN+L,cAAc,GACdgD,iBAAiB,IAdN,EAFvB,qDAqBQ,WAAqB,IAAD,OAEhB1R,GAAgB8C,YAAYjT,KAAKP,OAAOR,MAAK,SAACC,GAEnB,KAAnBA,EAASuG,SACT,EAAK3G,SAAS,CAAC8P,QAAS1P,EAASjB,KAAKO,OAAO0U,cAC7C,EAAKpU,SAAS,CAACsG,WAAWlG,EAASjB,KAAKO,OAAO4G,aAC/C,EAAKtG,SAAS,CAACiU,cAAe7T,EAASjB,KAAKO,OAAOuU,gBACnD,EAAKjU,SAAS,CAACgU,MAAM5T,EAASjB,KAAKO,OAAO8R,YAC1C,EAAKxR,SAAS,CAAC+T,cAAc3T,EAASjB,KAAKO,OAAOoG,MAClD,EAAK9F,SAAS,CAAC8Q,WAAW1Q,EAASjB,KAAKO,OAAOoR,aAC/C,EAAK9Q,SAAS,CAAC+iB,iBAAiB3iB,EAASjB,KAAKO,OAAOoU,gBACrD,EAAK9T,SAAS,CAACsU,YAAYlU,EAASjB,KAAKO,OAAO4U,cAChD,EAAKtU,SAAS,CAAC8iB,cAAc1iB,EAASjB,KAAKO,OAAO2U,gBAEvD9T,OAAM,SAACC,GACNC,QAAQC,IAAIF,QArC5B,oBAkGQ,WACI,OACI,sBAAKjC,UAAU,mDAAf,UACI,qBAAKA,UAAU,wBAAf,SACK2C,KAAKP,MAAMkT,SAAY,cAAC,EAAD,CAAY5U,MAAM,kBAAkBC,SAAS,KACnE,cAAC,EAAD,CAAYD,MAAM,qBAAqBC,SAAS,OAEtD,qBAAKX,UAAU,yBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAACuF,EAAA,EAAD,CAAKvF,UAAU,6BAAf,SACI,cAACwF,EAAA,EAAD,UACI,cAAC+C,EAAA,EAAD,UACI,sBAAKvI,UAAU,iBAAf,UACI,cAACuF,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,iCACI,mDAAsB7C,KAAKP,MAAMoT,iBACjC,mDAAsB7S,KAAKP,MAAMmP,WACjC,iDAAoB5O,KAAKP,MAAM2F,cAC/B,gDAAmBpF,KAAKP,MAAMmiB,iBAC9B,8CAAiB5hB,KAAKP,MAAM2T,eAC5B,mDAAsBpT,KAAKP,MAAMsT,cAAjC,OACA,gDAAmB/S,KAAKP,MAAMmQ,WAA9B,WACA,iDAAoB5P,KAAKP,MAAMqT,MAA/B,cAGJ,eAAClN,EAAA,EAAK4F,MAAN,WACI,cAAC5F,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,4BACA,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAO5B,KAAK,gBAAgBzF,MAAOuB,KAAKP,MAAMof,cAAe7Y,SAAUhG,KAAKwO,gBAE/F,cAAC5I,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAMoP,uBAK5B,cAACjM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,cAAC+C,EAAA,EAAK4F,MAAN,UACI,qBAAKnO,UAAU,sBAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,8BACI,cAACuI,EAAA,EAAKC,MAAN,CAAYxI,UAAU,WAAtB,+BAEJ,cAACuI,EAAA,EAAK6F,QAAN,CAAc3F,KAAK,OAAOzI,UAAU,aAAa6G,KAAK,UAAU6B,YAAY,WAAWtH,MAAOuB,KAAKP,MAAMyP,QAASlJ,SAAUhG,KAAKwO,cAC7HgF,OAAQxT,KAAK8O,aACb2E,UAAWzT,KAAKP,MAAM6P,eAC1B,cAAC1J,EAAA,EAAK6F,QAAQiI,SAAd,CAAuB5N,KAAK,UAA5B,SACK9F,KAAKP,MAAM6P,mCAYpD,qBAAKjS,UAAU,mBAAf,SACI,eAACuF,EAAA,EAAD,CAAKvF,UAAU,4BAAf,UACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,iBAAiByD,QAASd,KAAKwW,OAAjD,4BAGA,cAACvQ,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAASd,KAAK2hB,OAAnD,qCAnKpC,GAAiCpgB,aA8KlBC,eAAWigB,I,wCC7KpBK,I,yDACF,WAAYhkB,GAAQ,uCACVA,G,0CAGV,WACI,OACI,sBAAKT,UAAU,0BAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,OAAf,SACK2C,KAAKlC,MAAMikB,QAAQhU,KAChB,+BAAO/N,KAAKlC,MAAMikB,QAAQhU,OAE1B,2BAGR,qBAAK1Q,UAAU,0BAAf,SACK2C,KAAKlC,MAAMikB,QAAQtd,MAChB,iCAAM,mBAAGnC,MAAM,2BAAf,OAAmDtC,KAAKlC,MAAMikB,QAAQtd,SAEtE,2BAGR,qBAAKpH,UAAU,iCAAf,SACK2C,KAAKlC,MAAMikB,QAAQ/T,UAChB,iCAAM,mBAAG1L,MAAM,qBAAf,OAA6CtC,KAAKlC,MAAMikB,QAAQ/T,aAEhE,2BAGR,qBAAK3Q,UAAU,sCAAf,SACK2C,KAAKlC,MAAMikB,QAAQ9T,gBAChB,iCAAM,mBAAG3L,MAAM,oBAAf,OAA4CtC,KAAKlC,MAAMikB,QAAQ9T,mBAE/D,2BAGR,qBAAK5Q,UAAU,6BAAf,SACK2C,KAAKlC,MAAMikB,QAAQ7T,QAChB,iCAAM,mBAAG5L,MAAM,cAAf,OAAsCtC,KAAKlC,MAAMikB,QAAQ7T,WAEzD,gCAKhB,sBAAK7Q,UAAU,wBAAf,UACI,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,mC,GArDHkE,cAiE1BygB,G,kDACF,WAAYlkB,GAAQ,uCACVA,G,0CAGV,WACI,OACI,sBAAKT,UAAU,0BAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,eAAf,gCAKI2C,KAAKlC,MAAMikB,SAAW/hB,KAAKlC,MAAMikB,QAAQzU,OAAStN,KAAKlC,MAAMikB,QAAQphB,KAAI,SAAA2L,GAAG,OACxE,sBAAKjP,UAAU,eAAf,UACI,sBAAMA,UAAU,WAAhB,SAA4BiP,EAAIsR,WAAgB,sBAAMvgB,UAAU,SAAhB,SAA0BiP,EAAIkB,eAGlF,qBAAKnQ,UAAU,eAAf,yCAKhB,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,mC,GA/BJkE,aA2CzB0gB,G,kDACF,WAAYnkB,GAAQ,uCACVA,G,0CAKV,WACI,OACI,cAAC8E,EAAA,EAAD,CAAKvF,UAAU,wBAAf,SACI,cAACwF,EAAA,EAAD,CAAKxF,UAAU,qBAAf,SACI,eAAC,KAAD,CAAQ6kB,aAAa,EAAM5Y,MAAO,CAAE6Y,QAAS,OAAQC,eAAgB,SAAUxV,MAAO,QAASyV,OAAQ,SAAvG,UACI,cAAC,aAAD,UACI,cAAC,GAAD,CAAmBN,QAAS/hB,KAAKlC,OAASkC,KAAKlC,MAAMG,MAAQ+B,KAAKlC,MAAMG,KAAKqkB,gBAEjF,cAAC,YAAD,UACI,cAAC,GAAD,CAAkBP,QAAS/hB,KAAKlC,OAASkC,KAAKlC,MAAMG,MAAS+B,KAAKlC,MAAMG,KAAKskB,+B,GAhBtEhhB,aA+BtBihB,GAAb,kDACI,WAAY1kB,GAAQ,IAAD,8BACf,cAAMA,IASV2kB,aAAe,SAACC,GACZ,EAAK5jB,SAAS,CAAE6jB,WAAYD,KAT5B,EAAKE,aAAeC,IAAMC,YAC1B,EAAKrjB,MAAQ,CACT6iB,YAAa,GACbC,gBAAiB,GACjBI,WAAY,SAND,EADvB,qDAeI,WAAqB,IAAD,OACZliB,EAAKb,aAAaC,QAAQ,WAC9B0E,EAAiBuJ,cAAcrN,GAAIxB,MAAK,SAAAC,GAChCA,GACA,EAAKJ,SAAS,CAACwjB,YAAapjB,OAIpC0d,GAAoB3I,KAAK,CAAC,OAAUxT,IAAKxB,MAAK,SAAAC,GACtCA,EAASjB,MAAQiB,EAASjB,KAAKqP,QAC/B,EAAKxO,SAAS,CAACyjB,gBAAiBrjB,EAASjB,KAAKoY,OAAO,EAAE,UAzBvE,oBA8BI,WAAU,IAAD,OACL,OACI,8BACI,sBAAKhZ,UAAU,oCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,EAAD,CAAYU,MAAM,gBAAgBC,SAAS,OAE/C,qBAAKX,UAAU,yBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,eAACuF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKqa,GAAI,GAAT,SACI,cAAC,GAAD,CAAsBjf,KAAM+B,KAAKP,UAErC,cAACoD,EAAA,EAAD,CAAKqa,GAAI,EAAG7f,UAAU,mBAAtB,SACI,qBAAKA,UAAU,mBAAf,SACI,eAAC0lB,GAAA,EAAD,WACI,cAAC9c,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAAS,kBAAM,EAAK2hB,aAAa,UAAtE,mBACA,cAACxc,EAAA,EAAD,CAAQ5I,UAAU,mBAAmByD,QAAS,kBAAM,EAAK2hB,aAAa,SAAtE,yBAIZ,cAAC5f,EAAA,EAAD,CAAKqa,GAAI,EAAT,SACI,eAAC,IAAM8F,SAAP,WACI,8BAEkC,UAA1BhjB,KAAKP,MAAMkjB,WACP,cAAC,GAAD,CAAmBM,IAAKjjB,KAAK4iB,aAAcb,QAAS/hB,KAAKP,MAAM6iB,cAG/D,cAAC,GAAD,CAAkBW,IAAKjjB,KAAK4iB,aAAcb,QAAS/hB,KAAKP,MAAM8iB,oBAI1E,qBAAKllB,UAAU,gBAAf,SACI,cAAC4I,EAAA,EAAD,CAAQ5I,UAAU,iBAAiByD,QAAS,kBAAMoiB,iCAAsB,EAAKN,eAA7E,mDAhE5C,GAAkCrhB,aA6EnBC,YAAWghB,IC5MX,SAASW,KACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,UACI,cAACpgB,EAAD,QAGR,cAAC,IAAD,CAAOogB,KAAK,SAAZ,SACI,cAAC,EAAD,UACI,cAAChgB,EAAD,QAGR,cAAC,IAAD,CAAO+f,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC,EAAD,UACI,cAACnd,EAAD,QAGR,cAAC,IAAD,CAAOmd,KAAK,gBAAZ,SACI,cAAC,EAAD,UACI,cAACnd,EAAD,QAIR,cAAC,IAAD,CAAOmd,KAAK,aAAZ,SACI,cAAC,EAAD,UACI,cAAC3b,EAAD,QAGR,cAAC,IAAD,CAAO2b,KAAK,WAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,UACI,cAACC,GAAD,QAGR,cAAC,IAAD,CAAOD,KAAK,qBAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,UACI,cAACzP,GAAD,QAGR,cAAC,IAAD,CAAOwP,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,wCAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACI,cAAC,EAAD,UACI,cAAC,GAAD,QAGR,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,6DCjKpB,IAYeE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxkB,MAAK,YAAkD,IAA/CykB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAAS5X,OACP,cAAC,IAAM6X,WAAP,UACE,cAACb,GAAD,MAEFc,SAASC,eAAe,SAM1BX,M","file":"static/js/main.3d037517.chunk.js","sourcesContent":["/* Author: Vishal Sancheti */\n\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/AppNavbar.scss\"\n\nexport default function AppNavbar(){\n    return (\n        <Navbar className=\"app-nav-bar-container fixed-top\">\n            <Container>\n                <Navbar.Brand className=\"app-nav-bar-text\" href=\"/\">\n                    <i className=\"fab fa-angellist\"></i> Freelance Dashboard\n                </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"login\">\n                        <i className=\"fas fa-sign-in-alt\"></i> Login\n                    </Nav.Link>\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"register\">\n                        <i className=\"fas fa-user-plus\"></i> Register\n                    </Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport AppNavbar from \"../components/AppNavbar\";\nimport {Container} from \"react-bootstrap\";\n\n// Page Wrapper for Application Pages\nconst AppLayout =({children}) =>{\n\n    return(\n        <>\n            <header>\n                <AppNavbar/>\n            </header>\n            <main>\n                {children}\n            </main>\n            <hr/>\n            <footer className=\"container\">\n                <p>All rights reserved.</p>\n            </footer>\n        </>\n    )\n}\n\nexport default AppLayout;","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport \"../styles/PageHeader.scss\"\nconst PageHeader =(props) =>{\n    return(\n        <>\n            <div className=\"page-header-title\">{props.title}</div>\n            <div className=\"page-header-subtitle\">{props.subtitle}</div>\n        </>\n    )\n}\n\nexport default PageHeader;","import axios from \"axios\";\n\nexport class notificationService {\n    async fetchNotifications(data) {\n        let object = {}\n        object['currentDate'] = data.currentDate\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/notification/List\", object );\n        return result;\n    }\n\n    async setStatus(data) {\n        let object = {}\n        object['currentDate'] = data.currentDate\n        object['eventName'] = data.value.eventName\n        object['category'] = data.value.category\n        const result = await axios.post(\"/api/notification/setStatus\", object);\n        return result;\n    }\n}\n\nexport default new notificationService()","import \"../styles/DashboardNavbar.scss\";\nimport {Dropdown, Modal} from \"react-bootstrap\";\nimport React,  {Component} from 'react';\nimport NotificationService from \"../services/notificationService\"\nimport { withRouter } from \"react-router\";\nimport moment from \"moment\";\n\nclass Notification extends Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: [],\n            value: {},\n            notificationShow: false\n        };\n\n        this.userId = localStorage.getItem(\"user_id\");\n        this.currentDate = moment().format('YYYY-MM-DD')\n\n    }\n\n    fetchNotifications(){\n        // var today = new Date();\n        // var dd = String(today.getDate()).padStart(2, '0');\n        // var mm = String(today.getMonth() + 1).padStart(2, '0'); \n        // var yyyy = today.getFullYear();\n        // today = yyyy + '-' + mm + '-' + dd;\n        NotificationService.fetchNotifications({\"currentDate\": this.currentDate, \"userId\": this.userId}).then((response) => {\n            let notifications = [];\n            response.data.forEach(element => {\n                let item = {};\n                item.eventName = element.eventName;\n                item.category = element.category;\n                item.viewStatus = element.viewStatus;\n                item.className = item.viewStatus ? \"\" : 'text-primary';\n                notifications.push(item)\n            });\n            this.setState({\n                values: notifications\n            });\n        }).catch((error) => {\n            console.log(\"Error\")\n        })\n    }\n\n    componentDidMount() {\n        this.fetchNotifications();\n    }\n\n    handleNotificationClose(){\n        this.setState({notificationShow:false});\n    };\n    handleNotificationShow(){\n        this.setState({notificationShow:true});\n    };\n\n    openNotification = (value) => {\n        this.setState({value:value});\n        NotificationService.setStatus({\"currentDate\": this.currentDate, \"value\": value}).then((response) => {\n            this.fetchNotifications();\n            this.handleNotificationShow();\n        }).catch((error) => {\n            console.log(\"Error\")\n        });\n        \n        \n\n    };\n\n    render() {\n        return (\n            <div>\n                <Dropdown>\n                    <Dropdown.Toggle title=\"Notification\" id=\"bellIcon\">\n                        <i className=\"fas fa-bell\"/>\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu id=\"notificationPanel\" >\n                        {this.state.values.map((value,index) => {\n                            return <Dropdown.Item className=\"border-bottom\" onClick = { () => this.openNotification(value)}>\n                                <span className={value.className} >{value.eventName}</span>\n                            </Dropdown.Item>\n                        })}\n                    </Dropdown.Menu>\n                </Dropdown>\n                <Modal show={this.state.notificationShow} onHide={() => this.handleNotificationClose()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.value.category}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {this.state.value.eventName}\n                    </Modal.Body>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Notification)\n","/* Author: Vishal Sancheti */\n\nimport {Accordion, Container,  CustomToggle, Card, Dropdown, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/DashboardNavbar.scss\";\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Notification from \"../components/Notification\";\nexport default function DashboardNavbar(){\n  \n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <Navbar className=\"nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"nav-bar-text\" href=\"/\">\n                    <i className=\"fab fa-angellist\"></i> Freelance Dashboard\n                </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link title=\"Notification\" className=\"nav-bar-link\" >\n                    <Notification/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Profile\" className=\"nav-bar-link\" href=\"profile\">\n                        <i className=\"fas fa-user\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Log Out\" className=\"nav-bar-link\"  onClick={ () => {localStorage.removeItem('user_id')} } href=\"/\">\n                        <i className=\"fas fa-sign-out-alt\"/>\n                    </Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport '../styles/style.scss';\nimport React, { useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport { Drawer } from 'react-bootstrap-drawer';\nimport '../styles/DashboardSidebar.scss';\nimport { useLocation } from 'react-router-dom'\n\nexport default function Sidebar(props) {\n    const location = useLocation();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    return (\n        <Drawer {...props}>\n            <Drawer.Toggle onClick={handleToggle} />\n\n            <Collapse in={open}>\n                <Drawer.Overflow>\n                    <Drawer.ToC>\n                        <Drawer.Item href=\"/dashboard\">\n                            <span className={location.pathname === \"/dashboard\" ? 'nav-item-active' : ''}>\n                                <i className=\"fas fa-tachometer-alt\"></i> Dashboard\n                            </span>\n                        </Drawer.Item>\n\n                        <Drawer.Nav>\n                            <Drawer.Item href=\"/clients\">\n                                <span className={location.pathname === \"/clients\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-users\"></i> Clients\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/projects\">\n                                <span className={location.pathname === \"/projects\" ? \"nav-item-active\" : ''}>\n                                    <i className=\"fas fa-briefcase\"></i> Projects\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/timelogs\">\n                                <span className={location.pathname === \"/timelogs\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-stopwatch\"></i> Time Logs\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/invoices\">\n                                <span className={location.pathname === \"/invoices\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-file-invoice\"></i> Invoices\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/testimonials\">\n                                <span className={location.pathname === \"/testimonials\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-comment\"></i> Testimonials\n                                </span>\n                            </Drawer.Item>\n\n                            <hr/>\n\n                            <Drawer.Item href=\"/todolist\">\n                                <span className={location.pathname === \"/todolist\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-tasks\"></i> ToDo\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/calendar\">\n                                <span className={location.pathname === \"/calendar\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-calendar\"></i> Calendar\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/business-card\">\n                                <span className={location.pathname === \"/business-card\" ? 'nav-item-active' : ''}>\n                                    <i class=\"fas fa-address-card\"></i> Business Card\n                                </span>\n                            </Drawer.Item>\n                        </Drawer.Nav>\n                    </Drawer.ToC>\n                </Drawer.Overflow>\n            </Collapse>\n        </Drawer>\n    );\n};","/* Author: Vishal Sancheti */\n\nimport React, { useEffect } from 'react';\nimport DashboardNavbar from \"../components/DashboardNavbar\";\nimport DashboardSidebar from \"../components/DashboardSidebar\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\n\n// Page Wrapper for Dashboard Pages\nconst DashboardLayout =({children}) =>{\n    const history = useHistory();\n\n    useEffect(() => {\n        let user = localStorage.getItem('user_id')\n        if(!user){\n            history.push('/login')\n        }\n\n    },[]);\n\n    return(\n        <>\n            <header>\n                <DashboardNavbar/>\n            </header>\n            <main>\n                <Container fluid>\n                    <Row>\n                        <Col md={2} as={DashboardSidebar} />\n                        <Col md={10}>\n                            {children}\n                        </Col>\n                    </Row>\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default DashboardLayout;","import React from 'react';\n\nexport default function Home(){\n    return (\n        <div>\n            <div className=\"jumbotron\">\n                <div className=\"container\">\n                    <h1 className=\"display-4\">Hello, Freelancer!</h1>\n                    <p className=\"lead\">This is the only tool you will be using, a one stop solution for all your freelacing needs.</p>\n                    <hr className=\"my-4\"/>\n                    <p className=\"lead\">Minimal UI with Powerful features.</p>\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Get Started</a>\n                </div>\n            </div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>What we offer?</h2>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-tachometer-alt\"></i> Dashboard</h4>\n                        <p>Visualize all your stats and report from single screen.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-users\"></i> Client Management</h4>\n                        <p>No more address book entries, easily maintain clients and their details.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-briefcase\"></i> Project Management</h4>\n                        <p>No more looking searching emails, efficiently maintain client project association and details.</p>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-stopwatch\"></i> Time Logging</h4>\n                        <p>No more maintaining spreadsheet, easily log times with our interactive time logging.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-file-invoice\"></i> Invoice Management</h4>\n                        <p>No more filtering spreadsheet for invoice, easily make invoices.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-comment\"></i> Testimonial Management</h4>\n                        <p>No more missing out testimonials from clients, easily request and maintain testimonials.</p>\n                    </div>\n\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-tasks\"></i> ToDo List</h4>\n                        <p>No more sticky notes, easily maitain your todo task with interactive todo list.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-calendar\"></i> Calendar</h4>\n                        <p>No more mixing of personal and business events, easily manage events with our full fledged calendar.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-id-card\"></i> Digital Business Card</h4>\n                        <p>Easily create and share your digital business card with client testimonials.</p>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-bell\"></i> Notifications</h4>\n                        <p>Never miss a calendar event, invoice due date, and other events with our notifications.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","/**\n * Author: Deep Patel\n * Created On: 2021-07-28\n */\n\nimport axios from \"axios\"\n\nexport class registerService {\n\n   async addNewUser(data) {\n      const result = await axios.post('/api/register/add', data);\n      return result.data;\n   }\n\n   async fatchUser(user) {\n      const result = await axios.post(\"/api/register/fatchUser\", user);\n      return result.data;\n   }\n\n   async fatchUserById(id) {\n      const result = await axios.post(\"/api/register/fetchUserById\", { id: id });\n      return result.data;\n   }\n\n   async editUser(user){\n    console.log(user);\n    const result = await axios.put(\"/api/register/edit/\"+user.id, user);\n    return result.data;\n    };\n}\n\nexport default new registerService()","import React from 'react';\nimport { useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport registerServices from '../../services/registerServices';\nimport emailjs from 'emailjs-com';\n\n\nexport default function Login(){\n\n    let history = useHistory();\n\n    const [loginData, setLoginData] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    const [loginErrors, setLoginErrors] = useState({\n        emailError: \"\",\n        passwordError: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newLogin = {...loginData, [e.target.name]: e.target.value};\n        setLoginData(newLogin);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        let valid = true;\n\n        setLoginErrors({\n            emailError: \"\",\n            passwordError: \"\"\n        })\n\n        let newLoginError = {...loginErrors};\n\n        if(loginData.email === \"\"){\n            newLoginError.emailError = \"Please enter email!!\";\n            setLoginErrors(newLoginError);\n            valid = false;\n        }\n        else{\n            newLoginError.emailError = \"\";\n            setLoginErrors(newLoginError);\n        }\n\n        if(loginData.password === \"\"){\n            newLoginError.passwordError = \"Please enter Password!!\";\n            setLoginErrors(newLoginError);\n            valid = false;\n        }\n        else{\n            newLoginError.passwordError = \"\";\n            setLoginErrors(newLoginError);\n        }\n\n        if(valid === true){\n            registerServices.fatchUser(loginData).then((response) => {\n                if(response){\n                    if(loginData.email === response.Email && loginData.password === response.Password){\n                        localStorage.setItem('user_id', response._id);\n                        alert(\"Login Successful!!\");\n                        history.push(\"/dashboard\");\n                    }else{\n                        alert(\"Invalid Password!!\"); \n                    }\n                }\n            }).catch((error) => {\n                alert(\"Login Failed!!\");\n                console.log(\"Error:\",error)\n            })\n        }\n      };\n\n      const handleMail = async (e) =>{\n        var email = prompt(\"Enter Your Email:\");\n        loginData.email = email;\n        registerServices.fatchUser(loginData).then((res) => {\n            console.log(res)\n\n            if(res){\n\n            // Mailing details\n            var mailParams = {\n                                \n                //Mail Sender Details\n                freelancerName: 'Freelancer',\n                freelancerMail: 'deepatel1607@gmail.com',\n\n                //Mail Reciver Details\n                clientName: 'Client',\n                clientMail: email,\n\n                //Attachment Messages\n                message: \"Here is Your Password: \"+res.Password,\n            };\n\n            // calling emailJS functionality with emailJS Credentials\n            emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n                .then(function (response) {\n                    alert(\"Email Sent\");\n                    console.log('SUCCESS!', response.status, response.text);\n\n                }, function (error) {\n                    alert(\"Error: \" + error);\n                    console.log('FAILED...', error);\n                });\n            }\n        }).catch((error) => {\n            alert(\"Login Failed!!\");\n            console.log(\"Eroor:\",error)\n        })\n      }\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Log in</h3>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"email\" \n                                className=\"form-control\" \n                                placeholder=\"Please enter email \"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                        </div>\n                        <p className=\"text-danger\">{loginErrors.emailError}</p>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Please enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <p className=\"text-danger\">{loginErrors.passwordError}</p>\n\n                        <div className=\"form-group\">\n                            <div>\n                            </div>\n                        </div>\n\n                        <Button type=\"submit\" className=\"btn-block\">Sign in</Button>\n                        <p className=\"forgot-password text-right\">\n                             <div><a href=\"#\"> <p onClick={handleMail}>Forgot password?</p></a></div>\n                        </p>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport registerServices from '../../services/registerServices';\n\nexport default function Register(){\n\n    let history = useHistory();\n\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n    const checkMobile = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n    const [registrationInfo, setRegistrationInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [registrationErrors, setRegistrationErrors] = useState({\n        nameError: '',\n        emailError: '',\n        mobileError:'',\n        linkedinError:'',\n        websiteError:'',\n        passwordError: '',\n        confirmPasswordError: ''\n    });\n\n    const handleChange = (e) => {\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\n        setRegistrationInfo(newRegistration);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        setRegistrationErrors({\n            nameError: '',\n            emailError: '',\n            mobileError:'',\n            linkedinError:'',\n            websiteError:'',\n            passwordError: '',\n            confirmPasswordError: ''\n        })\n\n        let newRegError = {...registrationErrors};\n\n        if(registrationInfo.name === \"\"){\n            newRegError.nameError = \"Please enter name!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.nameError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.email === \"\"){\n            newRegError.emailError = \"Please enter email!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkEmail.test(registrationInfo.email)){\n                newRegError.emailError = \"Email Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.emailError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n        \n        if(registrationInfo.mobile === \"\"){\n            newRegError.mobileError = \"Please enter Contact Number!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkMobile.test(registrationInfo.mobile)){\n                newRegError.mobileError = \"Contact number Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.mobileError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.linkedin === \"\"){\n            newRegError.linkedinError = \"Please enter linkedin!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.linkedinError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.password === \"\"){\n            newRegError.passwordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkPassword.test(registrationInfo.password)){\n                newRegError.passwordError = \"Password Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.passwordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.confirmPassword === \"\"){\n            newRegError.confirmPasswordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if((registrationInfo.password) !==  registrationInfo.confirmPassword){\n                newRegError.confirmPasswordError = \"Password does not match!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.confirmPasswordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n\n        if(valid === true){\n\n            registerServices.addNewUser(registrationInfo).then((response) => {\n                if(response){\n                    alert(\"Registration Successful!!\");\n                    history.push(\"/login\");\n                }\n            }).catch((error) => {\n                console.log(\"Error:\",error)\n            })\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Register</h3>\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Name</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter Name\"\n                                id = \"name\"\n                                name = \"name\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email\"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Contact Number</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter mobile number\"\n                                id = \"mobile\"\n                                name = \"mobile\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.mobileError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\"> LinkedIn Profile</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter linkedIn profile link\"\n                                id = \"linkedin\"\n                                name = \"linkedin\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.linkedinError}</p>\n                        </div>\n\n\n                        <div className=\"form-group\">\n                        <Form.Label> Website</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter website link\"\n                                id = \"website\"\n                                name = \"website\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.websiteError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Confirm Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm your password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.confirmPasswordError}</p>\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Register </Button>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport axios from \"axios\";\n\nexport class dashboardService{\n    // Get stat counts\n    async stats(data){\n        const result = await axios.get(\"/api/dashboard/stats\",{ params: data });\n        return result.data;\n    };\n\n    // Get client project count\n    async clientProjects(data){\n        const result = await axios.get(\"/api/dashboard/client-projects\",{ params: data });\n        return result.data;\n    };\n\n    // Get client invoice stats\n    async clientInvoiceStats(data){\n        const result = await axios.get(\"/api/dashboard/client-invoice-stats\",{ params: data });\n        return result.data;\n    };\n\n    // Get timelog stats\n    async timelogStats(data){\n        const result = await axios.get(\"/api/dashboard/timelog-stats\",{ params: data });\n        return result.data;\n    };\n}\n\nexport default new dashboardService()","import React, {useEffect, useState} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport {Line, Bar, Doughnut} from \"react-chartjs-2\";\nimport {Card} from \"react-bootstrap\";\nimport dashboardService from \"../services/dashboardService\";\n\nexport default function Dashboard(){\n    const [stats,setStats] = useState({\n        clients: 0,\n        projects:0,\n        invoices:0,\n        testimonials:0,\n    });\n    const [doughnutData,setDoughnutData] = useState({});\n    const [lineData,setLineData] = useState({});\n    const [barData,setBarData] = useState({});\n    useEffect(()=>{\n        dashboardService.stats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setStats(res.data));\n        dashboardService.clientProjects({\"userId\": localStorage.getItem(\"user_id\")}).then(res =>  setDoughnutData({\n            labels: res.data.clients,\n            datasets: [\n                {\n                    label: '# of Projects',\n                    data: res.data.projects,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)',\n                    ],\n                    borderWidth: 1,\n                },\n            ],\n        }));\n        dashboardService.clientInvoiceStats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setBarData({\n            labels: res.data.clients,\n            datasets: [\n                {\n                    label: '# of Paid Invoices',\n                    data: res.data.invoices_paid,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                },\n                {\n                    label: '# of Due Invoices',\n                    data:  res.data.invoices_due,\n                    backgroundColor: 'rgb(54, 162, 235)',\n                },\n            ],\n        }));\n        dashboardService.timelogStats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setLineData({\n            labels: res.data.dates,\n            datasets: [\n                {\n                    label: '# of Hours Logged',\n                    data: res.data.durations,\n                    fill: false,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgba(255, 99, 132, 0.2)',\n                },\n            ],\n        }));\n\n    },[]);\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Dashboard\" subtitle=\"\"/>\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.clients}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Clients</div>\n                                    <div><a href=\"/clients\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.projects}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Projects</div>\n                                    <div><a href=\"/projects\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.invoices}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Invoices</div>\n                                    <div><a href=\"/invoices\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.testimonials}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Testimonials</div>\n                                    <div><a href=\"/testimonials\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>Client and # of Projects</Card.Title>\n                                    <Doughnut data={doughnutData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Card>\n                                <Card.Body>\n                                    <Line data={lineData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                            <br/>\n                            <Card>\n                                <Card.Body>\n                                    <Bar data={barData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport {useGlobalFilter, usePagination, useSortBy, useTable} from \"react-table\";\nimport {Col, Form, Row, Table} from \"react-bootstrap\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport {CSVLink} from \"react-csv\";\n\nconst Datatable = (props) => {\n    //Init\n    const columns = props.columns;\n    const data = props.data;\n    const allowCSV = props.allowCSV == \"false\" ? false : true;\n    const allowSearch = props.allowSearch == \"false\" ? false : true;\n    const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } },\n        useGlobalFilter,\n        useSortBy,\n        usePagination);\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setGlobalFilter,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageSize, globalFilter }\n    } = tableInstance;\n\n    return (\n        <div>\n            <Row>\n                {/*Conditional Display Export CSV Button*/}\n                <Col md={{ span: 2 }} className=\"my-2\">\n                {allowCSV ?\n                    (\n                        <CSVLink data={data} filename={\"export.csv\"} className=\"secondary-button btn btn-secondary\" target=\"_blank\">\n                            Export CSV\n                        </CSVLink>\n                   )\n                    : (<></>)\n                }\n                </Col>\n\n                {/*Conditional Display Search Form*/}\n                {allowSearch ?\n                    (<Col md={{ span: 2, offset: 8 }}>\n                        <Form.Group>\n                            <Form.Control type=\"search\" placeholder=\"Search\"\n                                          value={globalFilter || \"\"}\n                                          onChange={e => setGlobalFilter(e.target.value)} />\n                        </Form.Group>\n                    </Col>)\n                    : (<></>)\n                }\n            </Row>\n\n            {/*Table*/}\n            <div className=\"table-responsive\">\n                <Table bordered striped {...getTableProps()}>\n                    <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    <span>{column.isSorted ?\n                                        column.isSortedDesc ?\n                                            ' 🔽': ' 🔼'\n                                        : ''}</span>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n\n            {/*Filters and Pagination*/}\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <Form.Control as=\"select\" style={{ width: \"100px\" }}\n                                      value={pageSize}\n                                      onChange={(e) => {\n                                          setPageSize(Number(e.target.value));\n                                      }}>\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                                <option key={pageSize} value={pageSize}>\n                                    Show {pageSize}\n                                </option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Pagination className=\"justify-content-end\">\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage}/>\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\n                        {Array(pageCount).fill().map((v,i) => (\n                            <Pagination.Item onClick={() => gotoPage(i)}>{i+1}</Pagination.Item>\n                        ))}\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}/>\n                    </Pagination>\n                </Col>\n            </Row>\n\n            {/*Table Info*/}\n            <Row>\n                <Col>\n                    <span>Showing {pageSize} results of {rows.length} rows</span>\n                </Col>\n            </Row>\n        </div>\n    )\n};\n\nexport default Datatable;\n","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Services for Projects.\n */\n\nimport axios from \"axios\";\n\nexport class projectsServices{\n\n    /**\n     * Method to hit the API of getting list of projects\n     */\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/projects\",object);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of getting single project\n     */\n    async get(id){\n        const result = await axios.get(\"/api/projects/\"+id);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of adding project in a list\n     */\n    async add(data){\n        //data.projectId = data.project;\n        const result = await axios.post(\"/api/projects/add\",data);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of updating a project\n     */\n    async update(data){\n        //data.projectId = data.project;\n        const result = await axios.put(\"/api/projects/update/\"+data._id,data);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of removing the project\n     */\n    async remove(data){\n        const result = await axios.delete(\"/api/projects/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new projectsServices()","/**\n * Author: Janvi Patel\n * Created On: 2021-07-20\n */\n\n import axios from \"axios\"\n\n export class ClientService {\n     async getAllClients(userId) {\n         const result = await axios.post(\"/api/clients/getAll\", {userId: userId} );\n         return result;\n     }\n \n     async editClient(client) {\n         const result = await axios.post(\"/api/clients/edit\", client );\n         return result;\n     }\n \n     async viewOneClient(client) {\n         const result = await axios.post(\"/api/clients/viewOne\" , client);\n         return result;\n     }\n \n     async addNewClient(saveData) {\n        const result = await axios.post('/api/clients/add', saveData);\n         return result;\n     }\n\n     async deleteClient(deleteData) {\n        const result = await axios.post(\"/api/clients/delete\", deleteData);\n        return result;\n     }\n }\n \n export default new ClientService()","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n * Frontend Page for Testimonials.\n */\n\n import React from 'react';\n import { useState, useEffect } from 'react';\n import PageHeader from \"../components/PageHeader\";\n import { Modal, Form, Button } from 'react-bootstrap';\n import Datatable from '../components/Datatable';\n import emailjs from 'emailjs-com';\n import Row from 'react-bootstrap/Row';\n import Col from 'react-bootstrap/Col';\n import \"../styles/Testimonials.scss\";\n import projectServices from '../services/projectsServices.js';\n import clientServices from '../services/clientService.js';\n import registerServices from '../services/registerServices';\n import {Table} from \"react-bootstrap\";\n import { useHistory } from 'react-router-dom';\n\nconst Profile = () => {\n\n    let history = useHistory();\n\n    const [userInfo, setUserInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n    });\n\n    useEffect(() => {\n        registerServices.fatchUserById(localStorage.getItem('user_id')).then((response) => {\n            console.log(response)\n            if(response){\n                setUserInfo({                \n                    name : response.Name,\n                    email : response.Email,\n                    mobile : response.ContactNo,\n                    linkedin : response.LinkedInProfile,\n                    website : response.Website,\n                    password : response.Password\n                })\n            }\n            console.log(userInfo)\n        }).catch((error) => {\n            alert(\"Login Failed!!\");\n            console.log(\"Eroor:\",error)\n        })\n    },[]);\n\n    const onClickBack = (e) => {\n        e.preventDefault();\n        history.push({ pathname: '/editProfile' });\n    }\n\n    return (\n        <div>\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Profile\" />\n            </div>\n            <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row>\n                            <Col className=\"text-right\">\n                                <Button className=\"btn primary-button\" onClick={onClickBack}>\n                                 Edit\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br/>\n                        <Row className=\"justify-content-center\">\n                            <Col md=\"8\">\n                                <Table bordered hover>\n                                    <tbody>\n                                    <tr>\n                                        <td>Name:</td>\n                                        <td>{userInfo.name}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact No:</td>\n                                        <td>{userInfo.mobile}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Email:</td>\n                                        <td>{userInfo.email}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>LinkedIn:</td>\n                                        <td>{userInfo.linkedin}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Website:</td>\n                                        <td>{userInfo.website}</td>\n                                    </tr>\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default Profile\n","import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport registerServices from '../services/registerServices';\n\nconst EditProfile = () => {\n    let history = useHistory();\n\n    const [userInfo, setUserInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n        id: localStorage.getItem('user_id')           \n    });\n\n    useEffect(() => {\n        registerServices.fatchUserById(localStorage.getItem('user_id')).then((response) => {\n            console.log(response)\n            if(response){\n                setUserInfo({                \n                    name : response.Name,\n                    email : response.Email,\n                    mobile : response.ContactNo,\n                    linkedin : response.LinkedInProfile,\n                    website : response.Website,\n                    password : response.Password\n                })\n            }\n            console.log(userInfo)\n        }).catch((error) => {\n            alert(\"Login Failed!!\");\n            console.log(\"Eroor:\",error)\n        })\n    },[]);\n\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n    const checkMobile = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n    const [registrationInfo, setRegistrationInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n        id: localStorage.getItem('user_id')\n    });\n\n    const [registrationErrors, setRegistrationErrors] = useState({\n        nameError: '',\n        emailError: '',\n        mobileError:'',\n        linkedinError:'',\n        websiteError:'',\n        passwordError: '',\n    });\n\n    const handleChange = (e) => {\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\n        setRegistrationInfo(newRegistration);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        let newRegError = {...registrationErrors};\n\n        if(registrationInfo.name === \"\"){\n            registrationInfo.name = userInfo.name\n        }\n        else{\n            newRegError.nameError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.email === \"\"){\n            registrationInfo.email = userInfo.email\n        }\n        else{\n            if(!checkEmail.test(registrationInfo.email)){\n                newRegError.emailError = \"Email Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.emailError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.mobile === \"\"){\n            registrationInfo.mobile = userInfo.mobile\n        }\n        else{\n            if(!checkMobile.test(registrationInfo.mobile)){\n                newRegError.mobileError = \"Contact number Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.mobileError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.linkedin === \"\"){\n            registrationInfo.linkedin = userInfo.linkedin\n        }\n        else{\n            newRegError.linkedinError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.website === \"\"){\n            registrationInfo.website = userInfo.website\n        }\n        else{\n            newRegError.websiteError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n\n        if(registrationInfo.password === \"\"){\n            registrationInfo.password = userInfo.password\n        }\n        else{\n            if(!checkPassword.test(registrationInfo.password)){\n                newRegError.passwordError = \"Password Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.passwordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(valid === true){\n            registerServices.editUser(registrationInfo).then((response) => {\n                console.log(response)\n                if(response){\n                    alert(\"Profile Updated!!\");\n                    history.push(\"/profile\");\n                }\n            }).catch((error) => {\n                console.log(\"Eroor:\",error)\n            })\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Edit Profile</h3>\n                        <br />\n                        <br />\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Name</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.name}\n                                id = \"name\"\n                                name = \"name\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.email}\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Contact Number</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.mobile}\n                                id = \"mobile\"\n                                name = \"mobile\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.mobileError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\"> LinkedIn Profile</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.linkedin}\n                                id = \"linkedin\"\n                                name = \"linkedin\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.linkedinError}</p>\n                        </div>\n\n\n                        <div className=\"form-group\">\n                        <Form.Label> Website</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.website}\n                                id = \"website\"\n                                name = \"website\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.websiteError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder={userInfo.password}\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\n                        </div>\n                        <br />\n\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Edit Profile </Button>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditProfile\n","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Service Containing API calls for Invoice management, Invoice generation and Edit invoice.\n */\n import axios from \"axios\"\n export class invoiceServices {\n     async getTags(date) {\n         const result = await axios.post(\"/api/invoices/tags\",  date );\n         return result;\n     }\n \n     async addInvoice(data) {\n         const result = await axios.post(\"/api/invoices/save\", data);\n         return result;\n     }\n \n     async findInvoice(data) {\n         const result = await axios.post(\"/api/invoices/findinvoice\", data);\n         return result;\n     }\n \n     async getAllProject(data) {\n         const result = await axios.post(\"/api/invoices/getproject\",data);\n         return result;\n     }\n     \n     async getAllInvoices(data) {\n        const result = await axios.post(\"/api/invoices/fetchinvoices\",data);\n        return result;\n    }\n\n    async deleteinvoice(data) {\n        const result = await axios.post(\"/api/invoices/deleteinvoice\",data);\n        return result;\n    }\n     \n    async updateInvoice(data) {\n        const result = await axios.post(\"/api/invoices/updateinvoice\",data);\n        return result;\n    }\n    async getUserEmail(data) {\n        const result = await axios.post(\"/api/invoices/getEmail\",data);\n        return result;\n    }\n    async getClentEmail(data) {\n        const result = await axios.post(\"/api/invoices/getClientEmail\",data);\n        return result;\n    }\n    getClentEmail\n }\n \n export default new invoiceServices()","\n/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Generation component.\n */\nimport React, { PureComponent } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport Datatable from \"../../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/InvoiceGeneration.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport invoiceServices from \"../../services/invoiceServices\";\nimport jsPDF from 'jspdf'\nimport Moment from 'moment';\nimport emailjs from 'emailjs-com';\n\nexport class InvoiceGeneration extends PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectId: props && props.history && props.history.location && props.history.location.state && props.history.location.state.state ? props.history.location.state.state : 0,\n            readonly: props && props.history && props.history.location && props.history.location.state && props.history.location.state.state ? true : false,\n            user: localStorage.getItem(\"user_id\"),\n            dueDateError: \"\",\n            startAt: \"\",\n            startAtError: \"\",\n            endDate: \"\",\n            endDateError: \"\",\n            hourlyRate: \"\",\n            hourlyRateError: \"\",\n            project: \"\",\n            projectError: \"\",\n            client: \"\",\n            totalcost: 0,\n            projects: [],\n            tags: [],\n            generateDate: \"\",\n            paymentStatus: \"Unpaid\",\n            dueDate: \"\",\n            clientName: \"\",\n            invoiceNumber: \"\",\n            Total: \"\",\n            generatedDate: \"\",\n            invoiceDetails: [],\n            generate: false,\n            save: false\n\n        }\n\n\n        this.columns = [\n            { Header: 'Description', accessor: 'description' },\n            { Header: 'Time (hours)', accessor: 'hours' },\n            { Header: 'Total', accessor: 'total' }\n        ];\n    }\n    /**\n     * when page renders it will fetch all the invoices or invoice based on read condition\n     * \n     * If this component is called from invoiceManagement.js, this page will open as read-only mode. \n     * in read-only mode, it will fetch generated invoice details based on the project id.\n     * \n     * If this component is called from dahsboard, it will allow a user to generate invoice.\n     */\n\n    pageContent() {\n        //executed when called in read-only mode\n        if (this.state.readonly) {\n\n            invoiceServices.findInvoice(this.state).then((response) => {\n\n                if (response.status == 200) {\n                    this.setState({ project: response.data.result.projectName })\n                    this.setState({ clientName: response.data.result.clientName })\n                    this.setState({ dueDate: response.data.result.dueDate })\n                    this.setState({ generatedDate: response.data.result.generatedDate })\n                    this.setState({ hourlyRate: response.data.result.hourlyRate })\n                    this.setState({ Total: response.data.result.totalCost })\n                    this.setState({ invoiceNumber: response.data.result._id })\n                    this.setState({ paymentStatus: response.data.result.paymentStatus })\n                    this.setState({ startAt: response.data.result.startDate })\n                    this.setState({ endAt: response.data.result.taskendDate })\n                    let invoiceDetails = []\n                    response.data.result.tags.forEach(row => {\n\n                        let data = {}\n                        data.id = row.tagId;\n                        data.description = row.description\n                        data.hours = row.hours\n                        data.total = row.total\n                        invoiceDetails.push(data)\n                    })\n                    if (invoiceDetails.length != 0) {\n                        this.setState({ invoiceDetails: this.state.invoiceDetails.concat(invoiceDetails) })\n\n                    }\n\n                }\n            }).catch((error) => {\n                console.log(error)\n            })\n        } else {\n            //Executed when called from dashbord page\n            invoiceServices.getAllProject(this.state).then((response) => {\n                if (response.status == 200) {\n\n                    this.setState({ projects: response.data.result })\n                }\n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n\n    }\n    componentDidMount() {\n        this.pageContent()\n    }\n\n\n    //On value change of a control, set it in state.\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    //validate project field\n    validateProject = (event) => {\n        let isValid = true;\n        if (!this.state.project) {\n            this.setState({ projectError: \"Project is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n    //validate due date and project duration date\n    validateDate = (event) => {\n        let isValid = true;\n\n        if (!this.validatestartDate()) {\n            isValid = false;\n        }\n        if (!this.validateEndDate()) {\n            isValid = false;\n        }\n        if (!this.validateDueDate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateDueDate = (event) => {\n        let isValid = true;\n        if (this.state.dueDate) {\n\n            const selectedDate = new Date(this.state.dueDate)\n            const endDate = new Date(this.state.endDate)\n            const today = new Date()\n            if (selectedDate < today) {\n                this.setState({ dueDateError: \"Due Date cannot be past date or Generated Date\" })\n                isValid = false;\n            } else if (endDate > selectedDate) {\n                this.setState({ dueDateError: \"Due Date must be greater than project duration date\" })\n                isValid = false;\n            }\n            else {\n                this.setState({ dueDateError: \"\" })\n            }\n        } else {\n            this.setState({ dueDateError: \"Due Date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n    validatestartDate = (event) => {\n        let isValid = true;\n        if (this.state.startAt) {\n\n            const selectedDate = new Date(this.state.startAt)\n            const endDate = new Date(this.state.endDate)\n            const today = new Date()\n            if (selectedDate > today) {\n                this.setState({ startAtError: \"Start Date cannot be furture datee\" })\n                isValid = false;\n            } else if (endDate < selectedDate) {\n                this.setState({ startAtError: \"Start Date must be less than End date\" })\n                isValid = false;\n            }\n            else {\n                this.setState({ startAtError: \"\" })\n            }\n        } else {\n            this.setState({ startAtError: \"Start Date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateEndDate = (event) => {\n        let isValid = true;\n        const today = new Date()\n        const dueDate = new Date(this.state.dueDate)\n        const endDate = new Date(this.state.endDate)\n        if (dueDate && endDate) {\n            if (dueDate < endDate || today < endDate) {\n                this.setState({ endDateError: \"End Date cannot be greater than due date or current date\" })\n                isValid = false;\n            } else {\n                this.setState({ endDateError: \"\" })\n            }\n        } else {\n            this.setState({ endDateError: \"End date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    //validate horly rate field\n    validateHourlyRate = (event) => {\n        let isValid = true;\n        if (!this.state.hourlyRate) {\n            this.setState({ hourlyRateError: \"Hourly Rate is required\" })\n            isValid = false;\n        } else if (this.state.hourlyRate < 1) {\n            this.setState({ hourlyRateError: \"Hourly Rate must be a greater than 0\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateForm = (event) => {\n        let isValid = true\n\n        if (!this.validateProject()) {\n            isValid = false;\n        }\n        if (!this.validateDate()) {\n            isValid = false;\n        }\n        if (!this.validateHourlyRate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    //Generate invoice by fetching all the task from the timelog collection\n    generateInvoice = (event) => {\n        event.preventDefault();\n        this.setState({ invoiceDetails: [] })\n        //invoice generation date\n        this.setState({ generateDate: Date.now() })\n        if (this.validateForm()) {\n            invoiceServices.getTags(this.state).then((response) => {\n                if (response.status == 200) {\n\n                    this.setState({ tags: response.data.result })\n                    let invoiceDetails = []\n                    let totalCost = 0\n                    response.data.result.forEach(row => {\n\n                        let data = {}\n                        var startdate = new Date(row.startAt);\n\n                        var enddate = new Date(row.endAt);\n\n                        var seconds = Math.round(((enddate) - (startdate)) / 1000).toFixed(3);\n\n                        var minutes = Math.round(seconds / 60).toFixed(3);\n                        var hour = Math.round(minutes / 60).toFixed(3);\n                        if (hour != \"NaN\" && hour) {\n                            data.id = row._id;\n                            data.description = row.task\n                            data.hours = hour\n                            data.total = this.state.hourlyRate * hour\n                            totalCost = totalCost + data.total\n                            invoiceDetails.push(data)\n                        }\n\n                    })\n                    //store tags, hours worked on that tags and total cost for performing that task\n                    if (invoiceDetails.length != 0) {\n                        this.setState({ invoiceDetails: this.state.invoiceDetails.concat(invoiceDetails), generate: true })\n                        this.setState({ totalcost: totalCost })\n\n                    }\n                    if (this.state.invoiceDetails.length == 0) {\n                        alert(\"No task are pending to generate invoice. Please select again.\")\n                    }\n\n                }\n            }).catch((error) => {\n                console.log(error)\n            })\n\n        }\n\n\n    }\n\n    //this function store generated invoices in database\n    saveInvoice = (event) => {\n        if (this.state.generate) {\n            if (this.validateForm()) {\n\n                invoiceServices.addInvoice(this.state).then((response) => {\n\n                    if (response.status == 200) {\n\n                        this.setState({ save: true })\n                        alert(\"Ïnvoice Added\")\n                    } else {\n                        alert(\"Invoice is already generated\")\n                    }\n                }).catch((error) => {\n                    alert(\"Invoice is already generated\")\n                })\n            }\n        } else {\n            alert(\"Invoice is not generated. Please generate Invoice first.\")\n        }\n    }\n\n    //this function store data in pdf file\n    downloadInvoice = (event) => {\n        if (this.state.save) {\n            var client = \"\"\n            var project = \"\"\n            var doc = new jsPDF('p', 'pt');\n            this.state.projects.forEach(result => {\n                if (result._id == this.state.project) {\n                    client = result.client\n                    project = result.title\n                }\n\n            })\n            const date = Moment(Date.now()).format('YYYY-MM-DD')\n            doc.text(250, 20, \"Invoice\")\n            doc.text(20, 50, \"Project Name :\" + project)\n            doc.text(20, 70, \"Client Name :\" + client)\n            doc.text(20, 90, \"From Date :\" + this.state.startAt)\n            doc.text(200, 90, \"To date :\" + this.state.endDate)\n            doc.text(20, 110, \"Invoice Genrated :\" + date)\n            doc.text(20, 130, \"Payment Due Date :\" + this.state.dueDate)\n            doc.text(20, 150, \"Hourly Rate :\" + this.state.hourlyRate + \"CAD\")\n            doc.text(20, 170, \"Total Amount :\" + this.state.totalcost + \"CAD\")\n            doc.text(20, 190, \"  \")\n            doc.text(20, 210, \"Task details\")\n            var i = 230\n            this.state.invoiceDetails.forEach(result => {\n\n                doc.text(20, i, \"Task :\" + result.description)\n                i = i + 20\n                doc.text(20, i, \"Hours :\" + result.hours)\n                i = i + 20\n                doc.text(20, i, \"Total :\" + result.total)\n                i = i + 20\n                doc.text(20, i, \"  \")\n                i = i + 20\n\n            })\n            doc.setFont('normal')\n            doc.save(\"generated.pdf\")\n\n        } else {\n            alert(\"Please save Invoice before downloading\")\n        }\n\n    }\n\n    Emailsender = (freelancerName, fromEmail, projectNAme, toEmail, clientName) => {\n\n        const date = Moment(Date.now()).format('YYYY-MM-DD')\n        const message = \"Hello \\nPlease find attached below invoice \\nProject Name  :\" + projectNAme + \"\\nFrom Date  :\" + this.state.startAt +\n            \"\\nTo Date  :\" + this.state.endDate + \"\\nDue Date  :\" + this.state.dueDate + \"\\nGenerated Date  :\" + date + \"\\nHourly Rate  :\" + this.state.hourlyRate + \"\\nTotal :\" + this.state.totalcost\n\n        var mailParams = {\n            //Mail Sender Details\n            freelancerName: freelancerName,\n            freelancerMail: fromEmail,\n\n            //Mail Reciver DetailstoEmail\n            clientName: clientName,\n            clientMail: toEmail,\n\n            //Attachment Messages\n            message: message\n        };\n\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n            .then(function (response) {\n                alert(\"Email Sent\");\n            }, function (error) {\n                alert(\"Error: \" + error);\n                console.log(error);\n            });\n\n    }\n    //this function sends invoice details to client through email using emailjs\n    sendemail = (e) => {\n        var fromEmail = \"\"\n        var freelancerName = \"\"\n        var clientName = \"\"\n        var toEmail = \"\"\n        var projectNAme = \"\"\n\n        this.state.projects.forEach(result => {\n            if (result._id == this.state.project) {\n                projectNAme = result.title\n            }\n\n        })\n\n        invoiceServices.getUserEmail(this.state).then((response) => {\n            var freelancerdata = response.data.result[0]\n            fromEmail = freelancerdata.Email\n            freelancerName = freelancerdata.Name\n            invoiceServices.getClentEmail(this.state).then(response => {\n                var clientdata = response.data.result[0]\n                toEmail = clientdata.Email\n                clientName = clientdata.ClientName\n                this.Emailsender(freelancerName, fromEmail, projectNAme, toEmail, clientName)\n\n            })\n\n        })\n\n    }\n\n    //called when component is called in read-only mode. This function redirect to invoicemanagement page\n    closeInvoice = (e) => {\n        this.props.history.push('/invoices')\n    }\n    render() {\n        return (\n            <div className=\"page-container invoice-generation-container\">\n                <div className=\"page-header-container\">\n                    {this.state.readonly ? (<PageHeader title=\"Invoice Details\" subtitle=\"\" />)\n                        : (<PageHeader title=\"Invoice Generation\" subtitle=\"\" />)}\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"invoice-generation-content\">\n                            <Col>\n                                <Form>\n                                    <div className=\"generate-forms\">\n                                        <Row>\n                                            <Col>\n                                                {this.state.readonly ? (\n                                                    <span>\n                                                        <div> Invoice Number :{this.state.invoiceNumber}</div>\n                                                        <div>Project Name :  {this.state.project}</div>\n                                                        <div>Client Name : {this.state.clientName}</div>\n                                                        <div>From date:{Moment(this.state.startAt).format('YYYY-MM-DD HH:MM:SS')}</div>\n                                                        <div>To date:{Moment(this.state.endAt).format('YYYY-MM-DD HH:MM:SS')}</div>\n                                                        <div>Invoice Genrated : {Moment(this.state.generatedDate).format('YYYY-MM-DD HH:MM:SS')}</div>\n                                                        <div>Payment Due Date :{Moment(this.state.dueDate).format('YYYY-MM-DD HH:MM:SS')}</div>\n                                                        <div>Hourly Rate :{this.state.hourlyRate} CAD </div>\n                                                        <div>Total Amount :{this.state.Total} CAD </div>\n                                                        <div>Payment Status :{this.state.paymentStatus} </div>\n                                                        <div> </div>\n                                                    </span>\n\n                                                ) : (\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required\">Project</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"project\" value={this.state.project} onChange={this.onValueChange}\n                                                            onBlur={this.validateProject}\n                                                            isInvalid={this.state.projectError}>\n                                                            <option>Select Project</option>\n                                                            {this.state.projects.map(project => (\n                                                                <option value={project._id}>{project.title}</option>\n                                                            ))}\n                                                        </Form.Control>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            {this.state.projectError}\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>)}\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n\n                                                {this.state.readonly ? (<div></div>) :\n                                                    (\n                                                        <Form.Group>\n\n                                                            <div className=\"inline-date-control\">\n\n                                                                <div className=\"due-date-control\">\n                                                                    <div>\n                                                                        <Form.Label className=\"required\">Start Date</Form.Label>\n                                                                    </div>\n                                                                    <Form.Control type=\"date\" className=\"start-date\" name=\"startAt\" placeholder=\"start Date\" value={this.state.startAt} onChange={this.onValueChange}\n                                                                        onBlur={this.validateDate}\n                                                                        isInvalid={this.state.startAtError} />\n                                                                    <Form.Control.Feedback type=\"invalid\">\n                                                                        {this.state.startAtError}\n                                                                    </Form.Control.Feedback>\n                                                                </div>\n                                                                <div className=\"end-date-control\">\n                                                                    <div>\n                                                                        <Form.Label className=\"required\">End Date</Form.Label>\n                                                                    </div>\n                                                                    <Form.Control type=\"date\" name=\"endDate\" placeholder=\"End Date\" value={this.state.endDate} onChange={this.onValueChange}\n                                                                        onBlur={this.validateDate}\n                                                                        isInvalid={this.state.endDateError} />\n                                                                    <Form.Control.Feedback type=\"invalid\">\n                                                                        {this.state.endDateError}\n                                                                    </Form.Control.Feedback>\n                                                                </div>\n                                                                <div className=\"due-date-control\">\n                                                                    <div>\n                                                                        <Form.Label className=\"required\">Invoice Duedate</Form.Label>\n                                                                    </div>\n                                                                    <Form.Control type=\"date\" className=\"start-date\" name=\"dueDate\" placeholder=\"Due Date\" value={this.state.dueDate} onChange={this.onValueChange}\n                                                                        onBlur={this.validateDate}\n                                                                        isInvalid={this.state.dueDateError} />\n                                                                    <Form.Control.Feedback type=\"invalid\">\n                                                                        {this.state.dueDateError}\n                                                                    </Form.Control.Feedback>\n                                                                </div>\n                                                            </div>\n                                                        </Form.Group>)}\n                                            </Col>\n                                            <Col>\n                                                {this.state.readonly ? (<div></div>) : (\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required\">Hourly Rate</Form.Label>\n                                                        <Form.Control type=\"number\" name=\"hourlyRate\" placeholder=\"Hourly Rate\" value={this.state.hourlyRate} onChange={this.onValueChange}\n                                                            onBlur={this.validateHourlyRate}\n                                                            isInvalid={this.state.hourlyRateError} />\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            {this.state.hourlyRateError}\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                )}\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"generate-buttons\">\n                                        {this.state.readonly ?\n                                            (<Row className=\"generate-button-container\">\n                                                <Col className=\"text-right\">\n                                                    <Button className=\"secondary-button\" onClick={this.closeInvoice}>\n\n                                                        Close\n                                                    </Button>\n                                                </Col>\n                                            </Row>) :\n                                            (\n                                                <div>\n                                                    {!this.state.save ? (\n                                                        <Row className=\"generate-button-container\">\n                                                            <Col className=\"text-right\">\n                                                                <Button className=\"primary-button\" onClick={this.generateInvoice}>\n                                                                    Generate Invoice\n                                                                </Button>\n                                                                <Button className=\"secondary-button\" onClick={this.saveInvoice}>\n                                                                    Save\n                                                                </Button>\n                                                            </Col>\n                                                        </Row>\n\n                                                    ) : (\n                                                        <div>\n                                                            <Row className=\"generate-button-container\">\n                                                                <Col className=\"text-right\">\n                                                                    <Button className=\"secondary-button\" onClick={this.downloadInvoice}>\n                                                                        Download\n                                                                    </Button>\n                                                                    <Button className=\"secondary-button\" onClick={this.sendemail}>\n                                                                        Send\n                                                                    </Button>\n                                                                </Col>\n                                                            </Row>\n\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n\n                                    </div>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Row className=\"data-table-container\">\n                            <Col>\n                                <Datatable columns={this.columns} data={this.state.invoiceDetails} allowCSV=\"false\" allowSearch=\"false\" />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(InvoiceGeneration);","/* Author: Vishal Sancheti */\n\nimport axios from \"axios\";\n\nexport class timelogServices{\n    // Get all Timelogs\n    async list(data){\n        const result = await axios.get(\"/api/timelogs\",{ params: data });\n        return result.data;\n    };\n\n    // Add new Timelog\n    async add(data){\n        data.projectId = data.project;\n        const result = await axios.post(\"/api/timelogs/add\",data);\n        return result.data;\n    };\n\n    // Update Timelog\n    async update(data){\n        data.projectId = data.project;\n        const result = await axios.put(\"/api/timelogs/update/\"+data._id,data);\n        return result.data;\n    };\n\n    // Remove Timelog\n    async remove(data){\n        const result = await axios.delete(\"/api/timelogs/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new timelogServices()","/* Author: Vishal Sancheti */\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment'\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\n\nimport timelogServices from '../services/timelogServices.js'\nimport projectServices from '../services/projectsServices.js'\nimport clientService from \"../services/clientService\";\n\nexport default function Timelogs() {\n    //Init\n    const columns = [\n        { Header: 'Project', accessor: 'project.title' },\n        { Header: 'Client', accessor: 'project.client' },\n        { Header: 'Task', accessor: 'task' },\n        { Header: 'Start At', accessor: row => moment(row.startAt).format(\"DD-MM-YYYY hh:mm:ss\")},\n        { Header: 'End At', accessor: row => row.endAt ? moment(row.endAt).format(\"DD-MM-YYYY hh:mm:ss\"):\"-\"},\n        { Header: 'Action', id: 'action', accessor: 'row',\n            Cell: ({ row }) => (<Button className=\"delete-button\" onClick={() => { deleteTask(row) }}>Delete</Button>)\n        }\n    ];\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        timelogServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setData(res.data));\n    },[]);\n\n    useEffect(() => {\n        if(data.length){\n            let lastTask = data[0];\n            if(lastTask && !lastTask.endAt){\n                setTask(lastTask);\n                restartTimer(new Date(lastTask.startAt));\n            }\n        }\n    },[data]);\n\n    // Timer properties and actions\n    const [timerState, setTimerState] = useState(0);\n    const [timerStart, setTimerStart] = useState(Date.now());\n    const [timerEnd, setTimerEnd] = useState(Date.now());\n    const [timerString, setTimerString] = useState(\"00 : 00 : 00 : 00\");\n    const [timer, setTimer] = useState(0);\n    useEffect(() => {\n        let centiseconds = (\"0\" + (Math.floor(timer / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timer / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timer / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor(timer / 3600000)).slice(-2);\n        setTimerString(hours + \" : \" + minutes + \" : \" + seconds + \" : \" + centiseconds);\n    }, [timer]);\n    const startTimer = () => {\n        if (timerState === 0) {\n            setTimerStart(Date.now() - timer);\n            setTimerState(\n                setInterval(() => {\n                    setTimer(Date.now() - timerStart)\n                }, 10)\n            );\n        }\n    };\n    const restartTimer = (startAt) => {\n        if (timerState === 0) {\n            setTimerStart(startAt - timer);\n            setTimer(Date.now() - startAt);\n            setTimerState(\n                setInterval(() => {\n                    setTimer( Date.now() - startAt)\n                }, 10)\n            );\n        }\n    };\n    const stopTimer = () => {\n        setTimerEnd(Date.now());\n        clearInterval(timerState);\n        setTimerState(0);\n        setTimer(0);\n    };\n\n    // New Task States\n    const [projects, setProjects] = useState([]);\n    const [clients, setClients] = useState([]);\n    useEffect(() => {\n        clientService.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClients(res.data));\n    },[]);\n    useEffect(() => {\n        projectServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setProjects(res.data));\n    },[]);\n    const [task, setTask] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\",\n        startAt: \"\",\n        endAt: \"\"\n    });\n    const [taskError, setTaskError] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\"\n    });\n    const [showModal, setShowModal] = useState(false);\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newTask = { ...task, [e.target.name]: e.target.value };\n        setTask(newTask);\n    };\n    const isTaskValid = () => {\n        let valid = true;\n        setTaskError({\n            project: \"\",\n            client: \"\",\n            task: \"\"\n        });\n\n        if (!task.project.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.project = \"Project is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.client.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.client = \"Client is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.task.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.task = \"Task is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = () => setShowModal(true);\n\n    // New Task Actions\n    const startTask = (e) => {\n        e.preventDefault();\n        if (isTaskValid()) {\n            startTimer();\n            task.startAt = Date.now();\n            task.userId = localStorage.getItem(\"user_id\");\n            timelogServices.add(task).then(res => {task._id = res.data._id; task.project = res.data.project});\n            setData(data => [task, ...data]);\n            handleModalClose();\n        }\n    };\n    const stopTask = () => {\n        stopTimer();\n        let newData = [...data];\n        newData[0].endAt = Date.now();\n        timelogServices.update(newData[0]).then(res => alert(res.message));\n        setData(newData);\n        setTask({\n            project: \"\",\n            client: \"\",\n            task: \"\",\n            startAt: \"\",\n            endAt: \"\"\n        });\n    };\n    const deleteTask = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            timelogServices.remove(newData[0]).then(res => alert(res.message));\n            newData.splice(task.index, 1);\n            setData(newData);\n        }\n    };\n\n    return (\n        <div className=\"page-container timelogs-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Time logs\" subtitle=\"\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row className=\"justify-content-center\">\n                        <Col md={6}>\n                            <Card>\n                                <Card.Body className=\"text-center\">\n                                    <Card.Title style={{ fontSize: \"2.5rem\" }}>{timerString}</Card.Title>\n                                    {timer <= 0 &&\n                                    <Button className=\"primary-button btn\" onClick={handleModalShow}>Start</Button>\n                                    }\n                                    {timer > 0 &&\n                                    <>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">Task: {task.task}</Card.Subtitle>\n                                        <Button className=\"delete-button btn\" onClick={stopTask}>Stop</Button>\n                                    </>\n                                    }\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Modal show={showModal} onHide={handleModalClose}>\n                        <Form onSubmit={(e) => startTask(e)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>New Task</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body className=\"show-grid\">\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Client</Form.Label>\n                                                <Form.Control as=\"select\" name=\"client\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.client.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Client</option>\n                                                    {clients.length && clients.map(function(client,index){\n                                                        return <option key={index} value={client.ClientName}>{client.ClientName}</option>\n                                                    })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.client}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Project</Form.Label>\n                                                <Form.Control as=\"select\" name=\"project\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.project.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Project</option>\n                                                    {projects.length && projects.filter(project => project.client && project.client.includes(task.client))\n                                                        .map(function(project,index){\n                                                            return <option key={index} value={project._id}>{project.title}</option>\n                                                        })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.project}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Task</Form.Label>\n                                                <Form.Control type=\"text\" name=\"task\" placeholder=\"Task Description...\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.task.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{taskError.task}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                    Close\n                                </Button>\n                                <Button className=\"primary-button\" type=\"submit\">\n                                    Start\n                                </Button>\n                            </Modal.Footer>\n                        </Form>\n\n                    </Modal>\n                    <Datatable columns={columns} data={data} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Add Project File.\n */\n\nimport {useState, useEffect, React} from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../../services/projectsServices';\nimport clientService from '../../services/clientService';\nimport {Col, Row} from \"react-bootstrap\";\n\n/**\n *  Functionality for adding the project\n */\nexport default function AddProjects(){\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        rate: \"\",\n        invoice: \"\",\n        status: \"\",\n        userId: localStorage.getItem(\"user_id\")\n    });\n\n    const [clients, setClient] = useState({\n        ClientName : \"\"\n    });\n\n    useEffect(() => {\n        clientService.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClient(res.data));\n    },[]);\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        rate: \"\",\n        invoice: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            rate: \"\",\n            invoice: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        // if(!project.rate.value > 0){\n        //     newProjectError.rate = \"Rate is required\";\n        //     setProjectError(newProjectError);\n        //     valid = false;\n        // }\n        // else{\n        //     newProjectError.rate = \"\";\n        //     setProjectError(newProjectError);\n        // }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            projectsServices.add(project).then(res => res);\n            history.push('/projects');\n        }\n        return valid;\n    };\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col>\n                            <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                               className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\n                                        <p className=\"text-danger\">{projectError.title}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                                            <option value=\"\">Select Client</option>\n                                            {clients.length > 0 && clients.map(function(client,index){\n                                                return <option value={client.ClientName}>{client.ClientName}</option>\n                                            })}\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.client}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                  className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                                        <p className=\"text-danger\">{projectError.description}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                                        <p className=\"text-danger\">{projectError.rate}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                                            <option value=\"\">Select Invoice Duration</option>\n                                            <option value=\"Daily\">Daily</option>\n                                            <option value=\"Weekly\">Weekly</option>\n                                            <option value=\"Monthly\">Monthly</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.invoice}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                                            <option value=\"\">Select Project Status</option>\n                                            <option value=\"In Progress\">In Progress</option>\n                                            <option value=\"Pending\">Pending</option>\n                                            <option value=\"Completed\">Completed</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.status}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                                    </div>\n                                    <div className=\"col-md-3\"></div>\n                                </div>\n                            </center></form>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    )}","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Listing File for Projects.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport AddProject from './Projects/AddProject';\nimport Datatable from \"../components/Datatable\";\nimport '../styles/style.scss';\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../services/projectsServices.js'\nimport \"../styles/Projects.scss\";\n\n/**\n *  Functionality for listing down the list of projects\n */\nexport default function Projects() {\n\n    const columns = [\n        { Header: 'Project Title', accessor: 'title' },\n        { Header: 'Description', accessor: 'description' },\n        { Header: 'Client Name', accessor: 'client' },\n        { Header: 'Status', accessor: 'status' },\n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (<div className=\"data-table-button\"><a className=\"secondary-button\" align=\"right\" onClick={() => viewDetails(row.original._id)} >View</a><a title=\"Edit Project\" onClick={() => editProject(row.original._id)} className=\"secondary-button\">Edit</a><a title=\"Delete Project\" onClick={() => { deleteProject(row.original) }} className=\"delete-button\">Delete</a></div>)\n        }\n    ];\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        projectsServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setData(res.data));\n    },[]);\n\n    const deleteProject = (project) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            projectsServices.remove(project).then(res => alert(res.message));\n            projectsServices.list().then(res => setData(res.data));\n        }\n    };\n\n    const [checkForm, setCheckForm] = useState(true);\n\n    const validate = () => {\n        setCheckForm(false);\n    }\n\n    const history = useHistory();\n\n    async function editProject(id) {\n        let url = \"/projects/edit/\" + id;\n        history.push(url);\n    }\n\n    async function viewDetails(id) {\n        let url = \"/projects/view/\" + id;\n        history.push(url);\n    }\n\n    return (\n        <div className=\"page-container projects-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div className=\"page-content\">\n                <Row className=\"button-container\">\n                    <Col className=\"text-right\">\n                        <a href=\"/projects/add\" title=\"Add Project\" className=\"btn primary-button\">Add Project</a>\n                    </Col>\n                </Row>\n                <Row className=\"data-table-container\">\n                    <Col>\n                        <Datatable columns={columns} data={data} />\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </div>\n    )\n}","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Edit File for Projects.\n */\n\nimport {useState, useEffect, React} from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport projectsServices from '../../services/projectsServices';\nimport clientService from '../../services/clientService';\nimport {Col, Row} from \"react-bootstrap\";\n\n/**\n *  Functionality for editing the project\n */\nconst EditProjects = (prop) => {\n\n    const param = useParams();\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const params = history.location.pathname.split('/');\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const [clients, setClient] = useState({\n        ClientName : \"\"\n    });\n\n    useEffect(() => {\n        clientService.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClient(res.data));\n        projectsServices.get(params[params.length-1]).then(res => setProject(res.data));\n    },[]);\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            invoice: \"\",\n            rate: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            projectsServices.update(project).then(res => res);\n            history.push('/projects');\n        }\n        return valid;\n    };\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Edit Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col>\n                            <form onSubmit={(e) => isProjectValid(e)}>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                               className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" value={project.title.length > 0 && project.title} name=\"title\" id=\"title\"/>\n                                        <p className=\"text-danger\">{projectError.title}</p>\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                                            <option value=\"\">Select Client</option>\n                                            {clients.length > 0 && clients.map(function(client,index){\n                                                return <option value={client.ClientName} selected={client.ClientName === project.client ? \"true\":\"false\"}>{client.ClientName}</option>\n                                            })}\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.client}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                  className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} value={project.description} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                                        <p className=\"text-danger\">{projectError.description}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} value={project.rate} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                                        <p className=\"text-danger\">{projectError.rate}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                                            <option value=\"\">Select Invoice Duration</option>\n                                            <option value=\"Daily\" selected={project.invoice === \"Daily\" ? \"true\":\"false\"}>Daily</option>\n                                            <option value=\"Weekly\" selected={project.invoice === \"Weekly\" ? \"true\":\"false\"}>Weekly</option>\n                                            <option value=\"Monthly\" selected={project.invoice === \"Monthly\" ? \"true\":\"false\"}>Monthly</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.invoice}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                                            <option value=\"\">Select Project Status</option>\n                                            <option value=\"In Progress\" selected={project.status === \"In Progress\" ? \"true\":\"false\"}>In Progress</option>\n                                            <option value=\"Pending\" selected={project.status === \"Pending\" ? \"true\":\"false\"}>Pending</option>\n                                            <option value=\"Completed\" selected={project.status === \"Completed\" ? \"true\":\"false\"}>Completed</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.status}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                                    </div>\n                                    <div className=\"col-md-3\"></div>\n                                </div>\n                            </form>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EditProjects;","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * View File for Project.\n */\n\n import {useState, useEffect, React} from 'react';\n import PageHeader from \"../../components/PageHeader\";\n import { useHistory } from 'react-router-dom';\n import projectsServices from '../../services/projectsServices';\n import {Col, Row, Button, Table} from \"react-bootstrap\";\n \n /**\n  *  Functionality for editing the project\n  */\n const ViewProject = (prop) => {\n \n     const history = useHistory();\n \n     async function cancel() {\n         let url = \"/projects\";\n         history.push(url);\n     }\n \n     const params = history.location.pathname.split('/');\n \n     const [project, setProject] = useState({\n         title: \"\",\n         client: \"\",\n         description: \"\",\n         invoice: \"\",\n         rate: \"\",\n         status: \"\"\n     });\n\n     useEffect(() => {\n         projectsServices.get(params[params.length-1]).then(res => setProject(res.data));\n     },[]);\n \n     return (\n         <div className=\"page-container\">\n             <div className=\"page-header-container\">\n                 <PageHeader title=\"View Project\" />\n             </div>\n             <div className=\"page-content-container\">\n                 <div className=\"page-content\">\n                 <Row>\n                    <Col className=\"text-right\">\n                        <Button className=\"btn primary-button\" onClick={cancel}>\n                            <i className=\"fas fa-times\"></i> Close\n                        </Button>\n                    </Col>\n                </Row>\n                <br/>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"8\">\n                            <Table bordered hover>\n                                <tbody>\n                                <tr>\n                                    <td>Project Title:</td>\n                                    <td>{project.title}</td>\n                                </tr>\n                                <tr>\n                                    <td>Client Name:</td>\n                                    <td>{project.client}</td>\n                                </tr>\n                                <tr>\n                                    <td>Description:</td>\n                                    <td>{project.description}</td>\n                                </tr>\n                                <tr>\n                                    <td>Hourly Rates:</td>\n                                    <td>{project.rate}</td>\n                                </tr>\n                                <tr>\n                                    <td>Invoice Duration:</td>\n                                    <td>{project.invoice}</td>\n                                </tr>\n                                <tr>\n                                    <td>Project Status:</td>\n                                    <td>{project.status}</td>\n                                </tr>\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                 </div>\n             </div>\n         </div>\n     );\n }\n \n export default ViewProject;","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Add Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { curl_init } from 'react';\nimport { curl_getinfo } from 'react';\nimport { CURLINFO_HTTP_CODE } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport clientService from \"../../services/clientService\"\n\nexport class AddClient extends Component {\n\n    //constructor for props\n    constructor(props) {\n        super(props)\n        this.state = {\n            clientName: \"\",\n            clientNameError: \"\",\n            organizationName: \"\",\n            organizationNameError: \"\",\n            contactNo: \"\",\n            contactNoError: \"\",\n            websiteName: \"\",\n            websiteNameError: \"\",\n            linkedInProfile: \"\",\n            linkedInProfileError: \"\",\n            emailId: \"\",\n            emailIdError: \"\",\n            street: \"\",\n            streetError: \"\",\n            businessDescription: \"\",\n            postalCode: \"\",\n            PostalCodeError: \"\",\n            meetingPlatform: \"\",\n            meetingPlatformError: \"\",\n            country: \"\",\n            region: \"\",\n            userId: props.location.userId\n        }\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    selectCountry(val) {\n        this.setState({ country: val });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    selectRegion(val) {\n        this.setState({ region: val });\n    }\n\n    /**\n     * validate client name is null or not\n     * @param {*} event\n     */\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.clientName) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ clientNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate organization is null or not\n     * @param {*} event\n     */\n    validateOrganization = (event) => {\n        let isValid = true;\n        if (!this.state.organizationName) {\n            this.setState({ organizationNameError: \"Organization Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ organizationNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate contactNo with numbers and contact no is null or not\n     * @param {*} event\n     */\n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n            })\n        }\n        else {\n            this.setState({ contactNoError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate website name with pattern and website is null or not\n     * @param {*} event\n     */\n    validateWebsiteName = (event) => {\n        let isValid = true;\n\n        if(this.state.websiteName){\n            const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n            const result = pattern.test(this.state.websiteName);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    websiteNameError: \"Provided website is invalid: should contain domain name\"\n                })\n            }\n            else {\n                this.setState({ websiteNameError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate email id with pattern\n     * @param {*} event\n     */\n    validateEmailId = (event) => {\n        let isValid = true;\n        if (!this.state.emailId) {\n            this.setState({ emailIdError: \"Email Id is required\" })\n            isValid = false;\n        }\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n        const result = pattern.test(this.state.emailId);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                emailIdError: \"Provided email Id is invalid: should contain '@' and domain name\"\n            })\n        } else {\n            this.setState({ emailIdError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate linkedin profile with pattern\n     * @param {*} event\n     */\n    validateLinkedInProfile = (event) => {\n\n        let isValid = true;\n        if(this.state.linkedInProfile){\n\n            const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            const result = pattern.test(this.state.linkedInProfile);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    linkedInProfileError: \"LinkedIn Profile is not valid\"\n                })\n            } else {\n                this.setState({ linkedInProfileError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate street with pattern\n     * @param {*} event\n     */\n    validateStreet = (event) => {\n        let isValid = true;\n        if(this.state.street){\n\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.street);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    streetError: \"Street should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ streetError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate postal code with pattern\n     * @param {*} event\n     */\n    validatePostalcode = (event) => {\n        let isValid = true;\n        if(this.state.postalCode){\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.postalCode);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    PostalCodeError: \"Postal code should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ PostalCodeError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate meeting platform with pattern\n     * @param {*} event\n     */\n    validateMeetingPlatform = (event) => {\n        let isValid = true;\n        if (!this.state.meetingPlatform) {\n            this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ meetingPlatformError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate form\n     * @param {*} event\n     */\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateOrganization()) {\n            isValid = false;\n        }\n        if (!this.validateContactNo()) {\n            isValid = false;\n        }\n        if (!this.validateWebsiteName()) {\n            isValid = false;\n        }\n        if (!this.validateEmailId()) {\n            isValid = false;\n        }\n        if (!this.validateLinkedInProfile()) {\n            isValid = false;\n        }\n        if (!this.validateStreet()) {\n            isValid = false;\n        }\n        if (!this.validatePostalcode()) {\n            isValid = false;\n        }\n        if (!this.validateMeetingPlatform()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    /**\n     * On submit new client will be added and the api call will be made\n     * @param {*} event\n     */\n    onSubmit = (event) => {\n        event.preventDefault();\n        clientService.addNewClient(this.state).then((response) => {\n            if (this.validateForm()) {\n                alert(\"Details Successfully Saved!!\");\n            }\n            this.props.history.push({ pathname: '/clients' });\n        }).catch((error) => {\n            alert(\"Duplicate details found!!\");\n            console.log(error)\n        })\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event\n     */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"New Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.ClientName} onChange={this.onValueChange}\n                                                              onBlur={this.validateClientName}\n                                                              isInvalid={this.state.clientNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.OrganizationName} onChange={this.onValueChange}\n                                                              onBlur={this.validateOrganization}\n                                                              isInvalid={this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.ContactNo} onChange={this.onValueChange}\n                                                              onBlur={this.validateContactNo}\n                                                              isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.WebsiteName} onChange={this.onValueChange}\n                                                              onBlur={this.validateWebsiteName}\n                                                              isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.EmailId} onChange={this.onValueChange}\n                                                              onBlur={this.validateEmailId}\n                                                              isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"linkedInProfile\" placeholder=\"Enter Linkedin Profile\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                              onBlur={this.validateLinkedInProfile}\n                                                              isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.Street} onChange={this.onValueChange}\n                                                              onBlur={this.validateStreet}\n                                                              isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.BusinessDescription} onChange={this.onValueChange}\n                                                              onBlur={this.validatebusinessDescription}\n                                                />\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.PostalCode} onChange={this.onValueChange}\n                                                              onBlur={this.validatePostalcode}\n                                                              isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.MeetingPlatform} onChange={this.onValueChange}\n                                                              onBlur={this.validateMeetingPlatform}\n                                                              isInvalid={this.state.meetingPlatformError}>\n                                                    <option>Select Project</option>\n                                                    <option value=\"Google Meet\">Google Meet</option>\n                                                    <option value=\"Skype\">Skype</option>\n                                                    <option value=\"Zoom\">Zoom</option>\n                                                    <option value=\"In Person\">In person</option>\n                                                </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Group>\n                                                        <div className=\"country\">\n                                                            <Form.Label className=\"required\">Country </Form.Label>\n                                                            <CountryDropdown className=\"form-control\" as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country}\n                                                                             onChange={(value) => this.selectCountry(value)}\n                                                            />\n                                                        </div>\n                                                    </Form.Group>\n                                                </Col>\n                                                <Col>\n                                                    <Form.Group>\n                                                        <div className=\"region\">\n                                                            <Form.Label>Region </Form.Label>\n                                                            <RegionDropdown className=\"form-control\"\n                                                                            country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                                            as=\"select\" name=\"region\" value={this.state.region} onChange={(value) => this.selectRegion(value)}>\n                                                            </RegionDropdown>\n                                                        </div>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col></Col>\n                                    </Row>\n\n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"btn primary-button\" onClick={this.onSubmit}>\n                                            Submit\n                                        </Button>\n                                        <Button className=\"btn secondary-button\" onClick={this.onClickBack}>\n                                            Back\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AddClient);","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Clients details.\n */\n\nimport React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport \"../styles/Clients.scss\";\nimport './Clients/AddClient'\nimport { Component } from \"react\";\nimport clientService from \"../services/clientService\"\n\n\nexport class Clients extends Component {\n  \n  //constructor for props\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : [],\n      ClientName: \"\",\n      Organization: \"\",\n      ContactNo: \"\",\n      Emailid: \"\"\n    }\n    this.handleNewClient = this.handleNewClient.bind(this);\n\n    this.columns = [\n      { Header: 'Client Name', accessor: 'ClientName' },\n      { Header: 'Contact No', accessor: 'ContactNo' },\n      { Header: 'Email', accessor: 'Emailid' },\n      { Header: 'Website', accessor: 'Website' },\n      {\n        Header: 'Action', accessor: 'row',\n        Cell: ({ row }) => (\n          \n          <div className=\"generate-button-container\">\n            <Button className=\"secondary-button\" align=\"right\" onClick={() => this.viewDetails(row)} >View</Button>\n            <Button className=\"secondary-button\" align=\"right\"  onClick={() => this.editDetails(row)} >Edit</Button>\n            <Button className=\"delete-button\" align=\"right\"  onClick={() => this.deleteDetails(row)} >Delete</Button>\n          </div>\n        )\n      }]; \n\n      this.userId = localStorage.getItem(\"user_id\")\n  }\n\n  /**\n     * On mount, set the values of table.\n     * @param {*} event \n  */\n  componentDidMount() {\n    \n    clientService.getAllClients(this.userId).then((response) => {\n        if (response.status == 200) {\n            this.setData(response.data);\n            let newDetails = [];\n            response.data.forEach(element => {\n              let row = {}\n              row.ClientName = element.ClientName;\n              row.ContactNo = element.ContactNo;\n              row.Emailid = element.Email;\n              row.Website = element.Website;\n              newDetails.push(row)\n            });\n            this.setState({\n              data: newDetails\n            })\n        }\n    }).catch((error) => {\n        console.log(error)\n    })\n\n  }\n\n  /**\n     * On click of view details select view client API call\n     * @param {*} event \n  */\n  viewDetails = (row) => {\n\n    clientService.viewOneClient(row.original).then((response) => {  \n        this.props.history.push({ pathname: '/ViewClient' }, {\n          state: response.data\n        })\n    }).catch((error) => {\n        console.log(error)\n    })\n  }\n\n   /**\n     * On click of edit details edit client API call\n     * @param {*} event \n  */\n  editDetails = (row) => {\n    clientService.viewOneClient(row.original).then((response) => {  \n        this.props.history.push({ pathname: '/EditClient' }, {\n          state: response.data\n        })\n    }).catch((error) => {\n        console.log(error)\n    })\n  };\n\n  /**\n     * On click of delete details delete client API call and set table\n     * @param {*} event \n  */\n  deleteDetails = (row) => {\n    clientService.deleteClient(row.original).then((response) => {\n          alert(\"Successfully deleted entry!!\");\n          clientService.getAllClients(this.userId).then((response) => {\n              if (response.status == 200) {\n                  this.setData(response.data);\n                  let newdetails = [];\n                  response.data.forEach(element => {\n                    let row = {}\n                    row.ClientName = element.ClientName;\n                    row.ContactNo = element.ContactNo;\n                    row.Emailid = element.Email;\n                    row.Website = element.Website;\n                    newdetails.push(row)\n                  });\n                  this.setState({data: newdetails})\n                }\n          }).catch((error) => {\n              console.log(error)\n          })\n      }).catch((error) => {\n          console.log(error)\n      })\n  }\n\n  setData = (response) => {\n    this.data = []\n  }\n\n  /**\n     * On click of handle new client add new client detail redirected\n     * @param {*} event \n  */\n  handleNewClient = (e) => {\n    e.preventDefault();\n    this.props.history.push({ pathname: '/clients/add', \n                              userId: this.userId});\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-container clients-container\">\n          <div className=\"page-header-container\">\n            <PageHeader title=\"Clients\" subtitle=\"\" />\n          </div>\n          <div className=\"page-content-container\">\n            <div className=\"page-content\">\n              <Row className=\"button-container\">\n                <Col>\n                  <Button className=\"primary-button\" type=\"button\" align=\"right\" onClick={this.handleNewClient} >Add New</Button>\n                </Col>\n              </Row>\n              <Row className=\"data-table-container\">\n                <Col>\n                  <Datatable columns={this.columns} data={this.state.data} />\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Clients);\n","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Edit Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport clientService from \"../../services/clientService\";\n\nexport class EditClient extends Component\n{\n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            clientId: props.history.location.state.state.ClientId,\n            clientName: props.history.location.state.state.ClientName,\n            clientNameError: \"\",\n            organizationName: props.history.location.state.state.Organization,\n            organizationNameError: \"\",\n            contactNo: props.history.location.state.state.ContactNo,\n            contactNoError: \"\",\n            websiteName: props.history.location.state.state.Website,\n            websiteNameError: \"\",\n            emailId: props.history.location.state.state.Email,\n            emailIdError: \"\",\n            linkedInProfile: props.history.location.state.state.LinkedInProfile,\n            linkedInProfileError: \"\",\n            street: props.history.location.state.state.Street,\n            streetError: \"\",\n            businessDescription: props.history.location.state.state.BusinessDescription,\n            postalCode: props.history.location.state.state.PostalCode,\n            PostalCodeError: \"\",\n            meetingPlatform: props.history.location.state.state.MeetingPlatform,\n            meetingPlatformError: \"\",\n            country: props.history.location.state.state.Country,\n            region: props.history.location.state.state.Region\n        }\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    selectCountry (name, val) {\n        this.setState({  name: val });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    selectRegion (val) {\n        this.setState({ name: val });\n    }\n\n    /**\n     * validate client name is null or not\n     * @param {*} event\n     */\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.clientName) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ clientNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate organization is null or not\n     * @param {*} event\n     */\n    validateOrganization = (event) => {\n        let isValid = true;\n        if (!this.state.organizationName) {\n            this.setState({ organizationNameError: \"Organization Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ organizationNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate contactNo with numbers and contact no is null or not\n     * @param {*} event\n     */\n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n            })\n        }\n        else {\n            this.setState({ contactNoError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate website name with pattern and website is null or not\n     * @param {*} event\n     */\n    validateWebsiteName = (event) => {\n        let isValid = true;\n\n        if(this.state.websiteName){\n            const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n            const result = pattern.test(this.state.websiteName);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    websiteNameError: \"Provided website is invalid: should contain domain name\"\n                })\n            }\n            else {\n                this.setState({ websiteNameError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate email id with pattern\n     * @param {*} event\n     */\n    validateEmailId = (event) => {\n        let isValid = true;\n        if (!this.state.emailId) {\n            this.setState({ emailIdError: \"Email Id is required\" })\n            isValid = false;\n        }\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n        const result = pattern.test(this.state.emailId);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                emailIdError: \"Provided email Id is invalid: should contain '@' and domain name\"\n            })\n        } else {\n            this.setState({ emailIdError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate linkedin profile with pattern\n     * @param {*} event\n     */\n    validateLinkedInProfile = (event) => {\n\n        let isValid = true;\n        if(this.state.linkedInProfile){\n\n            const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            const result = pattern.test(this.state.linkedInProfile);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    linkedInProfileError: \"LinkedIn Profile is not valid\"\n                })\n            } else {\n                this.setState({ linkedInProfileError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate street with pattern\n     * @param {*} event\n     */\n    validateStreet = (event) => {\n        let isValid = true;\n        if(this.state.street){\n\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.street);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    streetError: \"Street should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ streetError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate postal code with pattern\n     * @param {*} event\n     */\n    validatePostalcode = (event) => {\n        let isValid = true;\n        if(this.state.postalCode){\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.postalCode);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    PostalCodeError: \"Postal code should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ PostalCodeError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate meeting platform with pattern\n     * @param {*} event\n     */\n    validateMeetingPlatform = (event) => {\n        let isValid = true;\n        if (!this.state.meetingPlatform) {\n            this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ meetingPlatformError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate form\n     * @param {*} event\n     */\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateOrganization()) {\n            isValid = false;\n        }\n        if (!this.validateContactNo()) {\n            isValid = false;\n        }\n        if (!this.validateWebsiteName()) {\n            isValid = false;\n        }\n        if (!this.validateEmailId()) {\n            isValid = false;\n        }\n        if (!this.validateLinkedInProfile()) {\n            isValid = false;\n        }\n        if (!this.validateStreet()) {\n            isValid = false;\n        }\n        if (!this.validatePostalcode()) {\n            isValid = false;\n        }\n        if (!this.validateMeetingPlatform()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    /**\n     * On Update client will be updated and the api call will be made\n     * @param {*} event\n     */\n    onUpdate = (event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n            clientService.editClient(this.state).then((response) => {\n            }).catch((error) => {\n                console.log(error)\n            })\n            alert('Successfully updated details!!');\n            this.props.history.push({ pathname: '/clients' });\n        }\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event\n     */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Edit Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.clientName} onChange={this.onValueChange}\n                                                              onBlur={this.validateClientName}\n                                                              isInvalid = {this.state.clientNameError}/>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.organizationName} onChange={this.onValueChange}\n                                                              onBlur={this.validateOrganization}\n                                                              isInvalid = {this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.contactNo} onChange={this.onValueChange}\n                                                              onBlur={this.validateContactNo}\n                                                              isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.websiteName} onChange={this.onValueChange}\n                                                              onBlur={this.validateWebsiteName}\n                                                              isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.emailId} onChange={this.onValueChange}\n                                                              onBlur={this.validateEmailId}\n                                                              isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"linkedInProfile\" placeholder=\"Enter LinkedIn Profile\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                              onBlur={this.validateLinkedInProfile}\n                                                              isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.street} onChange={this.onValueChange}\n                                                              onBlur={this.validateStreet}\n                                                              isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.businessDescription} onChange={this.onValueChange}\n                                                              onBlur={this.validatebusinessDescription}\n                                                />\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.postalCode} onChange={this.onValueChange}\n                                                              onBlur={this.validatePostalcode}\n                                                              isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.meetingPlatform} onChange={this.onValueChange}\n                                                              onBlur={this.validateMeetingPlatform}\n                                                              isInvalid={this.state.meetingPlatformError}>\n                                                    <option>Select Project</option>\n                                                    <option value=\"Google Meet\">Google Meet</option>\n                                                    <option value=\"Skype\">Skype</option>\n                                                    <option value=\"Zoom\">Zoom</option>\n                                                    <option value=\"In person\">In person</option>\n                                                </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Row>\n                                                    <Col>\n                                                        <div className=\"country\">\n                                                            <Form.Label className=\"required\">Country </Form.Label>\n                                                            <CountryDropdown className=\"form-control\" as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country}\n                                                                             onChange={(value) => this.selectCountry(value)}\n                                                            />\n                                                        </div>\n                                                    </Col>\n                                                    <Col>\n                                                        <div className=\"region\">\n                                                            <Form.Label>Region </Form.Label>\n                                                            <RegionDropdown className=\"form-control\"\n                                                                country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                                as=\"select\" name=\"region\" value={this.state.region} onChange={(value) => this.selectRegion(value)}>\n                                                            </RegionDropdown>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col/>\n                                    </Row>\n\n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"btn primary-button\" onClick={this.onUpdate}>\n                                            Update\n                                        </Button>\n                                        <Button className=\"btn secondary-button\" onClick={this.onClickBack}>\n                                            Back\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditClient);","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * view Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport {Table} from \"react-bootstrap\";\n\nexport class ViewClient extends Component {\n\n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ClientId: props.history.location.state.state.ClientId,\n            clientName: props.history.location.state.state.ClientName,\n            organizationName: props.history.location.state.state.Organization,\n            contactNo: props.history.location.state.state.ContactNo,\n            websiteName: props.history.location.state.state.Website,\n            linkedInProfile: props.history.location.state.state.LinkedInProfile,\n            emailId: props.history.location.state.state.Email,\n            street: props.history.location.state.state.Street,\n            businessDescription: props.history.location.state.state.BusinessDescription,\n            postalCode: props.history.location.state.state.PostalCode,\n            meetingPlatform: props.history.location.state.state.MeetingPlatform,\n            country: props.history.location.state.state.Country,\n            region: props.history.location.state.state.Region\n        }\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event\n     */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"View Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row>\n                            <Col className=\"text-right\">\n                                <Button className=\"btn primary-button\" onClick={this.onClickBack}>\n                                    <i className=\"fas fa-times\"></i> Close\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br/>\n                        <Row className=\"justify-content-center\">\n                            <Col md=\"8\">\n                                <Table bordered hover>\n                                    <tbody>\n                                    <tr>\n                                        <td>Client Name:</td>\n                                        <td>{this.state.clientName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact No:</td>\n                                        <td>{this.state.contactNo}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Email:</td>\n                                        <td>{this.state.emailId}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Street:</td>\n                                        <td>{this.state.street}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Postal Code:</td>\n                                        <td>{this.state.postalCode}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Region:</td>\n                                        <td>{this.state.region}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Country:</td>\n                                        <td>{this.state.country}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Organization:</td>\n                                        <td>{this.state.organizationName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Website:</td>\n                                        <td>{this.state.websiteName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>LinkedIn Profile:</td>\n                                        <td>{this.state.linkedInProfile}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Description:</td>\n                                        <td>{this.state.businessDescription}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Meeting Platform:</td>\n                                        <td>{this.state.meetingPlatform}</td>\n                                    </tr>\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ViewClient);","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n *  Services Page for Testimonials.\n */\n\nimport axios from \"axios\";\n\nexport class testimonialServices{\n\n    // list of all testimonials\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/testimonials\",object);\n        return result.data;\n    };\n\n    // add data\n    async add(data){\n        const result = await axios.post(\"/api/testimonials/add\",data);\n        return result.data;\n    };\n\n    // update data by id\n    async update(data){\n        const result = await axios.put(\"/api/testimonials/update/\"+data.id,data);\n        return result.data;\n    };\n\n    // remove data by id\n    async delete(deleteData) {\n        const result = await axios.post(\"/api/testimonials/remove\", deleteData);\n        return result.data;\n     }\n}\n\nexport default new testimonialServices()","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n * Frontend Page for Testimonials.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Datatable from '../components/Datatable';\nimport emailjs from 'emailjs-com';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport projectServices from '../services/projectsServices.js';\nimport clientServices from '../services/clientService.js';\nimport testimonialServices from '../services/testimonialServices.js';\n// var dateFormat = require(\"dateformat\");\n\nconst Testimonials = () => {\n\n    /**\n     * creting a column for a datatable to display testimonials\n     */\n    const columns = [\n        { Header: 'Project', accessor: 'project' },\n        { Header: 'Client', accessor: 'client' },\n        { Header: 'Feedback', accessor: 'feedback' },\n        // { Header: 'Requested on', accessor: row => dateFormat(row.requestedOn, \"dd-mm-yyyy, HH:MM:ss\") },\n\n        {\n            // creating an action button containig entire row details\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (\n                <div className=\"action\">\n                    <Button className=\"delete-button\"  onClick= {() => deleteTestimonial(row)} >Delete</Button>\n                </div>\n            )\n        }\n    ];\n\n    /**\n     * fatching list of project details through an api call\n     * using project services's list functionality\n     */\n    const [project, setProjects] = useState([]);\n    useEffect(() => {\n        projectServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setProjects(res.data));\n    },[]);\n\n    /**\n     * fatching list of clients details through api call\n     * using clientServices's list functionality\n     */\n    const [client, setClient] = useState([]);\n    useEffect(() => {\n        clientServices.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClient(res.data));\n    },[]);\n\n    /**\n     * fatching list of Testimonials details through api call\n     * using testimonialService's list functionality\n     */    const [testimonial, setTestimonial] = useState([]);\n    useEffect(() => {\n        testimonialServices.list({userId: localStorage.getItem('user_id')}).then(res => setTestimonial(res.data));\n    },[]);\n\n    /**\n     * Constant containing mailing information to send to\n     */\n    const [mailInfo, setMailInfo] = useState({\n        project: \"\",\n        client: \"\",\n        message: \"\",\n        id: \"\",\n        userId: localStorage.getItem('user_id')\n    });\n\n    /**\n     * Storing the values into the database using testimonialService's add functionality\n     * @param {*} e\n     * the response containig automated genrated id is fatched and stored into mailInfo's id parameter\n     */\n    const storeData = (e) => {\n        e.preventDefault();\n        setLgShow(false);\n        testimonialServices.add(mailInfo).then(response => {\n            mailInfo.id = response.result._id\n        })\n\n        sendEmail();\n    }\n\n    /**\n     * Method to send email on click event.\n     * @param {*} data\n     * The emails can be sent on specif id's using this functionalities.\n     */\n    function sendEmail() {\n\n        const Form_Link = \"http://localhost:3001/testimonials/requestTestimonials/\" + mailInfo.id;\n\n        // Mailing details\n        var mailParams = {\n\n            //Mail Sender Details\n            freelancerName: 'Freelancer',\n            freelancerMail: 'deepatel1607@gmail.com',\n\n            //Mail Reciver Details\n            clientName: 'Client',\n            clientMail: 'dee16798ppatel@gmail.com',\n\n            //Attachment Messages\n            message: mailInfo.message,\n            link: Form_Link\n        };\n\n        // calling emailJS functionality with emailJS Credentials\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n            .then(function (response) {\n                alert(\"Email Sent\");\n            }, function (error) {\n                alert(\"Error: \" + error);\n                console.log(error);\n            });\n    }\n\n    /**\n     * Functionality to delete testimonials with a specific id of testimonial\n     * @param {*} row\n     */\n    const deleteTestimonial = (row) => {\n        if (window.confirm(\"Are you sure?\")) {\n            testimonialServices.delete(row.original).then(res => alert(res.message));\n            testimonialServices.list({userId: localStorage.getItem('user_id')}).then(res => setTestimonial(res.data));\n        }\n    };\n\n    /**\n     * onChange of the values store the values into mailInfo Parameters\n     * @param {*} e\n     * parameter e containig the values is used to fatch form element on change\n     */\n    const handleChange = (e) => {\n        let newRequest = {...mailInfo, [e.target.name]: e.target.value};\n        setMailInfo(newRequest);\n    };\n\n    // Model display constant to display model when true\n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <div className=\"page-container add-testimonial-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonials\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col xs={12}>\n                            <div className=\"col-md-2 button-container\">\n                                <div className=\"row my-add-btn\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-7\">\n                                        <div className=\"add-testimonial-container\">\n                                            <div className=\"generate-button-container\">\n                                                <button className=\"primary-button\" type=\"button\" align=\"right\" onClick={() => setLgShow(true)}> Request</button>\n                                            </div>\n                                        </div>\n                                        <Modal\n                                            size=\"lg\"\n                                            show={lgShow}\n                                            onHide={() => setLgShow(false)}\n                                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                                        >\n                                            <Modal.Header closeButton>\n                                                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                                                    Request Testimonial\n                                                </Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                <Form id=\"contact-form\">\n\n                                                    <input type=\"hidden\" name=\"freelancerName\" id=\"freelancerName\" value=\"Freelancer_Deep\" />\n                                                    <input type=\"hidden\" name=\"freelancerMail\" id=\"freelancerMail\" value=\"deepatel1607@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"clientName\" id=\"clientName\" value=\"Client_Deep\" />\n                                                    <input type=\"hidden\" name=\"clientMail\" id=\"clientMail\" value=\"dee16798ppatel@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"message\" id=\"message\" value=\"From hidden\" />\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Client</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"client\"\n                                                                      onChange={(e) => handleChange(e)}\n                                                        >\n                                                            <option>Select Client</option>\n                                                            {client.length && client.map(function(cli,index){\n                                                                return <option key={index} value={cli.ClientName}>{cli.ClientName}</option>\n                                                            })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Project</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"project\"\n                                                                      onChange={(e) => handleChange(e)}\n                                                        >\n                                                            <option>Select Project</option>\n                                                            {project.length && project.filter(proj => proj.client && proj.client.includes(mailInfo.client))\n                                                                .map(function(proj,index){\n                                                                    return <option key={index} value={proj.title}>{proj.title}</option>\n                                                                })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Description Message</Form.Label>\n                                                        <Form.Control as=\"textarea\" name=\"message\" rows={3} id=\"message\"\n                                                                      onChange={(e) => handleChange(e)}\n                                                        />\n                                                    </Form.Group>\n                                                    <Button variant=\"primary\" type=\"submit\" id=\"button\" value=\"Send\" onClick={storeData} >\n                                                        Send\n                                                    </Button>\n                                                </Form>\n                                            </Modal.Body>\n                                        </Modal>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col xs={12}>\n                            <Datatable columns={columns} data={testimonial} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Testimonials\n","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n * Frontend Page for Request Testimonials.\n */\n\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport testimonialServices from '../services/testimonialServices.js';\nimport { useParams } from 'react-router-dom';\n\n/**\n * Request testimonial page containing the id of specific testimonial send to client via mail\n * @param {*} prop \n * @returns \n */\nconst RequestTestimonial = (prop) => {\n\n    const param = useParams();\n\n    // feedback Details\n    const [feedback, setFeedback] = useState({\n        \n        feedback: \"\",\n        id : param.id\n    });\n\n    /**\n     * On change stores new feedback details into the feedback variable\n     * @param {*} e \n     * Form elements are stored into the feedback on change\n     */\n    const handleChange = (e) => {\n        let newFeedback = {...feedback, [e.target.name]: e.target.value};\n        setFeedback(newFeedback);\n    };\n\n    /**\n     * Storing the values into the database using testimonialService's update functionality\n     * @param {*} e \n     * The data on specific id is updated using this functionality\n     */    \n    const storeData = (e) => {\n        e.preventDefault();\n        testimonialServices.update(feedback)\n    }\n\n    return (\n        <div>\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonial Request\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div>\n            <Row>    \n                <Col md = {5}></Col>\n                <Col md = {10}></Col>\n            </Row>\n            </div>\n            <Row>\n                    <Col md = {5}></Col>\n                    <Col md = {10}>\n                    <Form className=\"feedback-form\">\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group>\n                                        <Form.Label className=\"required form-label\">Feedback: </Form.Label>\n                                        <Form.Control as=\"textarea\" name=\"feedback\" rows={5} id=\"feedback\" placeholder=\"Please provide Feedback...\" \n                                            onChange={(e) => handleChange(e)} \n                                        />\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                <Button variant=\"primary\" type=\"submit\" id=\"feedbackSubmit\" onClick={storeData}>   \n                                    Submit\n                                </Button>\n                                </div>\n                                <div className=\"col-md-3\"></div>\n\n                    </Form>\n                    </Col>\n                    <Col md = {1}></Col>\n                </Row>\n\n            </div>\n        </div>    \n    )\n}\n\nexport default RequestTestimonial\n","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Management component.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/InvoiceManagement.scss\";\nimport invoiceServices from \"../services/invoiceServices\";\nimport \"../styles/Invoices.scss\";\nimport Moment from 'moment';\n\nexport class Invoices extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: localStorage.getItem(\"user_id\"),\n            checkbox: 'true',\n            delete: 'false',\n            columns: [\n                { Header: 'Invoice Number', accessor: 'invoicenumber' },\n                { Header: 'Generated Date', accessor: 'generateddate' },\n                { Header: 'From Date', accessor: 'fromdate' },\n                { Header: 'To Date', accessor: 'todate' },\n                { Header: 'Due Date', accessor: 'duedate' },\n                { Header: 'Client Name', accessor: 'clientname' },\n                { Header: 'Project Name', accessor: 'projectname' },\n                { Header: 'Payment Status', accessor: 'paymentstatus' },\n                {\n                    Header: 'Action', accessor: 'button1',\n                    Cell: ({ row }) => (\n                        <div>\n                            <Button className=\"secondary-button\" onClick={() => this.editInvoice(row)}>Edit</Button>\n                            <Button className=\"secondary-button\" onClick={() => this.viewInvoice(row)}>View</Button>\n                            <Button className=\"delete-button\" onClick={() => this.deleteInvoice(row)}>Delete</Button>\n                        </div>)\n                },\n            ],\n            data: []\n        }\n    }\n\n    //fetch list of all the generated invoices\n    getAllInvoices() {\n\n        invoiceServices.getAllInvoices(this.state).then((response) => {\n            if (response.status == 200) {\n                let invoiceDetails = [];\n                response.data.result.forEach(element => {\n\n                    let row = {}\n                    row.invoicenumber = element._id;\n                    row.generateddate = Moment(element.generatedDate).format('YYYY-MM-DD');\n                    row.fromdate = Moment(element.startDate).format('YYYY-MM-DD');\n                    row.todate = Moment(element.taskendDate).format('YYYY-MM-DD');\n                    row.duedate = Moment(element.dueDate).format('YYYY-MM-DD');\n                    row.clientname = element.clientName;\n                    row.projectname = element.projectName;\n                    row.paymentstatus = element.paymentStatus;\n                    row.startDate = Moment(element.startDate).format('YYYY-MM-DD');\n\n                    invoiceDetails.push(row)\n\n                });\n                if (invoiceDetails.length != 0)\n                    this.setState({\n                        data: invoiceDetails\n                    })\n\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    componentDidMount() {\n        this.getAllInvoices()\n    }\n\n    //Edit invoice\n    editInvoice = (row) => {\n        this.props.history.push({ pathname: '/editinvoice' }, {\n            state: row.original.invoicenumber\n        })\n    }\n    //open InvoiceGeneration.js in read-only mode to view generated invoice details.\n    viewInvoice = (row) => {\n\n        this.props.history.push({ pathname: '/invoices/generate' }, {\n            state: row.original.invoicenumber\n        })\n    }\n\n    //delete invoice\n    deleteInvoice = (row) => {\n        invoiceServices.deleteinvoice(row.original).then((response) => {\n            if (response) {\n                this.setState({ delete: 'true' })\n                alert(\"Invoice Deleted\")\n                this.getAllInvoices()\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    render() {\n        return (\n\n            <div className=\"page-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Invoice Management\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row>\n                        <Col className=\"text-right mb-3\">\n                            <a href=\"/invoices/generate\" title=\"Add Project\" className=\"btn primary-button\">\n                                Generate Invoice\n                            </a>\n                        </Col>\n                        </Row>\n                        <Datatable columns={this.state.columns} data={this.state.data} allowCSV=\"false\" />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Invoices)","/**\n * Author: Bansi Mehta\n * Created On: 20201-07-20\n * Service containing api calls for TO-DO List.\n */\nimport axios from \"axios\"\nexport class todoListService {\n    async getAllTasks(data) {\n        let object = {}\n        object['currentDate'] = data.currentDate\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/todoLists/getList\", object);\n        return result;\n    }\n\n    async markTaskAsDone(id) {\n        const result = await axios.put(\"/api/todoLists/markAsDone\", { \"id\": id });\n        return result;\n    }\n\n    async deleteTask(id) {\n        const result = await axios.delete(\"/api/todoLists/deleteItem/\" + id);\n        return result;\n    }\n\n    async saveTask(saveData) {\n        const result = await axios.post(\"/api/todoLists/saveItem\", saveData);\n        return result;\n    }\n}\n\nexport default new todoListService()","/**\n * Author: Bansi Mehta.\n * Created On: 2021-06-07\n * Todo list component.\n */\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { Container, Col, Row, Button } from 'react-bootstrap'\nimport { Card } from 'react-bootstrap';\nimport moment from \"moment\";\nimport axios from 'axios'\nimport \"../styles/TodoList.scss\";\nimport PageHeader from \"../components/PageHeader\";\nimport todoListService from \"../services/todoListService\";\nexport class TodoList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        const currentDate = moment().format('YYYY-MM-DD')\n        this.state = {\n            completeTasks: [],\n            incompleteTasks: [],\n            date: currentDate,\n            newTask: ''\n        }\n\n        this.item = {\n            title: '',\n            status: false,\n            date: currentDate\n        }\n        this.userId = localStorage.getItem(\"user_id\")\n    }\n\n    componentDidMount() {\n        this.getAllData(this.state.date)\n    }\n\n    /**\n     * On value change of a control, set it in state.\n     * @param {*} event \n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * Get all the tasks based on date.\n     * Date format: \"YYYY-MM-DD\".\n     * Divide the tasks received into groups: complete and incomplete to display.\n     * @param {*} date \n     */\n    getAllData(date) {\n        todoListService.getAllTasks({\"currentDate\": date, \"userId\": this.userId}).then(response => {\n            if (response.status === 200) {\n                if (response.data && response.data.result && response.data.result.length) {\n                    let completeTask = []\n                    let incompleteTask = []\n                    response.data.result.forEach(row => {\n                        if (row && row.status == true) {\n                            completeTask.push(row)\n                        } else {\n                            incompleteTask.push(row)\n                        }\n                    })\n                    this.setState({ completeTasks: completeTask })\n                    this.setState({ incompleteTasks: incompleteTask })\n                } else {\n                    this.setState({ completeTasks: [] })\n                    this.setState({ incompleteTasks: [] })\n                }\n            }\n        })\n    }\n\n    /**\n     * Mark the task item as complete based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemComplete(rowData) {\n        todoListService.markTaskAsDone(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date)\n                alert(\"Task completed successfully\");\n            }\n        })\n    }\n\n    /**\n     * Delete the task based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemDelete(rowData) {\n        todoListService.deleteTask(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date);\n                alert(\"Task deleted successfully\");\n            }\n        })\n    }\n\n    /**\n     * Add new task.\n     * Refresh the list if successful.\n     * @param {*} event \n     */\n    saveItem = (event) => {\n        event.preventDefault()\n        if (this.state.newTask) {\n            let saveData = {\n                title: this.state.newTask,\n                date: this.state.date,\n                userId: this.userId\n            }\n            todoListService.saveTask(saveData).then(response => {\n                if (response.status == 200) {\n                    this.setState({ newTask: '' })\n                    this.getAllData(this.state.date)\n                    alert(\"Task added successfully\");\n                }\n            })\n        } else {\n            alert(\"Cannot enter empty task\")\n        }\n        \n    }\n\n    /**\n     * Date navigation: Get previous date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getPreviousDate = (event) => {\n        let previousDate = moment(this.state.date, 'YYYY-MM-DD').subtract(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: previousDate })\n        this.getAllData(previousDate)\n    }\n\n    /**\n     * Date navigaiton: Get next date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getNextDate = (event) => {\n        let nextDate = moment(this.state.date, 'YYYY-MM-DD').add(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: nextDate })\n        this.getAllData(nextDate)\n    }\n\n    render() {\n        return (\n            <div className=\"page-container to-do-list-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Todo List\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Container className=\"to-do-list-content\">\n                            <Row className=\"date-row\">\n                                <Col className=\"date-control\">\n                                    <span className=\"navigate-date\" onClick={this.getPreviousDate}>\n                                        <i className=\"fas fa-chevron-left\"></i>\n                                    </span>\n                                    <span>\n                                        {this.state.date}\n                                    </span>\n                                    <span className=\"navigate-date\" onClick={this.getNextDate}>\n                                        <i className=\"fas fa-chevron-right\"></i>\n                                    </span>\n                                </Col>\n                            </Row>\n                            <Row className=\"add-row\">\n                                <div className=\"add-text\">\n                                    <input type=\"text\" palceholder=\"Add task\" name=\"newTask\" value={this.state.newTask} onChange={this.onValueChange} className=\"input-control\" />\n                                </div>\n                                <div className=\"add-button\">\n                                    <Button className=\"primary-button add-button\" onClick={this.saveItem}>Add</Button>\n                                </div>\n                            </Row>\n                            <Row className=\"to-do-list-items\">\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.incompleteTasks.map(row => (\n                                            <Card className=\"card-content-incomplete\">\n                                                <Row className=\"card-item\">\n                                                    <Col xs={3} md={2} className=\"card-item-content\">\n                                                        <input type=\"checkbox\" checked={row.status} onClick={() => this.taskItemComplete(row)}></input>\n                                                    </Col>\n                                                    <Col xs={3} md={7} className=\"card-item-content\">\n                                                        <Card.Body>\n                                                            <Card.Title>{row.title}</Card.Title>\n                                                        </Card.Body>\n                                                    </Col>\n                                                    <Col xs={3} md={3} className=\"card-item-content\">\n                                                        <Button className=\"primary-button\" onClick={() => this.taskItemDelete(row)}>Delete</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.completeTasks.map(row => (\n                                            <Card className=\"card-content-complete\">\n                                                <Card.Body>\n                                                    <Card.Title className=\"card-item-completed\">{row.title}</Card.Title>\n                                                </Card.Body>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default withRouter(TodoList);","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-26\n * Services for Calendar Event.\n */\n\n import axios from \"axios\";\n\n export class calendarServices{\n \n    /**\n    * Method to hit the API of getting list of calendar events\n    */\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/calendar\",object);\n        return result.data;\n    };\n\n    /**\n    * Method to hit the API of adding calendar event in a list\n    */\n     async add(data){\n        const result = await axios.post(\"/api/calendar/add\",data);\n        return result.data;\n     };\n }\n \n export default new calendarServices()","import React, { useEffect, useState } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Button, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport calendarServices from \"../services/calendarServices\";\nimport moment from 'moment';\nimport \"../styles/Calendar.scss\";\n\nexport default function Calendar(){\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        calendarServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => {\n            let newEvents = [...events]\n            for (let i = 0; i < res.data.length; i++) {\n                const dateTime = moment(`${res.data[i].date} ${res.data[i].time}`, 'YYYY-MM-DD HH:mm:ss').format();\n                var data = {title : res.data[i].eventName , date : dateTime};\n                newEvents.push(data);\n            }\n            setEvents(newEvents);\n        });\n    },[]);\n\n    const [calendarEvent, setCalendarEvent] = useState({\n        eventName: \"\",\n        category: \"\",\n        date: \"\",\n        time: \"\",\n        userId: localStorage.getItem(\"user_id\")\n    });\n\n    const [calendarEventError, setCalendarEventError] = useState({\n        eventName: \"\",\n        category: \"\",\n        date: \"\",\n        time: \"\"\n    });\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newCalendarEvent = {...calendarEvent, [e.target.name]: e.target.value };\n        setCalendarEvent(newCalendarEvent);\n    };\n    \n    const [showModal, setShowModal] = useState(false);\n\n    const isEventValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setCalendarEventError({\n            eventName: \"\",\n            category: \"\",\n            date: \"\",\n            time: \"\"\n        });\n        let newCalendarEventError = {...calendarEventError};\n\n        if (!calendarEvent.eventName.length > 0) {\n            newCalendarEventError.eventName = \"Event Name is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.eventName = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if (!calendarEvent.category.length > 0) {\n            newCalendarEventError.category = \"Category is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.category = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if (!calendarEvent.time.length > 0) {\n            newCalendarEventError.time = \"Event Time is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.time = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if(valid === true){\n            calendarServices.add(calendarEvent).then(res => res);\n            let newEvents = [...events]\n            const dateTime = moment(`${calendarEvent.date} ${calendarEvent.time}`, 'YYYY-MM-DD HH:mm:ss').format();\n            var data = {title : calendarEvent.eventName , date : dateTime};\n            newEvents.push(data);\n            setEvents(newEvents);\n            handleModalClose();\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = (arg) => {\n        calendarEvent.date = arg.dateStr;\n        setShowModal(true);\n    }\n\n    return (\n        <div className=\"page-container calendar-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Calendar\"/>\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Container className=\"to-do-list-content\"></Container>\n                    <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin, interactionPlugin]}\n                        events={events}\n                        dateClick={handleModalShow}\n                    />\n                    <Modal show={showModal} onHide={handleModalClose}>\n                            <Form onSubmit={(e) => isEventValid(e)}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>New Calendar Event</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body className=\"show-grid\">\n                                    <Container>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Name</Form.Label>\n                                                <Form.Control type=\"text\" name=\"eventName\" placeholder=\"Event Name...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.eventName.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.eventName}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Category</Form.Label>\n                                                <Form.Control type=\"text\" name=\"category\" placeholder=\"Event Category...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.category.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.category}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Time</Form.Label>\n                                                <Form.Control type=\"time\" name=\"time\" placeholder=\"Event Time...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.time.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.time}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                    </Container>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                        Close\n                                    </Button>\n                                    <Button className=\"primary-button\" type=\"submit\">\n                                        Add\n                                    </Button>\n                                </Modal.Footer>\n                            </Form>\n\n                        </Modal>\n                    </div>\n                </div>\n        </div>\n    )\n}","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Edit component.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport Datatable from \"../../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/EditInvoice.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport invoiceServices from \"../../services/invoiceServices\";\n\nexport class EditInvoice extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state={\n            projectId: props && props.history && props.history.location&&props.history.location.state &&props.history.location.state.state?props.history.location.state.state:0,\n            invoiceNumber:\"\",\n            taskendDate:\"\",\n            taskstartDate:\"\",\n            projects:\"\",\n            clientName:\"\",\n            generatedDate:\"\",\n            dueDate:\"\",\n            hourlyRate:\"\",\n            Total:\"\",\n            paymentstatus:\"\",\n            paymentPreStatus:\"\"\n            \n            \n        }}\n        //Fetch invoice based on invoice is to update it.\n        componentDidMount() {\n          \n            invoiceServices.findInvoice(this.state).then((response) =>{\n              \n                if (response.status == 200){\n                    this.setState({project: response.data.result.projectName})\n                    this.setState({clientName:response.data.result.clientName})\n                    this.setState({generatedDate: response.data.result.generatedDate})\n                    this.setState({Total:response.data.result.totalCost})\n                    this.setState({invoiceNumber:response.data.result._id})\n                    this.setState({hourlyRate:response.data.result.hourlyRate})\n                    this.setState({paymentPreStatus:response.data.result.paymentStatus})\n                    this.setState({taskendDate:response.data.result.taskendDate})\n                    this.setState({taskstartDate:response.data.result.startDate})\n                } \n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n\n        //On value change of a control, set it in state.\n        onValueChange = (event) => {\n            this.setState({\n                [event.target.name]: event.target.value\n            });\n        }\n    \n        //validate due date\n        validateDueDate = (event) => {\n            let isValid = true;\n            if (this.state.dueDate) {\n                const today = new Date()\n                const selectedDate = new Date(this.state.dueDate)\n                if (selectedDate < today) {\n                    this.setState({ dueDateError: \"Due Date cannot be past date\" })\n                    isValid = false;\n                }\n                else {\n                    this.setState({ dueDateError: \"\" })\n                }\n            } \n            return isValid;\n        }\n    \n        //validate form\n        validateForm = (event) => {\n            let isValid = true\n            if (!this.validateDueDate()) {\n                isValid = false;\n            }\n           \n            return isValid;\n        }\n        //update invoice\n        update = (e) =>{\n            if(this.validateForm()){\n                if(!this.state.paymentstatus && !this.state.dueDate){\n                    alert(\"Please fill the field\")\n                }else{\n                    \n                    invoiceServices.updateInvoice(this.state).then((response) => {\n                    if(response){\n                        alert(\"Updated Successfully\")\n                        this.cancel()\n                    }\n                }).catch((error) => {\n                     console.log(error)\n                })\n                \n            }\n        }   \n        }\n        //redirect to invoice management screen\n        cancel = (e) =>{\n            this.props.history.push('/invoices')\n        }\n       \n        render() {\n            return (\n                <div className=\"page-container edit-invoice-generation-container\">\n                    <div className=\"page-header-container\">\n                        {this.state.readonly ? (<PageHeader title=\"Invoice Details\" subtitle=\"\" />)\n                        :(<PageHeader title=\"Invoice Generation\" subtitle=\"\" />)}\n                    </div>\n                    <div className=\"page-content-container\">\n                        <div className=\"page-content\">\n                            <Row className=\"invoice-generation-content\">\n                                <Col>\n                                    <Form>\n                                        <div className=\"generate-forms\">\n                                            <Row>\n                                                <Col>\n                                                    <span>\n                                                        <div>Invoice Number :{this.state.invoiceNumber}</div>\n                                                        <div>Project Name :  {this.state.project}</div>\n                                                        <div>Client Name : {this.state.clientName}</div>\n                                                        <div>From date :  {this.state.taskstartDate}</div>\n                                                        <div>To Name :  {this.state.taskendDate}</div>\n                                                        <div>Generated Date: {this.state.generatedDate} </div>\n                                                        <div>Hourly Rate :{this.state.hourlyRate} CAD </div>\n                                                        <div>Total Amount :{this.state.Total} CAD </div>\n                                                        \n                                                    </span>\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required\">Payment Status</Form.Label>\n                                                        <Form.Control type=\"text\" name=\"paymentstatus\" value={this.state.paymentstatus} onChange={this.onValueChange}>\n                                                        </Form.Control>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            {this.state.projectError}\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Group>\n                                                        <div className=\"inline-date-control\">\n                                                            <div className=\"due-date-control\">\n                                                                <div>\n                                                                    <Form.Label className=\"required\">Invoice Duedate</Form.Label>\n                                                                </div>\n                                                                <Form.Control type=\"date\" className=\"start-date\" name=\"dueDate\" placeholder=\"Due Date\" value={this.state.dueDate} onChange={this.onValueChange}\n                                                                    onBlur={this.validateDate}\n                                                                    isInvalid={this.state.dueDateError} />\n                                                                <Form.Control.Feedback type=\"invalid\">\n                                                                    {this.state.dueDateError}\n                                                                </Form.Control.Feedback>\n                                                            </div>\n                                                        </div>\n                                                    </Form.Group>\n                                                </Col>\n            \n                                            </Row>\n                                        </div>\n                                    </Form>\n                                </Col>\n                            </Row>\n                            <div className=\"generate-buttons\">         \n                                <Row className=\"generate-button-container\">\n                                    <Button className=\"primary-button\" onClick={this.update}>\n                                        Update Invoice\n                                    </Button>\n                                    <Button className=\"secondary-button\" onClick={this.cancel}>\n                                        Cancel\n                                    </Button>\n                                </Row> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n}\nexport default withRouter(EditInvoice)","import React, { Component } from 'react'\nimport { withRouter } from \"react-router\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport PageHeader from \"../components/PageHeader\";\nimport { exportComponentAsJPEG } from 'react-component-export-image';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport Button from 'react-bootstrap/Button';\nimport { ButtonGroup } from 'react-bootstrap';\nimport testimonialServices from \".././services/testimonialServices\"\nimport registerServices from \".././services/registerServices\"\nimport \".././styles/BusinessCard.scss\";\n\n/**\n * Author: Bansi Mehta.\n * Created On: 2021-07-06\n * BusinessCard Front component.\n */\nclass BusinessCardFront extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"business-card-container\">\n                <div className=\"business-card-top\">\n                    <div className=\"business-card-front\">\n                        <div className=\"name\">\n                            {this.props.apiData.Name ? (\n                                <span>{this.props.apiData.Name}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"email other-information\">\n                            {this.props.apiData.Email ? (\n                                <span><i class=\"fas fa-envelope-square\"></i>&nbsp;{this.props.apiData.Email}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"phone-number other-information\">\n                            {this.props.apiData.ContactNo ? (\n                                <span><i class=\"fas fa-phone-alt\"></i>&nbsp;{this.props.apiData.ContactNo}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"linked-in-profile other-information\">\n                            {this.props.apiData.LinkedInProfile ? (\n                                <span><i class=\"fab fa-linkedin\"></i>&nbsp;{this.props.apiData.LinkedInProfile}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"web-site other-information\">\n                            {this.props.apiData.Website ? (\n                                <span><i class=\"fas fa-at\"></i>&nbsp;{this.props.apiData.Website}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"business-class-bottom\">\n                    <div className=\"bottom-bar bar-first\"></div>\n                    <div className=\"bottom-bar bar-second\"></div>\n                    <div className=\"bottom-bar bar-third\"></div>\n                    <div className=\"bottom-bar bar-fourth\"></div>\n                    <div className=\"bottom-bar bar-fifth\"></div>\n                    <div className=\"bottom-bar bar-sixth\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * Author: Bansi Mehta.\n * Created On: 2021-07-06\n * BusinessCard Back component.\n */\nclass BusinessCardBack extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"business-card-container\">\n                <div className=\"business-card-top\">\n                    <div className=\"business-card-back\">\n                        <div className=\"feedback-row\">\n                        Client Feedback...\n                        </div>\n                        \n                        {\n                            this.props.apiData && this.props.apiData.length ? this.props.apiData.map(row => (\n                                <div className=\"feedback-row\">\n                                    <span className=\"feedback\">{row.feedback}</span><span className=\"client\">{row.client}</span>\n                                </div>\n                            )) : (\n                                <div className=\"empty-review\">Eager To Help Out.....</div>\n                            )\n                        }\n                    </div>\n                </div>\n                <div className=\"business-class-bottom\">\n                    <div className=\"bottom-bar bar-first\"></div>\n                    <div className=\"bottom-bar bar-second\"></div>\n                    <div className=\"bottom-bar bar-third\"></div>\n                    <div className=\"bottom-bar bar-fourth\"></div>\n                    <div className=\"bottom-bar bar-fifth\"></div>\n                    <div className=\"bottom-bar bar-sixth\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * Author: Bansi Mehta.\n * Created On: 2021-07-06\n * BusinessCard Combined display of front and back.\n */\nclass BusinessClassDisplay extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n\n\n    render() {\n        return (\n            <Row className=\"business-card-content\">\n                <Col className=\"business-card-data\">\n                    <Flippy flipOnHover={true} style={{ display: \"flex\", justifyContent: \"center\", width: '24rem', height: '12rem' }}>\n                        <FrontSide>\n                            <BusinessCardFront apiData={this.props && this.props.data && this.props.data.profileData} />\n                        </FrontSide>\n                        <BackSide>\n                            <BusinessCardBack apiData={this.props && this.props.data &&  this.props.data.testimonialData} />\n                        </BackSide>\n                    </Flippy>\n                </Col>\n            </Row>\n        )\n\n    }\n}\n\n/**\n * Author: Bansi Mehta.\n * Created On: 2021-07-06\n * BusinessCard Screen for displaying and printing.\n */\nexport class BusinessCard extends Component {\n    constructor(props) {\n        super(props);\n        this.componentRef = React.createRef();\n        this.state = {\n            profileData: {},\n            testimonialData: [],\n            exportSide: 'Front'\n        }\n    }\n\n    exportAsSide = (side) => {\n        this.setState({ exportSide: side })\n    }\n\n    componentDidMount() {\n        let id = localStorage.getItem('user_id')\n        registerServices.fatchUserById(id).then(response => {\n            if (response) {\n                this.setState({profileData: response})\n            }\n        })\n\n        testimonialServices.list({\"userId\": id}).then(response => {\n            if (response.data && response.data.length) {\n                this.setState({testimonialData: response.data.splice(0,2)})\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-container business-card-page\">\n                    <div className=\"page-header-container\">\n                        <PageHeader title=\"Business Card\" subtitle=\"\" />\n                    </div>\n                    <div className=\"page-content-container\">\n                        <div className=\"page-content\">\n                            <Row>\n                                <Col xs={12}>\n                                    <BusinessClassDisplay data={this.state}></BusinessClassDisplay>\n                                </Col>\n                                <Col xs={4} className=\"button-to-export\">\n                                    <div className=\"button-container\">\n                                        <ButtonGroup>\n                                            <Button className=\"secondary-button\" onClick={() => this.exportAsSide('Front')}>Front</Button>\n                                            <Button className=\"secondary-button\" onClick={() => this.exportAsSide('Back')}>Back</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </Col>\n                                <Col xs={8}>\n                                    <React.Fragment>\n                                        <div>\n                                            {\n                                                this.state.exportSide === 'Front' ? (\n                                                    <BusinessCardFront ref={this.componentRef} apiData={this.state.profileData} />\n\n                                                ) : (\n                                                    <BusinessCardBack ref={this.componentRef} apiData={this.state.testimonialData} />\n                                                )\n                                            }\n                                        </div>\n                                        <div className=\"export-button\">\n                                            <Button className=\"primary-button\" onClick={() => exportComponentAsJPEG(this.componentRef)}>Export As JPEG</Button>\n                                        </div>\n                                    </React.Fragment>\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(BusinessCard)\n","/* Author: Team */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AppLayout from \"./layouts/AppLayout\";\nimport DashboardLayout from \"./layouts/DashboardLayout\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Auth/Login\";\nimport Register from \"./pages/Auth/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Profile from \"./pages/Profile\";\nimport EditProfile from \"./pages/EditProfile\";\nimport InvoiceGeneration from \"./pages/Invoices/InvoiceGeneration\";\nimport Timelogs from \"./pages/Timelogs\";\nimport Projects from \"./pages/Projects\";\nimport AddProject from \"./pages/Projects/AddProject\";\nimport EditProject from \"./pages/Projects/EditProject\";\nimport ViewProject from \"./pages/Projects/ViewProject\";\nimport Clients from \"./pages/Clients\";\nimport AddClient from \"./pages/Clients/AddClient\";\nimport EditClient from \"./pages/Clients/EditClient\";\nimport ViewClient from \"./pages/Clients/ViewClient\";\nimport Testimonials from \"./pages/Testimonials\";\nimport RequestTestimonials from \"./pages/RequestTestimonial\";\nimport InvoiceManagement from \"./pages/Invoices\"\nimport TodoList from \"./pages/TodoList\"\nimport Calendar from \"./pages/Calendar\";\nimport EditInvoice from \"./pages/Invoices/EditInvoice\"\n\nimport { BusinessCard } from \"./pages/BusinessCard\";\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <AppLayout>\n                        <Home />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/login\">\n                    <AppLayout>\n                        <Login />\n                    </AppLayout>\n                </Route>\n                <Route exact path=\"/register\">\n                    <AppLayout>\n                        <Register />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/register/add\">\n                    <DashboardLayout>\n                        <Register />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/dashboard\">\n                    <DashboardLayout>\n                        <Dashboard />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/profile\">\n                    <DashboardLayout>\n                        <Profile />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/register/edit/:id\">\n                    <DashboardLayout>\n                        <EditProfile />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/editProfile\">\n                    <DashboardLayout>\n                        <EditProfile />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/clients\">\n                    <DashboardLayout>\n                        <Clients />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/clients/add\">\n                    <DashboardLayout>\n                        <AddClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/EditClient\">\n                    <DashboardLayout>\n                        <EditClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/ViewClient\">\n                    <DashboardLayout>\n                        <ViewClient />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/projects\">\n                    <DashboardLayout>\n                        <Projects />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/add\">\n                    <DashboardLayout>\n                        <AddProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/edit/:id\">\n                    <DashboardLayout>\n                        <EditProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/view/:id\">\n                    <DashboardLayout>\n                        <ViewProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/timelogs\">\n                    <DashboardLayout>\n                        <Timelogs />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/invoices\">\n                    <DashboardLayout>\n                        <InvoiceManagement />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/invoices/generate\">\n                    <DashboardLayout>\n                        <InvoiceGeneration />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/editinvoice\">\n                    <DashboardLayout>\n                        <EditInvoice />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/testimonials\">\n                    <DashboardLayout>\n                        <Testimonials />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/testimonials/requestTestimonials/:id\">\n                    <AppLayout>\n                        <RequestTestimonials />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/todolist\">\n                    <DashboardLayout>\n                        <TodoList />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/calendar\">\n                    <DashboardLayout>\n                        <Calendar />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/business-card\">\n                    <DashboardLayout>\n                        <BusinessCard />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/\">\n                    <div>404 Page not found.</div>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/bootstrap_custom.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/style.scss';\nimport './styles/button_style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}