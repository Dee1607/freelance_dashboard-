{"version":3,"sources":["components/AppNavbar.js","layouts/AppLayout.js","components/DashboardNavbar.js","components/DashboardSidebar.js","layouts/DashboardLayout.js","pages/Home.js","pages/Login.js","pages/Register.js","components/PageHeader.js","pages/Dashboard.js","components/Datatable.js","services/invoiceServices.js","pages/InvoiceGeneration.js","services/timelogServices.js","services/projectsServices.js","services/clientService.js","pages/Timelogs.js","services/clientsServices.js","pages/AddProject.js","pages/Projects.js","pages/EditProject.js","pages/AddClient.js","pages/Clients.js","pages/EditClient.js","pages/ViewClient.js","services/clientServices.js","services/testimonialServices.js","pages/Testimonials.js","pages/RequestTestimonial.js","pages/InvoiceManagement.js","services/TodoListService.js","pages/TodoList.js","pages/Calendar.js","pages/EditInvoice.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Navbar","className","Container","Brand","href","Nav","Link","AppLayout","children","DashboardNavbar","title","Sidebar","props","location","useLocation","useState","open","setOpen","Toggle","onClick","Collapse","in","Overflow","ToC","Item","pathname","DashboardLayout","fluid","Row","Col","md","as","DashboardSidebar","Home","Login","history","useHistory","email","setEmail","password","setPassword","handleSubmit","e","a","preventDefault","push","onSubmit","type","placeholder","id","name","value","onChange","target","Button","variant","Register","checkEmail","checkPassword","confirmPassword","registrationInfo","setRegistrationInfo","nameError","emailError","passwordError","confirmPasswordError","registrationErrors","setRegistrationErrors","handleChange","newRegistration","valid","newRegError","test","alert","Form","Label","required","PageHeader","subtitle","Dashboard","Datatable","columns","data","allowCSV","allowSearch","tableInstance","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","globalFilter","span","filename","offset","Group","Control","Table","bordered","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","style","width","Number","Pagination","First","disabled","Prev","Array","fill","v","Next","Last","length","date","axios","post","result","get","InvoiceGeneration","onValueChange","event","setState","validateProject","isValid","project","projectError","validateDate","validateDueDate","validateEndDate","dueDate","today","Date","selectedDate","endDate","dueDateError","endDateError","validateHourlyRate","hourlyRate","hourlyRateError","validateForm","generateInvoice","invoiceDetails","generateDate","now","invoiceServices","getTags","then","response","status","console","log","tags","totalCost","forEach","startdate","startAt","enddate","endAt","seconds","Math","floor","minutes","hour","description","task","hours","total","concat","totalcost","catch","error","saveInvoice","addInvoice","closeInvoice","projectId","readonly","projects","paymentStatus","Header","accessor","this","findInvoice","projectName","clientName","generatedDate","Total","invoiceNumber","invId","getAllProject","onBlur","isInvalid","_id","Feedback","Component","withRouter","put","delete","client","saveData","deleteData","Timelogs","moment","format","Cell","deleteTask","setData","useEffect","timelogServices","list","res","lastTask","setTask","restartTimer","timerState","setTimerState","timerStart","setTimerStart","setTimerEnd","timerString","setTimerString","timer","setTimer","centiseconds","slice","setInterval","setProjects","clients","setClients","clientService","getAllClients","projectServices","taskError","setTaskError","showModal","setShowModal","newTask","handleModalClose","startTask","newTaskError","isTaskValid","add","window","confirm","newData","remove","message","splice","index","Card","Body","Title","fontSize","Subtitle","clearInterval","update","Modal","show","onHide","closeButton","ClientName","Text","filter","includes","Footer","AddProjects","rate","invoice","setProject","setClient","clientsServices","setProjectError","newProject","newProjectError","projectsServices","isProjectValid","min","Projects","editProject","original","url","EditProjects","prop","useParams","params","split","selected","AddClient","validateClient","clientNameError","validateOrganization","organizationName","organizationNameError","validateContactNo","contactNo","contactNoError","RegExp","validateWebsiteName","websiteName","websiteNameError","validateEmailId","emailId","emailIdError","validateLinkedInProfile","linkedInProfile","linkedInProfileError","validateStreet","street","streetError","validatePostalcode","postalCode","PostalCodeError","validateMeetingPlatform","meetingPlatform","meetingPlatformError","addNewClient","onClickBack","businessDescription","country","region","val","validateClientName","OrganizationName","ContactNo","WebsiteName","EmailId","Street","BusinessDescription","validatebusinessDescription","PostalCode","MeetingPlatform","xs","defaultOptionLabel","selectCountry","blankOptionLabel","selectRegion","Clients","viewDetails","viewOneClient","editDetails","deleteDetails","deleteClient","newdetails","element","Emailid","Email","Website","handleNewClient","Organization","bind","align","newDetails","EditClient","onUpdate","editClient","clientId","ClientId","LinkedInProfile","Country","Region","ViewClient","dateFormat","require","Testimonials","requestedOn","setLgShow","deleteTestimonial","clientServices","testimonial","setTestimonial","testimonialServices","mailInfo","setMailInfo","newRequest","lgShow","size","aria-labelledby","onlineUsersRow","Form_Link","mailParams","freelancerName","freelancerMail","clientMail","link","emailjs","send","text","sendEmail","RequestTestimonial","param","feedback","setFeedback","newFeedback","InvoiceManagement","editInvoice","invoicename","viewInvoice","deleteInvoice","deleteinvoice","getAllInvoices","handleClick","checkbox","generateddate","duedate","clientname","projectname","paymentstatus","TodoList","saveItem","todoListService","saveTask","getAllData","getPreviousDate","previousDate","subtract","getNextDate","nextDate","currentDate","completeTasks","incompleteTasks","item","getAllTasks","completeTask","incompleteTask","rowData","markTaskAsDone","palceholder","lg","checked","taskItemComplete","taskItemDelete","Calendar","events","defaultView","plugins","dayGridPlugin","interactionPlugin","dateClick","arg","prompt","dateStr","EditInvoice","updateInvoice","cancel","paymentPreStatus","taskendDate","App","exact","path","EditProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c008ff2a.chunk.js","sourcesContent":["/* Author: Vishal Sancheti */\n\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/AppNavbar.scss\"\n\nexport default function AppNavbar(){\n    return (\n        <Navbar className=\"app-nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"app-nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"login\">Login</Nav.Link>\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"register\">Register</Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport AppNavbar from \"../components/AppNavbar\";\nimport {Container} from \"react-bootstrap\";\n\n// Page Wrapper for Application Pages\nconst AppLayout =({children}) =>{\n    return(\n        <>\n            <header>\n                <AppNavbar/>\n            </header>\n            <main>\n                <Container>\n                    {children}\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default AppLayout;","/* Author: Vishal Sancheti */\n\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/DashboardNavbar.scss\";\n\nexport default function DashboardNavbar(){\n    return (\n        <Navbar className=\"nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link title=\"Notification\" className=\"nav-bar-link\" href=\"#notification\">\n                        <i className=\"fas fa-bell\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Profile\" className=\"nav-bar-link\" href=\"#profile\">\n                        <i className=\"fas fa-user\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Log Out\" className=\"nav-bar-link\" href=\"/\">\n                        <i className=\"fas fa-sign-out-alt\"/>\n                    </Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport '../styles/style.scss';\nimport React, { useState } from 'react';\nimport {Collapse} from 'react-bootstrap';\nimport { Drawer } from 'react-bootstrap-drawer';\nimport '../styles/DashboardSidebar.scss';\nimport { useLocation } from 'react-router-dom'\n\nexport default function Sidebar(props) {\n    const location = useLocation();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    return (\n        <Drawer { ...props }>\n            <Drawer.Toggle onClick={ handleToggle } />\n\n            <Collapse in={ open }>\n                <Drawer.Overflow>\n                    <Drawer.ToC>\n                        <Drawer.Item href=\"/dashboard\">\n                            <span className={location.pathname === \"/dashboard\" ? 'nav-item-active' : ''}>Dashboard</span>\n                        </Drawer.Item>\n\n                        <Drawer.Nav>\n                            <Drawer.Item href=\"/clients\">\n                                <span className={location.pathname === \"/clients\" ? 'nav-item-active' : ''}>Clients</span>\n                            </Drawer.Item>\n                            <Drawer.Item  href=\"/projects\">\n                                <span className={location.pathname === \"/projects\" ? \"nav-item-active\" : ''}>Projects</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/timelogs\">\n                                <span className={location.pathname === \"/timelogs\" ? 'nav-item-active' : ''}>Time Logs</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/invoicemanagement\">\n                                <span className={location.pathname === \"/invoicemanagement\" ? 'nav-item-active' : ''}>Invoices</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/invoice-generation\">\n                                <span className={location.pathname === \"/invoice-generation\" ? 'nav-item-active' : ''}>Invoice Generation</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/testimonials\">\n                                <span className={location.pathname === \"/testimonials\" ? 'nav-item-active' : ''}>Testimonials</span>\n                            </Drawer.Item>\n\n                            <hr className=\"horizontal-break\"/>\n\n                            <Drawer.Item href=\"/todolist\">\n                                <span className={location.pathname === \"/todolist\" ? 'nav-item-active' : ''}>ToDo</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/calendar\">\n                                <span className={location.pathname === \"/calendar\" ? 'nav-item-active' : ''}>Calendar</span>\n                            </Drawer.Item>\n                        </Drawer.Nav>\n                    </Drawer.ToC>\n                </Drawer.Overflow>\n            </Collapse>\n        </Drawer>\n    );\n};","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport DashboardNavbar from \"../components/DashboardNavbar\";\nimport DashboardSidebar from \"../components/DashboardSidebar\";\nimport {Col, Container, Row} from \"react-bootstrap\";\n\n// Page Wrapper for Dashboard Pages\nconst DashboardLayout =({children}) =>{\n    return(\n        <>\n            <header>\n                <DashboardNavbar/>\n            </header>\n            <main>\n                <Container fluid>\n                    <Row>\n                        <Col md={2} as={DashboardSidebar} />\n                        <Col md={10}>\n                            {children}\n                        </Col>\n                    </Row>\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default DashboardLayout;","import React from 'react';\n\nexport default function Home(){\n    return (\n        <div>\n            Home Page\n        </div>\n    )\n}","import React from 'react';\nimport { useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nexport default function Login(){\n\n    let history = useHistory();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [user, setUser] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        if(email === \"admin@gmail.com\" && password === \"admin@123\"){\n            history.push(\"/dashboard\",email);\n        }\n      };\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Log in</h3>\n\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <input \n                                type=\"email\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email. Eg:'admin@gmail.com' \"\n                                id = \"email\"\n                                name = \"email\"\n                                value={email}\n                                onChange={({ target }) => setEmail(target.value)} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password Eg:'admin@123\"\n                                id = \"password\"\n                                name = \"password\"\n                                value={password}\n                                onChange={({ target }) => setPassword(target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div>\n                                <input type=\"checkbox\" id=\"customCheck1\" />\n                                <label>Remember me</label>\n                            </div>\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">Sign in</Button>\n                        <p className=\"forgot-password text-right\">\n                            Forgot <a href=\"#\">password?</a>\n                        </p>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\n\nexport default function Register(){\n\n    let history = useHistory();\n\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n\n    const [registrationInfo, setRegistrationInfo] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [registrationErrors, setRegistrationErrors] = useState({\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n        confirmPasswordError: ''\n    });\n\n    const handleChange = (e) => {\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\n        setRegistrationInfo(newRegistration);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        setRegistrationErrors({\n            nameError: '',\n            emailError: '',\n            passwordError: '',\n            confirmPasswordError: ''\n        })\n\n        let newRegError = {...registrationErrors};\n\n        if(registrationInfo.name === \"\"){\n            newRegError.nameError = \"Please enter name!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.nameError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.email === \"\"){\n            newRegError.emailError = \"Please enter email!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkEmail.test(registrationInfo.email)){\n                newRegError.emailError = \"Email Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.emailError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n        \n\n        if(registrationInfo.password === \"\"){\n            newRegError.passwordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkPassword.test(registrationInfo.password)){\n                newRegError.passwordError = \"Password Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.passwordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.confirmPassword === \"\"){\n            newRegError.confirmPasswordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if((registrationInfo.password) !==  registrationInfo.confirmPassword){\n                newRegError.confirmPasswordError = \"Password does not match!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.confirmPasswordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n\n        if(valid === true){\n            alert(\"Registration Successful!!\");\n            history.push(\"/login\");\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Register</h3>\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Name</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter Name\"\n                                id = \"name\"\n                                name = \"name\"\n                                required=\"required\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email\"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Confirm Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm your password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.confirmPasswordError}</p>\n\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Register </Button>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport \"../styles/PageHeader.scss\"\nconst PageHeader =(props) =>{\n    return(\n        <>\n            <div className=\"page-header-title\">{props.title}</div>\n            <div className=\"page-header-subtitle\">{props.subtitle}</div>\n        </>\n    )\n}\n\nexport default PageHeader;","import React from 'react';\nimport PageHeader from \"../components/PageHeader\";\n\nexport default function Dashboard(){\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Dashboard\" subtitle=\"\"/>\n            </div>\n            <div className=\"page-content-container\">\n                {/* page content goes here */}\n            </div>\n        </div>\n        \n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport {useGlobalFilter, usePagination, useSortBy, useTable} from \"react-table\";\nimport {Col, Form, Row, Table} from \"react-bootstrap\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport {CSVLink} from \"react-csv\";\n\nconst Datatable = (props) => {\n    //Init\n    const columns = props.columns;\n    const data = props.data;\n    const allowCSV = props.allowCSV == \"false\" ? false : true;\n    const allowSearch = props.allowSearch == \"false\" ? false : true;\n    const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } },\n        useGlobalFilter,\n        useSortBy,\n        usePagination);\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setGlobalFilter,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageSize, globalFilter }\n    } = tableInstance;\n\n    return (\n        <div>\n            <Row>\n                {/*Conditional Display Export CSV Button*/}\n                {allowCSV ?\n                    (<Col md={{ span: 2 }} className=\"my-2\">\n                        <CSVLink data={data} filename={\"export.csv\"} className=\"secondary-button btn btn-secondary\" target=\"_blank\">\n                            Export CSV\n                        </CSVLink>\n                    </Col>)\n                    : (<></>)\n                }\n\n                {/*Conditional Display Search Form*/}\n                {allowSearch ?\n                    (<Col md={{ span: 2, offset: 8 }}>\n                        <Form.Group>\n                            <Form.Control type=\"search\" placeholder=\"Search\"\n                                          value={globalFilter || \"\"}\n                                          onChange={e => setGlobalFilter(e.target.value)} />\n                        </Form.Group>\n                    </Col>)\n                    : (<></>)\n                }\n            </Row>\n\n            {/*Table*/}\n            <div className=\"table-responsive\">\n                <Table bordered striped {...getTableProps()}>\n                    <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    <span>{column.isSorted ?\n                                        column.isSortedDesc ?\n                                            ' 🔽': ' 🔼'\n                                        : ''}</span>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n\n            {/*Filters and Pagination*/}\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <Form.Control as=\"select\" style={{ width: \"100px\" }}\n                                      value={pageSize}\n                                      onChange={(e) => {\n                                          setPageSize(Number(e.target.value));\n                                      }}>\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                                <option key={pageSize} value={pageSize}>\n                                    Show {pageSize}\n                                </option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Pagination className=\"justify-content-end\">\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage}/>\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\n                        {Array(pageCount).fill().map((v,i) => (\n                            <Pagination.Item onClick={() => gotoPage(i)}>{i+1}</Pagination.Item>\n                        ))}\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}/>\n                    </Pagination>\n                </Col>\n            </Row>\n\n            {/*Table Info*/}\n            <Row>\n                <Col>\n                    <span>Showing {pageSize} results of {rows.length} rows</span>\n                </Col>\n            </Row>\n        </div>\n    )\n};\n\nexport default Datatable;\n","/**\n * Author: Bansi Mehta\n * Created On: 20201-07-20\n * Service containing api calls for TO-DO List.\n */\n import axios from \"axios\"\n export class TodoListService {\n     async getTags(date) {\n         const result = await axios.post(\"/api/invoices/tags\",  date );\n         return result;\n     }\n \n     async addInvoice(data) {\n         const result = await axios.post(\"/api/invoices/save\", data);\n         return result;\n     }\n \n     async findInvoice(data) {\n         const result = await axios.post(\"/api/invoices/findinvoice\", data);\n         return result;\n     }\n \n     async getAllProject() {\n         const result = await axios.get(\"/api/invoices/getproject\");\n         return result;\n     }\n     \n     async getAllInvoices() {\n        const result = await axios.get(\"/api/invoices/fetchinvoices\");\n        return result;\n    }\n\n    async deleteinvoice(data) {\n        const result = await axios.post(\"/api/invoices/deleteinvoice\",data);\n        return result;\n    }\n     \n    async updateInvoice(data) {\n        const result = await axios.post(\"/api/invoices/updateinvoice\",data);\n        return result;\n    }\n }\n \n export default new TodoListService()","\n/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Generation component.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/InvoiceGeneration.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport invoiceServices from \"../services/invoiceServices\";\n\n\nexport class InvoiceGeneration extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n        this.state = {\n            \n     \n            projectId: props && props.history && props.history.location&&props.history.location.state &&props.history.location.state.state?props.history.location.state.state:0,\n            readonly: props && props.history && props.history.location&&props.history.location.state &&props.history.location.state.state? true:false,\n            dueDate: \"\",\n            dueDateError: \"\",\n            endDate: \"\",\n            endDateError: \"\",\n            hourlyRate: \"\",\n            hourlyRateError: \"\",\n            project: \"\",\n            projectError: \"\",\n            totalcost:0,\n            projects: [],\n            tags:[],\n            generateDate :\"\",\n            paymentStatus:\"Unpaid\",\n            dueDate:\"\",\n            clientName:\"\",\n            invoiceNumber:\"\",\n            Total:\"\",\n            generatedDate:\"\",\n            invoiceDetails:[]\n\n        }\n\n\n        this.columns = [\n            { Header: 'Description', accessor: 'description' },\n            { Header: 'Time (hours)', accessor: 'hours' },\n            { Header: 'Total', accessor: 'total' }\n        ];\n    }\n    /**\n     * when page renders it will fetch all the invoices or invoice based on read condition\n     * \n     * If this component is called from invoiceManagement.js, this page will open as read-only mode. \n     * in read-only mode, it will fetch generated invoice details based on the project id.\n     * \n     * If this component is called from dahsboard, it will allow a user to generate invoice.\n     */\n    componentDidMount() {\n        //executed when called in read-only mode\n        if(this.state.readonly){\n            invoiceServices.findInvoice(this.state).then((response) =>{\n                console.log(response)\n                if (response.status == 200){\n                    this.setState({ project: response.data.projectName})\n                    this.setState({clientName:response.data.clientName})\n                    this.setState({dueDate: response.data.dueDate})\n                    this.setState({generatedDate: response.data.generatedDate})\n                    this.setState({hourlyRate:response.data.hourlyRate})\n                    this.setState({Total:response.data.totalCost})\n                    this.setState({invoiceNumber:response.data.invId})\n                    this.setState({paymentStatus:response.data.paymentStatus})\n                    let invoiceDetails=[]\n                    response.data.tags.forEach(row => {\n                                          \n                        let data = {}                       \n                        data.description = row.description;\n                        data.hours = row.hours\n                        data.total = row.total\n                        invoiceDetails.push(data)                        \n                    })\n                    if(invoiceDetails.length !=0 ){\n                        this.setState({invoiceDetails: this.state.invoiceDetails.concat(invoiceDetails)})\n                        console.log(this.state.invoiceDetails)   \n                    }\n                \n                } \n            }).catch((error) => {\n                console.log(error)\n            })\n        }else{\n            //Executed when called from dashbord page\n            invoiceServices.getAllProject().then((response) => {\n            if (response.status == 200) {\n                this.setState({ projects: response.data })\n            }\n        }).catch((error) => {\n            console.log(\"Eroor\")\n        })\n        }\n        \n    }\n\n    \n    //On value change of a control, set it in state.\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    //validate project field\n    validateProject = (event) => {\n        let isValid = true;\n        if (!this.state.project) {\n            this.setState({ projectError: \"Project is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n    //validate due date and project duration date\n    validateDate = (event) => {\n        let isValid = true;\n        if (!this.validateDueDate()) {\n            isValid = false;\n        }\n        if (!this.validateEndDate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateDueDate = (event) => {\n        let isValid = true;\n        if (this.state.dueDate) {\n            const today = new Date()\n            const selectedDate = new Date(this.state.dueDate)\n            const endDate = new Date(this.state.endDate)\n            if (selectedDate < today) {\n                this.setState({ dueDateError: \"Due Date cannot be past date\" })\n                isValid = false;\n            }else if(endDate > selectedDate) {\n                this.setState({ dueDateError: \"Due Date must be greater than project duration date\" })\n                isValid = false;\n            }\n            else {\n                this.setState({ dueDateError: \"\" })\n            }\n        } else {\n            this.setState({ dueDateError: \"Due Date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateEndDate = (event) => {\n        let isValid = true;\n        const today = new Date()\n        const dueDate = new Date(this.state.dueDate)\n        const endDate = new Date(this.state.endDate)\n        if (dueDate && endDate) {\n            if (dueDate < endDate || today < endDate) {\n                this.setState({ endDateError: \"End Date cannot be greater than due date or current date\" })\n                isValid = false;\n            } else {\n                this.setState({ endDateError: \"\" })\n            }\n        } else {\n            this.setState({ endDateError: \"End date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    //validate horly rate field\n    validateHourlyRate = (event) => {\n        let isValid = true;\n        if (!this.state.hourlyRate) {\n            this.setState({ hourlyRateError: \"Hourly Rate is required\" })\n            isValid = false;\n        }else if(this.state.hourlyRate < 1){\n            this.setState({ hourlyRateError: \"Hourly Rate must be a greater than 0\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateForm = (event) => {\n        let isValid = true\n\n        if (!this.validateProject()) {\n            isValid = false;\n        }\n        if (!this.validateDate()) {\n            isValid = false;\n        }\n        if (!this.validateHourlyRate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    //Generate invoice by fetching all the task from the timelog collection\n    generateInvoice = (event) => {\n        event.preventDefault();\n        this.setState({invoiceDetails:[]})\n        //invoice generation date\n        this.setState({generateDate:Date.now()})\n        if(this.validateForm()){\n            invoiceServices.getTags(this.state).then((response) => {\n                if (response.status == 200) {\n                    console.log(response.data)\n                    this.setState({ tags: response.data })\n                    let invoiceDetails = []\n                    let totalCost = 0\n                    response.data.forEach(row => {\n                                                \n                        let data = {}\n                        var startdate = new Date(row.startAt);\n                        \n                        var enddate = new Date(row.endAt);\n                      \n                        var seconds = Math.floor(((enddate) - (startdate))/1000)\n                        \n                        var minutes = Math.floor(seconds/60)\n                        var hour = Math.floor(minutes/60)\n                       \n                        data.description = row.task;\n                        data.hours = hour\n                        data.total = this.state.hourlyRate * hour\n                        totalCost = totalCost + data.total\n                        invoiceDetails.push(data)\n                        \n                        \n                    })\n                    //store tags, hours worked on that tags and total cost for performing that task\n                    if(invoiceDetails.length !=0 ){\n                        this.setState({invoiceDetails: this.state.invoiceDetails.concat(invoiceDetails)})\n                        this.setState({totalcost:totalCost})\n                          \n                    }\n                \n                }\n            }).catch((error) => {\n                console.log(error)\n            })\n            \n        }\n        \n        \n    }\n    \n    //this function store generated invoices in database\n    saveInvoice =(event)=>{\n        if(this.state.invoiceDetails.length == 0){\n            this.generateInvoice()\n        }\n        if(this.validateForm()){\n           \n            invoiceServices.addInvoice(this.state).then((response) =>{\n                if (response.status == 200){\n                    console.log(response)\n                    alert(\"Ïnvoice Added\")\n                } \n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n    }\n    //called when component is called in read-only mode. This function redirect to invoicemanagement page\n    closeInvoice = (e) =>{\n        this.props.history.push('/invoicemanagement')\n    }\n    render() {\n        return (\n            <div className=\"page-container invoice-generation-container\">\n                <div className=\"page-header-container\">\n                    {this.state.readonly ? (<PageHeader title=\"Invoice Details\" subtitle=\"\" />)\n                    :(<PageHeader title=\"Invoice Generation\" subtitle=\"\" />)}\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"invoice-generation-content\">\n                            <Col>\n                                <Form>\n                                    <div className=\"generate-forms\">\n                                        <Row>\n                                            <Col>\n                                            {this.state.readonly ? (\n                                                        <span>\n                                                            <div> Invoice Number :{this.state.invoiceNumber}</div>\n                                                            <div>Project Name :  {this.state.project}</div>\n                                                            <div>Client Name : {this.state.clientName}</div>\n                                                            <div>Invoice Genrated : {this.state.generatedDate} </div>\n                                                            <div>Payment Due Date : {this.state.dueDate} </div>\n                                                            <div>Hourly Rate :{this.state.hourlyRate} CAD </div>\n                                                            <div>Total Amount :{this.state.Total} CAD </div>\n                                                            <div>Payment Status :{this.state.paymentStatus} </div>\n                                                            <div> </div>\n                                                        </span>\n                                                        \n                                                    ) : (\n                                                <Form.Group>\n                                                    <Form.Label className=\"required\">Project</Form.Label>\n                                                    <Form.Control as=\"select\" name=\"project\" value={this.state.project} onChange={this.onValueChange}\n                                                        onBlur={this.validateProject}\n                                                        isInvalid={this.state.projectError}>\n                                                    <option>Select Project</option>\n                                                    {this.state.projects.map(project => (\n                                                        <option value={project._id}>{project.title}</option>\n                                                    ))}\n                                                    </Form.Control>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {this.state.projectError}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>)}\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                \n                                                    {this.state.readonly?(<div></div>):\n                                                    (\n                                                    <Form.Group>\n                                                    \n                                                    <div className=\"inline-date-control\">\n                                                        <div className=\"due-date-control\">\n                                                            <div>\n                                                                <Form.Label className=\"required\">Invoice Duedate</Form.Label>\n                                                            </div>\n                                                            <Form.Control type=\"date\" className=\"start-date\" name=\"dueDate\" placeholder=\"Due Date\" value={this.state.dueDate} onChange={this.onValueChange}\n                                                                onBlur={this.validateDate}\n                                                                isInvalid={this.state.dueDateError} />\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                {this.state.dueDateError}\n                                                            </Form.Control.Feedback>\n                                                        </div>\n                                                        <div className=\"end-date-control\">\n                                                            <div>\n                                                                <Form.Label className=\"required\">Project Duration</Form.Label>\n                                                            </div>\n                                                            <Form.Control type=\"date\" name=\"endDate\" placeholder=\"End Date\" value={this.state.endDate} onChange={this.onValueChange}\n                                                                onBlur={this.validateDate}\n                                                                isInvalid={this.state.endDateError} />\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                {this.state.endDateError}\n                                                            </Form.Control.Feedback>\n                                                        </div>\n                                                    </div>\n                                                    </Form.Group>)}\n                                            </Col>\n                                            <Col>\n                                            {this.state.readonly?(<div></div>):(\n                                                <Form.Group>\n                                                <Form.Label className=\"required\">Hourly Rate</Form.Label>\n                                                <Form.Control type=\"number\" name=\"hourlyRate\" placeholder=\"Hourly Rate\" value={this.state.hourlyRate} onChange={this.onValueChange}\n                                                    onBlur={this.validateHourlyRate}\n                                                    isInvalid={this.state.hourlyRateError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.hourlyRateError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                            )} \n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"generate-buttons\">\n                                        \n                                        {this.state.readonly?\n                                        (<Button className=\"secondary-button\" onClick={this.closeInvoice}>\n                                        Close\n                                        </Button>):\n                                        (<Row className=\"generate-button-container\">\n                                            <Button className=\"primary-button\" onClick={this.generateInvoice}>\n                                                Generate Invoice\n                                            </Button>\n                                            <Button className=\"secondary-button\" onClick={this.saveInvoice}>\n                                                Save\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Download\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Send\n                                            </Button>\n                                        </Row>)}\n                                        \n                                    </div>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Row className=\"data-table-container\">\n                            <Col>\n                                <Datatable columns={this.columns} data={this.state.invoiceDetails} allowCSV=\"false\" allowSearch=\"false\" />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(InvoiceGeneration);","/* Author: Vishal Sancheti */\n\nimport axios from \"axios\";\n\nexport class timelogServices{\n    // Get all Timelogs\n    async list(){\n        const result = await axios.get(\"/api/timelogs\");\n        return result.data;\n    };\n\n    // Add new Timelog\n    async add(data){\n        data.projectId = data.project;\n        const result = await axios.post(\"/api/timelogs/add\",data);\n        return result.data;\n    };\n\n    // Update Timelog\n    async update(data){\n        data.projectId = data.project;\n        console.log(data);\n        const result = await axios.put(\"/api/timelogs/update/\"+data._id,data);\n        return result.data;\n    };\n\n    // Remove Timelog\n    async remove(data){\n        const result = await axios.delete(\"/api/timelogs/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new timelogServices()","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Services for Projects.\n */\n\nimport axios from \"axios\";\n\nexport class projectsServices{\n\n    /**\n     * Method to hit the API of getting list of projects\n     */\n    async list(){\n        const result = await axios.get(\"/api/projects\");\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of getting single project\n     */\n    async get(id){\n        const result = await axios.get(\"/api/projects/\"+id);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of adding project in a list\n     */\n    async add(data){\n        //data.projectId = data.project;\n        const result = await axios.post(\"/api/projects/add\",data);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of updating a project\n     */\n    async update(data){\n        //data.projectId = data.project;\n        console.log(data);\n        const result = await axios.put(\"/api/projects/update/\"+data._id,data);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of removing the project\n     */\n    async remove(data){\n        const result = await axios.delete(\"/api/projects/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new projectsServices()","/**\n * Author: Janvi Patel\n * Created On: 20201-07-20\n */\n\n import axios from \"axios\"\n\n export class ClientService {\n     async getAllClients() {\n         const result = await axios.get(\"/api/clients/getAll\");\n         return result;\n     }\n \n     async editClient(client) {\n         const result = await axios.post(\"/api/clients/edit\", client );\n         return result;\n     }\n \n     async viewOneClient(client) {\n         const result = await axios.post(\"/api/clients/viewOne\" , client);\n         return result;\n     }\n \n     async addNewClient(saveData) {\n        const result = await axios.post('/api/clients/add', saveData);\n         return result;\n     }\n\n     async deleteClient(deleteData) {\n        const result = await axios.post(\"/api/clients/delete\", deleteData);\n        return result;\n     }\n }\n \n export default new ClientService()","/* Author: Vishal Sancheti */\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment'\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\n\nimport timelogServices from '../services/timelogServices.js'\nimport projectServices from '../services/projectsServices.js'\nimport clientService from \"../services/clientService\";\n\nexport default function Timelogs() {\n    //Init\n    const columns = [\n        { Header: 'Project', accessor: 'project.title' },\n        { Header: 'Client', accessor: 'project.client' },\n        { Header: 'Task', accessor: 'task' },\n        { Header: 'Start At', accessor: row => moment(row.startAt).format(\"DD-MM-YYYY hh:mm:ss\")},\n        { Header: 'End At', accessor: row => row.endAt ? moment(row.endAt).format(\"DD-MM-YYYY hh:mm:ss\"):\"-\"},\n        { Header: 'Action', id: 'action', accessor: 'row',\n            Cell: ({ row }) => (<Button className=\"delete-button\" onClick={() => { deleteTask(row) }}>Delete</Button>)\n        }\n    ];\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        timelogServices.list().then(res => setData(res.data));\n    },[]);\n\n    useEffect(() => {\n        if(data.length){\n            let lastTask = data[0];\n            if(lastTask && !lastTask.endAt){\n                setTask(lastTask);\n                restartTimer(new Date(lastTask.startAt));\n            }\n        }\n    },[data]);\n\n    // Timer properties and actions\n    const [timerState, setTimerState] = useState(0);\n    const [timerStart, setTimerStart] = useState(Date.now());\n    const [timerEnd, setTimerEnd] = useState(Date.now());\n    const [timerString, setTimerString] = useState(\"00 : 00 : 00 : 00\");\n    const [timer, setTimer] = useState(0);\n    useEffect(() => {\n        let centiseconds = (\"0\" + (Math.floor(timer / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timer / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timer / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor(timer / 3600000)).slice(-2);\n        setTimerString(hours + \" : \" + minutes + \" : \" + seconds + \" : \" + centiseconds);\n    }, [timer]);\n    const startTimer = () => {\n        if (timerState === 0) {\n            setTimerStart(Date.now() - timer);\n            setTimerState(\n                setInterval(() => {\n                    setTimer(Date.now() - timerStart)\n                }, 10)\n            );\n        }\n    };\n    const restartTimer = (startAt) => {\n        if (timerState === 0) {\n            setTimerStart(startAt - timer);\n            setTimer(Date.now() - startAt);\n            setTimerState(\n                setInterval(() => {\n                    setTimer( Date.now() - startAt)\n                }, 10)\n            );\n        }\n    };\n    const stopTimer = () => {\n        setTimerEnd(Date.now());\n        clearInterval(timerState);\n        setTimerState(0);\n        setTimer(0);\n    };\n\n    // New Task States\n    const [projects, setProjects] = useState([]);\n    const [clients, setClients] = useState([]);\n    useEffect(() => {\n        clientService.getAllClients().then(res => setClients(res.data));\n    },[]);\n    useEffect(() => {\n        projectServices.list().then(res => setProjects(res.data));\n    },[]);\n    const [task, setTask] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\",\n        startAt: \"\",\n        endAt: \"\"\n    });\n    const [taskError, setTaskError] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\"\n    });\n    const [showModal, setShowModal] = useState(false);\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newTask = { ...task, [e.target.name]: e.target.value };\n        setTask(newTask);\n    };\n    const isTaskValid = () => {\n        let valid = true;\n        setTaskError({\n            project: \"\",\n            client: \"\",\n            task: \"\"\n        });\n\n        if (!task.project.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.project = \"Project is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.client.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.client = \"Client is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.task.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.task = \"Task is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = () => setShowModal(true);\n\n    // New Task Actions\n    const startTask = (e) => {\n        e.preventDefault();\n        if (isTaskValid()) {\n            startTimer();\n            task.startAt = Date.now();\n            timelogServices.add(task).then(res => {task._id = res.data._id; task.project = res.data.project});\n            setData(data => [task, ...data]);\n            handleModalClose();\n        }\n    };\n    const stopTask = () => {\n        stopTimer();\n        let newData = [...data];\n        newData[0].endAt = Date.now();\n        timelogServices.update(newData[0]).then(res => alert(res.message));\n        setData(newData);\n        setTask({\n            project: \"\",\n            client: \"\",\n            task: \"\",\n            startAt: \"\",\n            endAt: \"\"\n        });\n    };\n    const deleteTask = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            timelogServices.remove(newData[0]).then(res => alert(res.message));\n            newData.splice(task.index, 1);\n            setData(newData);\n        }\n    };\n\n    return (\n        <div className=\"page-container timelogs-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Time logs\" subtitle=\"\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row className=\"justify-content-center\">\n                        <Col md={6}>\n                            <Card>\n                                <Card.Body className=\"text-center\">\n                                    <Card.Title style={{ fontSize: \"2.5rem\" }}>{timerString}</Card.Title>\n                                    {timer <= 0 &&\n                                    <Button className=\"primary-button btn\" onClick={handleModalShow}>Start</Button>\n                                    }\n                                    {timer > 0 &&\n                                    <>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">Task: {task.task}</Card.Subtitle>\n                                        <Button className=\"delete-button btn\" onClick={stopTask}>Stop</Button>\n                                    </>\n                                    }\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Modal show={showModal} onHide={handleModalClose}>\n                        <Form onSubmit={(e) => startTask(e)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>New Task</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body className=\"show-grid\">\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Client</Form.Label>\n                                                <Form.Control as=\"select\" name=\"client\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.client.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Client</option>\n                                                    {clients.length && clients.map(function(client,index){\n                                                        return <option key={index} value={client.ClientName}>{client.ClientName}</option>\n                                                    })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.client}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Project</Form.Label>\n                                                <Form.Control as=\"select\" name=\"project\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.project.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Project</option>\n                                                    {projects.length && projects.filter(project => project.client && project.client.includes(task.client))\n                                                        .map(function(project,index){\n                                                            return <option key={index} value={project._id}>{project.title}</option>\n                                                        })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.project}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Task</Form.Label>\n                                                <Form.Control type=\"text\" name=\"task\" placeholder=\"Task Description...\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.task.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{taskError.task}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                    Close\n                                </Button>\n                                <Button className=\"primary-button\" type=\"submit\">\n                                    Start\n                                </Button>\n                            </Modal.Footer>\n                        </Form>\n\n                    </Modal>\n                    <Datatable columns={columns} data={data} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","import axios from \"axios\";\n\nexport class clientsServices{\n    async list(){\n        const result = await axios.get(\"/api/clients/\");\n        return result.data;\n    };\n}\n\nexport default new clientsServices()","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Add Project File.\n */\n\nimport {useState, useEffect, React} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../services/projectsServices';\nimport clientsServices from '../services/clientsServices';\n\n/**\n *  Functionality for adding the project\n */\nexport default function AddProjects(){\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        rate: \"\",\n        invoice: \"\",\n        status: \"\"\n    });\n\n    const [clients, setClient] = useState({\n        ClientName : \"\"\n    });\n\n    useEffect(() => {\n        clientsServices.list().then(res => setClient(res.data));\n        console.log(clients);\n    },[]);\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        rate: \"\",\n        invoice: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            rate: \"\",\n            invoice: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        // if(!project.rate.value > 0){\n        //     newProjectError.rate = \"Rate is required\";\n        //     setProjectError(newProjectError);\n        //     valid = false;\n        // }\n        // else{\n        //     newProjectError.rate = \"\";\n        //     setProjectError(newProjectError);\n        // }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            projectsServices.add(project).then(res => res);\n            history.push('/projects');\n        }\n        return valid;\n    };\n\n    return (\n        <div>\n            <PageHeader title=\"New Project\"/>\n            \n            <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-md-10\">\n\n              <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\n                        <p className=\"text-danger\">{projectError.title}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                            <option value=\"\">Select Client</option>\n                            {clients.length > 0 && clients.map(function(client,index){\n                                return <option value={client.ClientName}>{client.ClientName}</option>\n                            })}\n                        </select>\n                        <p className=\"text-danger\">{projectError.client}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                                      className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                        <p className=\"text-danger\">{projectError.description}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                        <p className=\"text-danger\">{projectError.rate}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                            <option value=\"\">Select Invoice Duration</option>\n                            <option value=\"Daily\">Daily</option>\n                            <option value=\"Weekly\">Weekly</option>\n                            <option value=\"Monthly\">Monthly</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.invoice}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                            <option value=\"\">Select Project Status</option>\n                            <option value=\"In Progress\">In Progress</option>\n                            <option value=\"Pending\">Pending</option>\n                            <option value=\"Completed\">Completed</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.status}</p>\n                    </div>\n                </div>\n                    \n                <div className=\"form-group row\">\n                    <div className=\"col-md-5\"></div>\n                    <div className=\"col-md-2\">\n                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n              </center></form>\n            </div>\n        </div>\n    )\n}","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Listing File for Projects.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport AddProject from './AddProject';\nimport Datatable from \"../components/Datatable\";\nimport '../styles/style.scss';\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../services/projectsServices.js'\nimport \"../styles/Projects.scss\";\n\n/**\n *  Functionality for listing down the list of projects\n */\nexport default function Projects() {\n\n    const columns = [\n        { Header: 'Project Title', accessor: 'title' },\n        { Header: 'Description', accessor: 'description' },\n        { Header: 'Client Name', accessor: 'client' },\n        { Header: 'Status', accessor: 'status' },\n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (<div className=\"data-table-button\"><a title=\"Edit Project\" onClick={() => editProject(row.original._id)} className=\"secondary-button\">Edit</a><a title=\"Delete Project\" onClick={() => { deleteTask(row.original) }} className=\"delete-button\">Delete</a></div>)\n        }\n    ];\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        projectsServices.list().then(res => setData(res.data));\n    },[]);\n\n    const deleteTask = (project) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            projectsServices.remove(project).then(res => alert(res.message));\n            projectsServices.list().then(res => setData(res.data));\n        }\n    };\n\n    const [checkForm, setCheckForm] = useState(true);\n\n    const validate = () => {\n        setCheckForm(false);\n    }\n\n    const history = useHistory();\n\n    async function editProject(id) {\n        let url = \"/projects/edit/\" + id;\n        history.push(url);\n    }\n\n    return (\n        <div className=\"page-container projects-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div className=\"page-content\">\n\n                <Row className=\"button-container\">\n                    <Col>\n                        <a href=\"/projects/add\" title=\"Add Project\" className=\"primary-button\">Add Project</a>\n                    </Col>\n                </Row>\n                <Row className=\"data-table-container\">\n                    <Col>\n                        <Datatable columns={columns} data={data} />\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </div>\n    )\n}","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Edit File for Projects.\n */\n\nimport {useState, useEffect, React} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../services/projectsServices';\nimport clientsServices from '../services/clientsServices';\n\n/**\n *  Functionality for editing the project\n */\nconst EditProjects = (prop) => {\n\n    const param = useParams();\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const params = history.location.pathname.split('/');\n    \n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const [clients, setClient] = useState({\n        ClientName : \"\"\n    });\n\n    useEffect(() => {\n        projectsServices.get(params[params.length-1]).then(res => setProject(res.data));\n        console.log(project);\n        clientsServices.list().then(res => setClient(res.data));\n    },[]);\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            invoice: \"\",\n            rate: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        // if(!project.rate.value > 0){\n        //     newProjectError.rate = \"Rate is required\";\n        //     setProjectError(newProjectError);\n        //     valid = false;\n        // }\n        // else{\n        //     newProjectError.rate = \"\";\n        //     setProjectError(newProjectError);\n        // }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            projectsServices.update(project).then(res => res);\n            history.push('/projects');\n        }\n        return valid;\n    };\n\n    return (\n        <div>\n            <PageHeader title=\"Edit Project\"/>\n            \n            <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-md-10\">\n\n              <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" value={project.title.length > 0 && project.title} name=\"title\" id=\"title\"/>\n                        <p className=\"text-danger\">{projectError.title}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                            <option value=\"\">Select Client</option>\n                            {clients.length > 0 && clients.map(function(client,index){\n                                return <option value={client.ClientName} selected={client.ClientName === project.client ? \"true\":\"false\"}>{client.ClientName}</option>\n                            })}\n                        </select>\n                        <p className=\"text-danger\">{projectError.client}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                                      className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} value={project.description} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                        <p className=\"text-danger\">{projectError.description}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} value={project.rate} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                        <p className=\"text-danger\">{projectError.rate}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                            <option value=\"\">Select Invoice Duration</option>\n                            <option value=\"Daily\" selected={project.invoice === \"Daily\" ? \"true\":\"false\"}>Daily</option>\n                            <option value=\"Weekly\" selected={project.invoice === \"Weekly\" ? \"true\":\"false\"}>Weekly</option>\n                            <option value=\"Monthly\" selected={project.invoice === \"Monthly\" ? \"true\":\"false\"}>Monthly</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.invoice}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                            <option value=\"\">Select Project Status</option>\n                            <option value=\"In Progress\" selected={project.status === \"In Progress\" ? \"true\":\"false\"}>In Progress</option>\n                            <option value=\"Pending\" selected={project.status === \"Pending\" ? \"true\":\"false\"}>Pending</option>\n                            <option value=\"Completed\" selected={project.status === \"Completed\" ? \"true\":\"false\"}>Completed</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.status}</p>\n                    </div>\n                </div>\n                    \n                <div className=\"form-group row\">\n                    <div className=\"col-md-5\"></div>\n                    <div className=\"col-md-2\">\n                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n              </center></form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditProjects;","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Add Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { curl_init } from 'react';\nimport { curl_getinfo } from 'react';\nimport { CURLINFO_HTTP_CODE } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport clientService from \"../services/clientService\"\n\nexport class AddClient extends Component {\n\n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            clientName: \"\",\n            clientNameError: \"\",\n            organizationName: \"\",\n            organizationNameError: \"\",\n            contactNo: \"\",\n            contactNoError: \"\",\n            websiteName: \"\",\n            websiteNameError: \"\",\n            linkedInProfile: \"\",\n            linkedInProfileError: \"\",\n            emailId: \"\",\n            emailIdError: \"\",\n            street: \"\",\n            streetError: \"\",\n            businessDescription: \"\",\n            postalCode: \"\",\n            PostalCodeError: \"\",\n            meetingPlatform: \"\",\n            meetingPlatformError: \"\",\n            country: \"\",\n            region: \"\"\n        }\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    selectCountry(val) {\n        this.setState({ country: val });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    selectRegion(val) {\n        this.setState({ region: val });\n    }\n\n    /**\n     * validate client name is null or not\n     * @param {*} event \n    */\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.clientName) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ clientNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate organization is null or not\n     * @param {*} event \n    */\n    validateOrganization = (event) => {\n        let isValid = true;\n        if (!this.state.organizationName) {\n            this.setState({ organizationNameError: \"Organization Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ organizationNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate contactNo with numbers and contact no is null or not\n     * @param {*} event \n    */    \n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n            })\n        }\n        else {\n            this.setState({ contactNoError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate website name with pattern and website is null or not\n     * @param {*} event \n    */\n    validateWebsiteName = (event) => {\n        let isValid = true;\n\n        if(this.state.websiteName){\n            const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n            const result = pattern.test(this.state.websiteName);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    websiteNameError: \"Provided website is invalid: should contain domain name\"\n                })\n            }\n            else {\n                this.setState({ websiteNameError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate email id with pattern \n     * @param {*} event \n    */\n    validateEmailId = (event) => {\n        let isValid = true;\n        if (!this.state.emailId) {\n            this.setState({ emailIdError: \"Email Id is required\" })\n            isValid = false;\n        }\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n        const result = pattern.test(this.state.emailId);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                emailIdError: \"Provided email Id is invalid: should contain '@' and domain name\"\n            })\n        } else {\n            this.setState({ emailIdError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate linkedin profile with pattern \n     * @param {*} event \n    */\n    validateLinkedInProfile = (event) => {\n\n        let isValid = true;\n        if(this.state.linkedInProfile){\n\n            const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            const result = pattern.test(this.state.linkedInProfile);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    linkedInProfileError: \"LinkedIn Profile is not valid\"\n                })\n            } else {\n                this.setState({ linkedInProfileError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate street with pattern \n     * @param {*} event \n    */\n    validateStreet = (event) => {\n        let isValid = true;\n        if(this.state.street){\n\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.street);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    streetError: \"Street should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ streetError: \"\" })\n            }\n        }   \n        return isValid;\n    }\n\n    /**\n     * Validate postal code with pattern \n     * @param {*} event \n    */\n    validatePostalcode = (event) => {\n        let isValid = true;\n        if(this.state.postalCode){\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.postalCode);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    PostalCodeError: \"Postal code should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ PostalCodeError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate meeting platform with pattern \n     * @param {*} event \n    */\n    validateMeetingPlatform = (event) => {\n        let isValid = true;\n        if (!this.state.meetingPlatform) {\n            this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ meetingPlatformError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate form \n     * @param {*} event \n    */\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateOrganization()) {\n            isValid = false;\n        }\n        if (!this.validateContactNo()) {\n            isValid = false;\n        }\n        if (!this.validateWebsiteName()) {\n            isValid = false;\n        }\n        if (!this.validateEmailId()) {\n            isValid = false;\n        }\n        if (!this.validateLinkedInProfile()) {\n            isValid = false;\n        }\n        if (!this.validateStreet()) {\n            isValid = false;\n        }\n        if (!this.validatePostalcode()) {\n            isValid = false;\n        }\n        if (!this.validateMeetingPlatform()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    /**\n     * On submit new client will be added and the api call will be made\n     * @param {*} event \n    */\n    onSubmit = (event) => {\n        event.preventDefault();\n        clientService.addNewClient(this.state).then((response) => {\n            if (this.validateForm()) {\n                alert(\"Details Successfully Saved!!\");\n            }\n            this.props.history.push({ pathname: '/clients' });\n        }).catch((error) => {\n            alert(\"Duplicate details found!!\");\n            console.log(\"Eroor\")\n        })\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event \n    */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"New Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.ClientName} onChange={this.onValueChange}\n                                                    onBlur={this.validateClientName}\n                                                    isInvalid={this.state.clientNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.OrganizationName} onChange={this.onValueChange}\n                                                    onBlur={this.validateOrganization}\n                                                    isInvalid={this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.ContactNo} onChange={this.onValueChange}\n                                                    onBlur={this.validateContactNo}\n                                                    isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.WebsiteName} onChange={this.onValueChange}\n                                                    onBlur={this.validateWebsiteName}\n                                                    isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.EmailId} onChange={this.onValueChange}\n                                                    onBlur={this.validateEmailId}\n                                                    isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"linkedInProfile\" placeholder=\"Enter Linkedin Profile\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                    onBlur={this.validateLinkedInProfile}\n                                                    isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.Street} onChange={this.onValueChange}\n                                                    onBlur={this.validateStreet}\n                                                    isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.BusinessDescription} onChange={this.onValueChange}\n                                                    onBlur={this.validatebusinessDescription}\n                                                />\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.PostalCode} onChange={this.onValueChange}\n                                                    onBlur={this.validatePostalcode}\n                                                    isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.MeetingPlatform} onChange={this.onValueChange}\n                                                    onBlur={this.validateMeetingPlatform}\n                                                    isInvalid={this.state.meetingPlatformError}>\n                                                    <option>Select Project</option>\n                                                    <option value=\"Google Meet\">Google Meet</option>\n                                                    <option value=\"Skype\">Skype</option>\n                                                    <option value=\"Zoom\">Zoom</option>\n                                                    <option value=\"In Person\">In person</option>\n                                                </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col xs={6}>\n                                            <Form.Group>\n                                                <div className=\"country\">\n                                                    <Form.Label className=\"required\">Country </Form.Label>\n                                                    <CountryDropdown as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country}\n                                                        onChange={(value) => this.selectCountry(value)}\n                                                    />\n                                                </div>\n                                                <div className=\"region\">\n                                                    <Form.Label>Region </Form.Label>\n                                                    <RegionDropdown\n                                                        country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                        as=\"select\" name=\"region\" value={this.state.region} onChange={(value) => this.selectRegion(value)}>\n                                                    </RegionDropdown>\n                                                </div>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"primary-button\" onClick={this.onSubmit}>\n                                            Submit\n                                        </Button>\n                                        <Button className=\"primary-button\" onClick={this.onClickBack}>\n                                            Back\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AddClient);","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Clients details.\n */\n\nimport React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport \"../styles/Clients.scss\";\nimport './AddClient'\nimport { Component } from \"react\";\nimport axios from 'axios';\nimport clientService from \"../services/clientService\"\n\n\nexport class Clients extends Component {\n  \n  //constructor for props\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : [],\n      ClientName: \"\",\n      Organization: \"\",\n      ContactNo: \"\",\n      Emailid: \"\"\n    }\n    this.handleNewClient = this.handleNewClient.bind(this);\n\n    this.columns = [\n      { Header: 'Client Name', accessor: 'ClientName' },\n      { Header: 'Contact No', accessor: 'ContactNo' },\n      { Header: 'Email', accessor: 'Emailid' },\n      { Header: 'Website', accessor: 'Website' },\n      {\n        Header: 'Action', accessor: 'row',\n        Cell: ({ row }) => (\n          \n          <div className=\"generate-button-container\">\n            <Button className=\"secondary-button\" align=\"right\" onClick={() => this.viewDetails(row)} >View</Button>\n            <Button className=\"secondary-button\" align=\"right\"  onClick={() => this.editDetails(row)} >Edit</Button>\n            <Button className=\"delete-button\" align=\"right\"  onClick={() => this.deleteDetails(row)} >Delete</Button>\n          </div>\n        )\n      }]; \n  }\n\n  /**\n     * On mount, set the values of table.\n     * @param {*} event \n  */\n  componentDidMount() {\n    \n    clientService.getAllClients().then((response) => {\n        if (response.status == 200) {\n            this.setData(response.data);\n            let newDetails = [];\n            response.data.forEach(element => {\n              let row = {}\n              row.ClientName = element.ClientName;\n              row.ContactNo = element.ContactNo;\n              row.Emailid = element.Email;\n              row.Website = element.Website;\n              newDetails.push(row)\n            });\n            this.setState({\n              data: newDetails\n            })\n        }\n    }).catch((error) => {\n        console.log(\"Eroor\")\n    })\n\n  }\n\n  /**\n     * On click of view details select view client API call\n     * @param {*} event \n  */\n  viewDetails = (row) => {\n\n    clientService.viewOneClient(row.original).then((response) => {  \n        this.props.history.push({ pathname: '/ViewClient' }, {\n          state: response.data\n        })\n    }).catch((error) => {\n        console.log(\"Error\")\n    })\n  }\n\n   /**\n     * On click of edit details edit client API call\n     * @param {*} event \n  */\n  editDetails = (row) => {\n    clientService.viewOneClient(row.original).then((response) => {  \n        this.props.history.push({ pathname: '/EditClient' }, {\n          state: response.data\n        })\n    }).catch((error) => {\n        console.log(\"Error\")\n    })\n  };\n\n  /**\n     * On click of delete details delete client API call and set table\n     * @param {*} event \n  */\n  deleteDetails = (row) => {\n    clientService.deleteClient(row.original).then((response) => {\n          alert(\"Successfully deleted entry!!\");\n          clientService.getAllClients().then((response) => {\n              if (response.status == 200) {\n                  this.setData(response.data);\n                  let newdetails = [];\n                  response.data.forEach(element => {\n                    let row = {}\n                    row.ClientName = element.ClientName;\n                    row.ContactNo = element.ContactNo;\n                    row.Emailid = element.Email;\n                    row.Website = element.Website;\n                    newdetails.push(row)\n                  });\n                  this.setState({data: newdetails})\n                }\n          }).catch((error) => {\n              console.log(\"Eroor\")\n          })\n      }).catch((error) => {\n          console.log(\"Eroor\")\n      })\n  }\n\n  setData = (response) => {\n    this.data = []\n  }\n\n  /**\n     * On click of handle new client add new client detail redirected\n     * @param {*} event \n  */\n  handleNewClient = (e) => {\n    e.preventDefault();\n    this.props.history.push({ pathname: '/Addclient' });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-container clients-container\">\n          <div className=\"page-header-container\">\n            <PageHeader title=\"Clients\" subtitle=\"\" />\n          </div>\n          <div className=\"page-content-container\">\n            <div className=\"page-content\">\n              <Row className=\"button-container\">\n                <Col>\n                  <Button className=\"primary-button\" type=\"button\" align=\"right\" onClick={this.handleNewClient} >Add New</Button>\n                </Col>\n              </Row>\n              <Row className=\"data-table-container\">\n                <Col>\n                  <Datatable columns={this.columns} data={this.state.data} />\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Clients);\n","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Edit Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport clientService from \"../services/clientService\";\n\nexport class EditClient extends Component\n{\n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            clientId: props.history.location.state.state.ClientId,\n            clientName: props.history.location.state.state.ClientName,\n            clientNameError: \"\",\n            organizationName: props.history.location.state.state.Organization,\n            organizationNameError: \"\",\n            contactNo: props.history.location.state.state.ContactNo,\n            contactNoError: \"\",\n            websiteName: props.history.location.state.state.Website,\n            websiteNameError: \"\",\n            emailId: props.history.location.state.state.Email,\n            emailIdError: \"\",\n            linkedInProfile: props.history.location.state.state.LinkedInProfile,\n            linkedInProfileError: \"\",\n            street: props.history.location.state.state.Street,\n            streetError: \"\",\n            businessDescription: props.history.location.state.state.BusinessDescription,\n            postalCode: props.history.location.state.state.PostalCode,\n            PostalCodeError: \"\",\n            meetingPlatform: props.history.location.state.state.MeetingPlatform,\n            meetingPlatformError: \"\",\n            country: props.history.location.state.state.Country,\n            region: props.history.location.state.state.Region\n        }       \n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    selectCountry (name, val) {\n      this.setState({  name: val });\n    }\n  \n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    selectRegion (val) {\n      this.setState({ name: val });\n    }\n\n    /**\n     * validate client name is null or not\n     * @param {*} event \n    */\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.clientName) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ clientNameError: \"\" })\n        }\n        return isValid;\n    }\n\n     /**\n     * Validate organization is null or not\n     * @param {*} event \n    */\n    validateOrganization = (event) => {\n        let isValid = true;\n        if (!this.state.organizationName) {\n            this.setState({ organizationNameError: \"Organization Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ organizationNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate contactNo with numbers and contact no is null or not\n     * @param {*} event \n    */\n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n            })\n        }\n        else {\n            this.setState({ contactNoError: \"\" })\n        }\n        return isValid;\n    }\n\n     /**\n     * Validate website name with pattern and website is null or not\n     * @param {*} event \n    */\n    validateWebsiteName = (event) => {\n        let isValid = true;\n\n        if(this.state.websiteName){\n            const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n            const result = pattern.test(this.state.websiteName);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    websiteNameError: \"Provided website is invalid: should contain domain name\"\n                })\n            }\n            else {\n                this.setState({ websiteNameError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate email id with pattern \n     * @param {*} event \n    */\n    validateEmailId = (event) => {\n        let isValid = true;\n        if (!this.state.emailId) {\n            this.setState({ emailIdError: \"Email Id is required\" })\n            isValid = false;\n        }\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n        const result = pattern.test(this.state.emailId);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                emailIdError: \"Provided email Id is invalid: should contain '@' and domain name\"\n            })\n        } else {\n            this.setState({ emailIdError: \"\" })\n        }\n        return isValid;\n    }\n\n      /**\n     * Validate linkedin profile with pattern \n     * @param {*} event \n    */\n    validateLinkedInProfile = (event) => {\n\n        let isValid = true;\n        if(this.state.linkedInProfile){\n\n            const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            const result = pattern.test(this.state.linkedInProfile);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    linkedInProfileError: \"LinkedIn Profile is not valid\"\n                })\n            } else {\n                this.setState({ linkedInProfileError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n     /**\n     * Validate street with pattern \n     * @param {*} event \n    */\n    validateStreet = (event) => {\n        let isValid = true;\n        if(this.state.street){\n\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.street);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    streetError: \"Street should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ streetError: \"\" })\n            }\n        }   \n        return isValid;\n    }\n\n    /**\n     * Validate postal code with pattern \n     * @param {*} event \n    */\n    validatePostalcode = (event) => {\n        let isValid = true;\n        if(this.state.postalCode){\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.postalCode);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    PostalCodeError: \"Postal code should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ PostalCodeError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate meeting platform with pattern \n     * @param {*} event \n    */\n    validateMeetingPlatform = (event) => {\n        let isValid = true;\n        if (!this.state.meetingPlatform) {\n            this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ meetingPlatformError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate form \n     * @param {*} event \n    */\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateOrganization()) {\n            isValid = false;\n        }\n        if (!this.validateContactNo()) {\n            isValid = false;\n        }\n        if (!this.validateWebsiteName()) {\n            isValid = false;\n        }\n        if (!this.validateEmailId()) {\n            isValid = false;\n        }\n        if (!this.validateLinkedInProfile()) {\n            isValid = false;\n        }\n        if (!this.validateStreet()) {\n            isValid = false;\n        }\n        if (!this.validatePostalcode()) {\n            isValid = false;\n        }\n        if (!this.validateMeetingPlatform()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    /**\n     * On Update client will be updated and the api call will be made\n     * @param {*} event \n    */\n    onUpdate = (event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n            clientService.editClient(this.state).then((response) => {\n            }).catch((error) => {\n                console.log(\"Error\")\n            })\n            alert('Successfully updated details!!');\n            this.props.history.push({ pathname: '/clients' });\n        }\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event \n    */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                   <PageHeader title=\"Edit Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.clientName} onChange={this.onValueChange}\n                                                    onBlur={this.validateClientName}\n                                                    isInvalid = {this.state.clientNameError}/>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.organizationName} onChange={this.onValueChange}\n                                                    onBlur={this.validateOrganization}\n                                                    isInvalid = {this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>        \n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.contactNo} onChange={this.onValueChange}\n                                                    onBlur={this.validateContactNo}\n                                                    isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.websiteName} onChange={this.onValueChange}\n                                                    onBlur={this.validateWebsiteName}\n                                                    isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.emailId} onChange={this.onValueChange}\n                                                    onBlur={this.validateEmailId}\n                                                    isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"linkedInProfile\" placeholder=\"Enter LinkedIn Profile\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                    onBlur={this.validateLinkedInProfile}\n                                                    isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.street} onChange={this.onValueChange}\n                                                    onBlur={this.validateStreet}\n                                                    isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.businessDescription} onChange={this.onValueChange}\n                                                    onBlur={this.validatebusinessDescription}\n                                                     />\n                                               \n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.postalCode} onChange={this.onValueChange}\n                                                    onBlur={this.validatePostalcode}\n                                                    isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.meetingPlatform} onChange={this.onValueChange}\n                                                    onBlur={this.validateMeetingPlatform}\n                                                    isInvalid={this.state.meetingPlatformError}>\n                                                      <option>Select Project</option>\n                                                    <option value=\"Google Meet\">Google Meet</option>\n                                                    <option value=\"Skype\">Skype</option>\n                                                    <option value=\"Zoom\">Zoom</option>\n                                                    <option value=\"In person\">In person</option>\n                                                  </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n                                              \n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                    <Col xs={6}>\n                                            <Form.Group>\n                                                <div className=\"country\">\n                                                    <Form.Label className=\"required\">Country </Form.Label>\n                                                    <CountryDropdown as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country}\n                                                        onChange={(value) => this.selectCountry(value)}\n                                                    />\n                                                </div>\n                                                <div className=\"region\">\n                                                    <Form.Label>Region </Form.Label>\n                                                    <RegionDropdown\n                                                        country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                        as=\"select\" name=\"region\" value={this.state.region} onChange={(value) => this.selectRegion(value)}>\n                                                    </RegionDropdown>\n                                                </div>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row> \n                                    \n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"primary-button\" onClick={this.onClickBack}>\n                                              Back\n                                        </Button>\n                                        <Button className=\"primary-button\" onClick={this.onUpdate}>\n                                            Update\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditClient);","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * view Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nexport class ViewClient extends Component {\n \n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ClientId: props.history.location.state.state.ClientId,\n            clientName: props.history.location.state.state.ClientName,\n            organizationName: props.history.location.state.state.Organization,\n            contactNo: props.history.location.state.state.ContactNo,\n            websiteName: props.history.location.state.state.Website,\n            linkedInProfile: props.history.location.state.state.LinkedInProfile,\n            emailId: props.history.location.state.state.Email,\n            street: props.history.location.state.state.Street,\n            businessDescription: props.history.location.state.state.BusinessDescription,\n            postalCode: props.history.location.state.state.PostalCode,\n            meetingPlatform: props.history.location.state.state.MeetingPlatform,\n            country: props.history.location.state.state.Country,\n            region: props.history.location.state.state.Region\n        }       \n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event \n    */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                   <PageHeader title=\"View Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col xs={3}>\n                                            \n                                        </Col>\n                                        <Col xs={3}>\n                                            <Form.Group>\n                                                <Form.Label>Client Name: </Form.Label>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col xs={3}>\n                                            <Form.Group>\n                                                <Form.Label type=\"name\" name=\"clientName\"> {this.state.clientName} </Form.Label>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col xs={3}>\n                                            \n                                        </Col>\n                                        \n                                    </Row>\n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Contact No: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label type=\"name\" name=\"contactNo\"> {this.state.contactNo} </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>\n                                    </Row>\n                                    \n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Email: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label type=\"name\" name=\"emailId\">{this.state.emailId}</Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>\n                                    </Row>\n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Street: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label type=\"name\" name=\"street\"> {this.state.street} </Form.Label>    \n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>\n                                    </Row>\n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Postal Code: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label type=\"name\" name=\"postalCode\" > {this.state.postalCode} </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>\n                                    </Row>\n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Region: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label type=\"name\" name=\"region\" > {this.state.region} </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>\n                                    </Row>\n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Country: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label> {this.state.country} </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>\n                                    </Row>\n                                    \n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Organization: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label >{this.state.organizationName}</Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>                                     \n                                    </Row>\n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Website: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label type=\"name\" name=\"websiteName\">{this.state.websiteName}</Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>\n                                    </Row>\n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>LinkedIn Profile: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label >{this.state.linkedInProfile}</Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>    \n                                    </Row>\n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Business Description: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label >{this.state.businessDescription}</Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                \n                                            </Col>    \n                                    </Row>\n                                   \n                                    <Row>\n                                            <Col xs={3}>\n                                            \n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label>Meeting Platform: </Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3}>\n                                                <Form.Group>\n                                                    <Form.Label >{this.state.meetingPlatform}</Form.Label>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col xs={3} className=\"generate-button-container\">\n                                            <Button className=\"primary-button\" onClick={this.onClickBack}>\n                                              Back\n                                            </Button>  \n                                            </Col>\n                                              \n                                    </Row>\n                                   \n                                    \n                                    <Row >\n                                        \n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ViewClient);","import axios from \"axios\";\n\nexport class clientServices{\n    async list(){\n        const result = await axios.get(\"/api/clients\");\n        return result.data;\n    };\n}\n\nexport default new clientServices()","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n *  Services Page for Testimonials.\n */\n\nimport axios from \"axios\";\n\nexport class testimonialServices{\n\n    // list of all testimonials\n    async list(){\n        const result = await axios.get(\"/api/testimonials\");\n        return result.data;\n    };\n\n    // add data\n    async add(data){\n        const result = await axios.post(\"/api/testimonials/add\",data);\n        return result.data;\n    };\n\n    // update data by id\n    async update(data){\n        console.log(data);\n        const result = await axios.put(\"/api/testimonials/update/\"+data.id,data);\n        return result.data;\n    };\n\n    // remove data by id\n    async remove(data){\n        const result = await axios.delete(\"/api/testimonials/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new testimonialServices()","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n *  Frontend Page for Testimonials.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Datatable from '../components/Datatable';\nimport emailjs from 'emailjs-com';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport projectServices from '../services/projectsServices.js';\nimport clientServices from '../services/clientServices.js';\nimport testimonialServices from '../services/testimonialServices.js';\nvar dateFormat = require(\"dateformat\");\n\nconst Testimonials = () => {\n\n    const columns = [\n        { Header: '#', accessor: row => 1 },\n        { Header: 'Project', accessor: 'project' },\n        { Header: 'Client', accessor: 'client' },\n        { Header: 'Feedback', accessor: 'feedback' },\n        { Header: 'Requested on', accessor: row => dateFormat(row.requestedOn, \"dd-mm-yyyy, HH:MM:ss\") },\n        \n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (\n                <div className=\"action\">\n                    <div className=\"button-container\">\n                        <Button className=\"secondary-button\" onClick={() => setLgShow(true)}>View</Button>\n                        {/* <a href=\"#\">Re-Request</a> */}\n                        <Button className=\"delete-button\" align=\"right\"  onClick= {() => deleteTestimonial(row)} >Delete</Button>\n                    </div>\n                </div>\n            )\n        }\n    ];\n\n    // project details\n    const [project, setProjects] = useState([]);\n    useEffect(() => {\n        projectServices.list().then(res => setProjects(res.data));\n    },[]); \n\n    // client details\n    const [client, setClient] = useState([]);\n    useEffect(() => {\n        clientServices.list().then(res => setClient(res.data));\n    },[]); \n\n    // Testimonial Details\n    const [testimonial, setTestimonial] = useState([]);\n    useEffect(() => {\n        testimonialServices.list().then(res => setTestimonial(res.data));\n    },[]);\n\n    // Mailing Details\n    const [mailInfo, setMailInfo] = useState({\n        project: \"\",\n        client: \"\",\n        message: \"\",\n        id: \"\"\n    });\n\n    const storeData = (e) => {\n        e.preventDefault();\n        console.log(mailInfo);\n        testimonialServices.add(mailInfo).then(response => {\n            mailInfo.id = response.result._id\n        })\n\n        sendEmail(testimonialServices.add(mailInfo));\n    }\n\n    // Send Mail Module\n    function sendEmail(data) {\n        console.log('hello',mailInfo)\n        console.log(mailInfo);\n        const Form_Link = \"https://csci5709-group5-s21.herokuapp.com/testimonials/requestTestimonials/\" + mailInfo.id;\n\n        var mailParams = {\n            //Mail Sender Details\n            freelancerName: 'Freelancer_Deep',\n            freelancerMail: 'deepatel1607@gmail.com',\n\n            //Mail Reciver Details\n            clientName: 'Client_Deep',\n            clientMail: 'dee16798ppatel@gmail.com',\n\n            \n            //Attachment Messages\n            message: mailInfo.message,\n            link: Form_Link\n        };\n\n        // calling emailJS functionality\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n            .then(function (response) {\n                alert(\"Email Sent\");\n                console.log('SUCCESS!', response.status, response.text);\n\n            }, function (error) {\n                alert(\"Error: \" + error);\n                console.log('FAILED...', error);\n            });\n    }\n\n    // Delete testimonials\n    const deleteTestimonial = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...testimonial];\n            newData.splice(testimonial.index, 1);\n            console.log(newData);\n            setTestimonial(newData);\n        }\n    };\n\n    // handling changes\n    const handleChange = (e) => {\n        let newRequest = {...mailInfo, [e.target.name]: e.target.value};\n        setMailInfo(newRequest);\n    };\n\n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <div className=\"page-container add-testimonial-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonials\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col xs={12}>\n                            <div className=\"col-md-2 button-container\">\n                                <div className=\"row my-add-btn\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-7\">\n                                        <div className=\"add-testimonial-container\">\n                                            <div className=\"generate-button-container\">\n                                                <button className=\"primary-button\" type=\"button\" align=\"right\" onClick={() => setLgShow(true)}> Request</button>\n                                            </div>\n                                        </div>\n                                        <Modal\n                                            size=\"lg\"\n                                            show={lgShow}\n                                            onHide={() => setLgShow(false)}\n                                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                                        >\n                                            <Modal.Header closeButton>\n                                                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                                                    Request Testimonial\n                                                </Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                <Form id=\"contact-form\">\n\n                                                    <input type=\"hidden\" name=\"freelancerName\" id=\"freelancerName\" value=\"Freelancer_Deep\" />\n                                                    <input type=\"hidden\" name=\"freelancerMail\" id=\"freelancerMail\" value=\"deepatel1607@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"clientName\" id=\"clientName\" value=\"Client_Deep\" />\n                                                    <input type=\"hidden\" name=\"clientMail\" id=\"clientMail\" value=\"dee16798ppatel@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"message\" id=\"message\" value=\"From hidden\" />\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Project</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"project\"\n                                                            onChange={(e) => handleChange(e)} \n                                                        >\n                                                            <option>Select Project</option>\n                                                            {project.map(onlineUsersRow => (\n                                                                <option value={onlineUsersRow.title} >\n                                                                    {onlineUsersRow.title}\n                                                                </option>\n                                                            ))}\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Client</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"client\"\n                                                            onChange={(e) => handleChange(e)} \n                                                        >\n                                                            <option>Select Client</option>\n                                                            {client.map(onlineUsersRow => (\n                                                                <option value={onlineUsersRow.ClientName}>{onlineUsersRow.ClientName}</option>\n                                                            ))}\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                            <Form.Label className=\"required form-label\">Description Message</Form.Label>\n                                                            <Form.Control as=\"textarea\" name=\"message\" rows={3} id=\"message\" \n                                                                onChange={(e) => handleChange(e)} \n                                                            />\n                                                    </Form.Group>\n\n                                                    {/* <Button variant=\"primary\" type=\"submit\" id=\"button\" value=\"Send\" onClick={() => sendEmail(mailInfo)}> */}\n                                                    <Button variant=\"primary\" type=\"submit\" id=\"button\" value=\"Send\" onClick={storeData}>   \n                                                        Send\n                                                    </Button>\n                                                </Form>\n                                            </Modal.Body>\n                                        </Modal>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col xs={12}>\n                            <Datatable columns={columns} data={testimonial} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Testimonials\n","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n *  Frontend Page for Request Testimonials.\n */\n\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport testimonialServices from '../services/testimonialServices.js';\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\n\nconst RequestTestimonial = (prop) => {\n\n    const param = useParams();\n    const history = useHistory();\n\n    // feedback Details\n    const [feedback, setFeedback] = useState({\n        \n        feedback: \"\",\n        id : param.id\n    });\n\n    const handleChange = (e) => {\n        let newFeedback = {...feedback, [e.target.name]: e.target.value};\n        setFeedback(newFeedback);\n    };\n\n    // Calling updating API\n    const storeData = (e) => {\n        e.preventDefault();\n        console.log(feedback);\n        testimonialServices.update(feedback)\n    }\n\n    return (\n        <div>\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonial Request\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div>\n            <Row>    \n                <Col md = {5}></Col>\n                <Col md = {10}></Col>\n            </Row>\n            </div>\n            <Row>\n                    <Col md = {5}></Col>\n                    <Col md = {10}>\n                    <Form className=\"feedback-form\">\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group>\n                                        <Form.Label className=\"required form-label\">Feedback: </Form.Label>\n                                        <Form.Control as=\"textarea\" name=\"feedback\" rows={5} id=\"feedback\" placeholder=\"Please provide Feedback...\" \n                                            onChange={(e) => handleChange(e)} \n                                        />\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                <Button variant=\"primary\" type=\"submit\" id=\"feedbackSubmit\" onClick={storeData}>   \n                                    Submit\n                                </Button>\n                                </div>\n                                <div className=\"col-md-3\"></div>\n\n                    </Form>\n                    </Col>\n                    <Col md = {1}></Col>\n                </Row>\n\n            </div>\n        </div>    \n    )\n}\n\nexport default RequestTestimonial\n","import React,{Component} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport {Button,Col,Row} from \"react-bootstrap\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/InvoiceManagement.scss\";\nimport invoiceServices from \"../services/invoiceServices\";\nexport class InvoiceManagement extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state={\n        checkbox : 'true',\n        delete:'false',\n        columns : [\n            { Header: 'Invoice Number', accessor: 'invoicename'},\n            { Header: 'Generated Date', accessor: 'generateddate'},\n            { Header: 'Due Date', accessor: 'duedate'},\n            { Header: 'Client Name', accessor: 'clientname'},\n            { Header: 'Project Name', accessor: 'projectname'},\n            { Header: 'Payment Status', accessor: 'paymentstatus'},\n            { Header: 'Action', accessor: 'button1',\n                Cell:({row}) =>  (\n                <div>\n                    <Button  className=\"secondary-button\" onClick={() => this.editInvoice(row)}>Edit</Button>\n                    <Button  className=\"secondary-button\" onClick={() => this.viewInvoice(row)}>View</Button> \n                    <Button  className=\"delete-button\" onClick={() => this.deleteInvoice(row)}>Delete</Button>\n                </div>)},\n        ],\n        data:[]\n        }\n    }\n\n    getAllInvoices() {\n        \n        invoiceServices.getAllInvoices().then((response) => {\n            if (response.status == 200) {\n               let invoiceDetails = [];\n               response.data.forEach(element => {\n                            \n                let row = {}\n                row.invoicename = element.invId;\n                row.generateddate = element.generatedDate;\n                row.duedate = element.dueDate;\n                row.clientname = element.clientName;\n                row.projectname = element.projectName;\n                row.paymentstatus = element.paymentStatus;\n                \n                invoiceDetails.push(row)\n    \n               });\n               if(invoiceDetails.length !=0)\n               this.setState({\n                data: invoiceDetails\n              })\n           \n            }\n          }).catch((error) => {\n                    console.log(error)\n            })\n    }\n    \n    componentDidMount() {\n      this.getAllInvoices()\n    }\n    \n    editInvoice=(row)=>{\n        this.props.history.push({ pathname:'/editinvoice' }, {\n            state: row.original.invoicename\n          })\n    }\n    viewInvoice=(row)=>{\n       \n        console.log(\"enterd\");\n        this.props.history.push({ pathname:'/invoice-generation' }, {\n            state: row.original.invoicename\n          })\n    }\n    deleteInvoice = (row) => {\n        invoiceServices.deleteinvoice(row.original).then((response) => {\n            if(response){\n                this.setState({delete:'true'})\n                alert(\"Invoice Deleted\")\n                this.getAllInvoices()\n            }\n        }).catch((error) => {\n            console.log(\"Eroor\")\n       })\n    }\n    \n    handleClick=(e)=>{\n        this.setState({checkbox:'true'})\n    }\n\nrender() {\n    return (\n\n    <div className=\"page-container-container\">\n        <div className=\"page-header-container\">\n           <PageHeader title=\"Invoice Management\" subtitle=\"\" />\n        </div>\n        <div className=\"page-content-container\">\n            <div className=\"page-content\"></div>\n            <Datatable columns={this.state.columns} data={this.state.data} allowCSV=\"false\"/>\n        </div>\n    </div>\n)\n        }\n}\nexport default withRouter(InvoiceManagement)","/**\n * Author: Bansi Mehta\n * Created On: 20201-07-20\n * Service containing api calls for TO-DO List.\n */\nimport axios from \"axios\"\nexport class TodoListService {\n    async getAllTasks(date) {\n        const result = await axios.post(\"/api/todoLists/getList\", { \"currentDate\": date });\n        return result;\n    }\n\n    async markTaskAsDone(id) {\n        const result = await axios.put(\"/api/todoLists/markAsDone\", { \"id\": id });\n        return result;\n    }\n\n    async deleteTask(id) {\n        const result = await axios.delete(\"/api/todoLists/deleteItem/\" + id);\n        return result;\n    }\n\n    async saveTask(saveData) {\n        const result = await axios.post(\"/api/todoLists/saveItem\", saveData);\n        return result;\n    }\n}\n\nexport default new TodoListService()","/**\n * Author: Bansi Mehta.\n * Created On: 2021-06-07\n * Todo list component.\n */\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { Container, Col, Row, Button } from 'react-bootstrap'\nimport { Card } from 'react-bootstrap';\nimport moment from \"moment\";\nimport axios from 'axios'\nimport \"../styles/TodoList.scss\";\nimport PageHeader from \"../components/PageHeader\";\nimport todoListService from \"../services/TodoListService\";\nexport class TodoList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        const currentDate = moment().format('YYYY-MM-DD')\n        this.state = {\n            completeTasks: [],\n            incompleteTasks: [],\n            date: currentDate,\n            newTask: ''\n        }\n\n        this.item = {\n            title: '',\n            status: false,\n            date: currentDate\n        }\n    }\n\n    componentDidMount() {\n        this.getAllData(this.state.date)\n    }\n\n    /**\n     * On value change of a control, set it in state.\n     * @param {*} event \n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * Get all the tasks based on date.\n     * Date format: \"YYYY-MM-DD\".\n     * Divide the tasks received into groups: complete and incomplete to display.\n     * @param {*} date \n     */\n    getAllData(date) {\n        todoListService.getAllTasks(date).then(response => {\n            if (response.status === 200) {\n                if (response.data && response.data.result && response.data.result.length) {\n                    let completeTask = []\n                    let incompleteTask = []\n                    response.data.result.forEach(row => {\n                        if (row && row.status == true) {\n                            completeTask.push(row)\n                        } else {\n                            incompleteTask.push(row)\n                        }\n                    })\n                    this.setState({ completeTasks: completeTask })\n                    this.setState({ incompleteTasks: incompleteTask })\n                } else {\n                    this.setState({ completeTasks: [] })\n                    this.setState({ incompleteTasks: [] })\n                }\n            }\n        })\n    }\n\n    /**\n     * Mark the task item as complete based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemComplete(rowData) {\n        todoListService.markTaskAsDone(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date)\n                alert(\"Task completed successfully\");\n            }\n        })\n    }\n\n    /**\n     * Delete the task based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemDelete(rowData) {\n        todoListService.deleteTask(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date);\n                alert(\"Task deleted successfully\");\n            }\n        })\n    }\n\n    /**\n     * Add new task.\n     * Refresh the list if successful.\n     * @param {*} event \n     */\n    saveItem = (event) => {\n        event.preventDefault()\n        if (this.state.newTask) {\n            let saveData = {\n                title: this.state.newTask,\n                date: this.state.date\n            }\n            todoListService.saveTask(saveData).then(response => {\n                if (response.status == 200) {\n                    this.setState({ newTask: '' })\n                    this.getAllData(this.state.date)\n                    alert(\"Task added successfully\");\n                }\n            })\n        } else {\n            alert(\"Cannot enter empty task\")\n        }\n        \n    }\n\n    /**\n     * Date navigation: Get previous date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getPreviousDate = (event) => {\n        let previousDate = moment(this.state.date, 'YYYY-MM-DD').subtract(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: previousDate })\n        this.getAllData(previousDate)\n    }\n\n    /**\n     * Date navigaiton: Get next date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getNextDate = (event) => {\n        let nextDate = moment(this.state.date, 'YYYY-MM-DD').add(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: nextDate })\n        this.getAllData(nextDate)\n    }\n\n    render() {\n        return (\n            <div className=\"page-container to-do-list-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Todo List\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Container className=\"to-do-list-content\">\n                            <Row className=\"date-row\">\n                                <Col className=\"date-control\">\n                                    <span className=\"navigate-date\" onClick={this.getPreviousDate}>\n                                        <i className=\"fas fa-chevron-left\"></i>\n                                    </span>\n                                    <span>\n                                        {this.state.date}\n                                    </span>\n                                    <span className=\"navigate-date\" onClick={this.getNextDate}>\n                                        <i className=\"fas fa-chevron-right\"></i>\n                                    </span>\n                                </Col>\n                            </Row>\n                            <Row className=\"add-row\">\n                                <div className=\"add-text\">\n                                    <input type=\"text\" palceholder=\"Add task\" name=\"newTask\" value={this.state.newTask} onChange={this.onValueChange} className=\"input-control\" />\n                                </div>\n                                <div className=\"add-button\">\n                                    <Button className=\"primary-button add-button\" onClick={this.saveItem}>Add</Button>\n                                </div>\n                            </Row>\n                            <Row className=\"to-do-list-items\">\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.incompleteTasks.map(row => (\n                                            <Card className=\"card-content-incomplete\">\n                                                <Row className=\"card-item\">\n                                                    <Col xs={3} md={2} className=\"card-item-content\">\n                                                        <input type=\"checkbox\" checked={row.status} onClick={() => this.taskItemComplete(row)}></input>\n                                                    </Col>\n                                                    <Col xs={3} md={7} className=\"card-item-content\">\n                                                        <Card.Body>\n                                                            <Card.Title>{row.title}</Card.Title>\n                                                        </Card.Body>\n                                                    </Col>\n                                                    <Col xs={3} md={3} className=\"card-item-content\">\n                                                        <Button className=\"primary-button\" onClick={() => this.taskItemDelete(row)}>Delete</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.completeTasks.map(row => (\n                                            <Card className=\"card-content-complete\">\n                                                <Card.Body>\n                                                    <Card.Title className=\"card-item-completed\">{row.title}</Card.Title>\n                                                </Card.Body>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default withRouter(TodoList);","import React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nexport default function Calendar(){\n    \n    const events = [{ title: \"today's event\", date: new Date() }];\n\n    const handleDateClick = (arg) => {\n        var dateevent = prompt(\"Enter an event for date: \"+arg.dateStr);\n    }\n\n    return (\n        <div>\n            <PageHeader title=\"Calendar\"/>\n            <FullCalendar\n                defaultView=\"dayGridMonth\"\n                plugins={[dayGridPlugin, interactionPlugin]}\n                events={events}\n                dateClick={handleDateClick}\n            />\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"./EditInvoice.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport invoiceServices from \"../services/invoiceServices\";\n\nexport class EditInvoice extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state={\n            projectId: props && props.history && props.history.location&&props.history.location.state &&props.history.location.state.state?props.history.location.state.state:0,\n            paymentstatus:\"\",\n            invoiceNumber:\"\",\n            projects:\"\",\n            clientName:\"\",\n            generatedDate:\"\",\n            dueDate:\"\",\n            hourlyRate:\"\",\n            Total:\"\",\n            paymentstatus:\"\",\n            paymentPreStatus:\"\",\n            taskendDate:\"\"\n            \n        }}\n\n        componentDidMount() {\n          \n            invoiceServices.findInvoice(this.state).then((response) =>{\n               \n                if (response.status == 200){\n                    this.setState({project: response.data.projectName})\n                    this.setState({clientName:response.data.clientName})\n                    this.setState({generatedDate: response.data.generatedDate})\n                    this.setState({Total:response.data.totalCost})\n                    this.setState({invoiceNumber:response.data.invId})\n                    this.setState({hourlyRate:response.data.hourlyRate})\n                    this.setState({paymentPreStatus:response.data.paymentStatus})\n                    this.setState({taskendDate:response.data.paymentStatus})\n                } \n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n\n        onValueChange = (event) => {\n            this.setState({\n                [event.target.name]: event.target.value\n            });\n        }\n    \n        validateDueDate = (event) => {\n            let isValid = true;\n            if (this.state.dueDate) {\n                const today = new Date()\n                const selectedDate = new Date(this.state.dueDate)\n                if (selectedDate < today) {\n                    this.setState({ dueDateError: \"Due Date cannot be past date\" })\n                    isValid = false;\n                }\n                else {\n                    this.setState({ dueDateError: \"\" })\n                }\n            } \n            return isValid;\n        }\n    \n    \n        validateForm = (event) => {\n            let isValid = true\n            if (!this.validateDueDate()) {\n                isValid = false;\n            }\n           \n            return isValid;\n        }\n        update = (e) =>{\n            if(this.validateForm()){\n                if(!this.state.paymentstatus && !this.state.dueDate){\n                    alert(\"Please fill the field\")\n                }else{\n                    \n                    invoiceServices.updateInvoice(this.state).then((response) => {\n                    if(response){\n                        alert(\"Updated Successfully\")\n                        this.cancel()\n                    }\n                }).catch((error) => {\n                     console.log(error)\n                })\n                \n            }\n        }   \n        }\n        \n        cancel = (e) =>{\n            this.props.history.push('/invoicemanagement')\n        }\n       \n        render() {\n            return (\n                <div className=\"page-container edit-invoice-generation-container\">\n                    <div className=\"page-header-container\">\n                        {this.state.readonly ? (<PageHeader title=\"Invoice Details\" subtitle=\"\" />)\n                        :(<PageHeader title=\"Invoice Generation\" subtitle=\"\" />)}\n                    </div>\n                    <div className=\"page-content-container\">\n                        <div className=\"page-content\">\n                            <Row className=\"invoice-generation-content\">\n                                <Col>\n                                    <Form>\n                                        <div className=\"generate-forms\">\n                                            <Row>\n                                                <Col>\n                                                    <span>\n                                                        <div>Invoice Number :{this.state.invoiceNumber}</div>\n                                                        <div>Project Name :  {this.state.projects}</div>\n                                                        <div>Client Name : {this.state.clientName}</div>\n                                                        <div>Invoice Genrated : {this.state.generatedDate} </div>\n                                                        <div>Hourly Rate :{this.state.hourlyRate} CAD </div>\n                                                        <div>Total Amount :{this.state.Total} CAD </div>\n                                                        \n                                                    </span>\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required\">Payment Status</Form.Label>\n                                                        <Form.Control type=\"text\" name=\"paymentstatus\" value={this.state.paymentstatus} onChange={this.onValueChange}>\n                                                        </Form.Control>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            {this.state.projectError}\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Group>\n                                                        <div className=\"inline-date-control\">\n                                                            <div className=\"due-date-control\">\n                                                                <div>\n                                                                    <Form.Label className=\"required\">Invoice Duedate</Form.Label>\n                                                                </div>\n                                                                <Form.Control type=\"date\" className=\"start-date\" name=\"dueDate\" placeholder=\"Due Date\" value={this.state.dueDate} onChange={this.onValueChange}\n                                                                    onBlur={this.validateDate}\n                                                                    isInvalid={this.state.dueDateError} />\n                                                                <Form.Control.Feedback type=\"invalid\">\n                                                                    {this.state.dueDateError}\n                                                                </Form.Control.Feedback>\n                                                            </div>\n                                                        </div>\n                                                    </Form.Group>\n                                                </Col>\n            \n                                            </Row>\n                                        </div>\n                                    </Form>\n                                </Col>\n                            </Row>\n                            <div className=\"generate-buttons\">         \n                                <Row className=\"generate-button-container\">\n                                    <Button className=\"primary-button\" onClick={this.update}>\n                                        Update Invoice\n                                    </Button>\n                                    <Button className=\"secondary-button\" onClick={this.cancel}>\n                                        Cancel\n                                    </Button>\n                                </Row> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n}\nexport default withRouter(EditInvoice)","/* Author: Team */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AppLayout from \"./layouts/AppLayout\";\nimport DashboardLayout from \"./layouts/DashboardLayout\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport InvoiceGeneration from \"./pages/InvoiceGeneration\";\nimport Timelogs from \"./pages/Timelogs\";\nimport Projects from \"./pages/Projects\";\nimport AddProject from \"./pages/AddProject\";\nimport EditProject from \"./pages/EditProject\";\nimport Clients from \"./pages/Clients\";\nimport AddClient from \"./pages/AddClient\";\nimport EditClient from \"./pages/EditClient\";\nimport ViewClient from \"./pages/ViewClient\";\nimport Testimonials from \"./pages/Testimonials\";\nimport RequestTestimonials from \"./pages/RequestTestimonial\";\nimport InvoiceManagement from \"./pages/InvoiceManagement\"\nimport TodoList from \"./pages/TodoList\"\nimport Calendar from \"./pages/Calendar\";\nimport EditInvoice from \"./pages/EditInvoice\"\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <AppLayout>\n                        <Home />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/login\">\n                    <AppLayout>\n                        <Login />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/register\">\n                    <AppLayout>\n                        <Register />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/dashboard\">\n                    <DashboardLayout>\n                        <Dashboard />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/projects\">\n                    <DashboardLayout>\n                        <Projects />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/add\">\n                    <DashboardLayout>\n                        <AddProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/edit/:id\">\n                    <DashboardLayout>\n                        <EditProject />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/timelogs\">\n                    <DashboardLayout>\n                        <Timelogs />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/invoice-generation\">\n                    <DashboardLayout>\n                        <InvoiceGeneration />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/clients\">\n                    <DashboardLayout>\n                        <Clients />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/AddClient\">\n                    <DashboardLayout>\n                        <AddClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/EditClient\">\n                    <DashboardLayout>\n                        <EditClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/ViewClient\">\n                    <DashboardLayout>\n                        <ViewClient />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/testimonials\">\n                    <DashboardLayout>\n                        <Testimonials />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/testimonials/requestTestimonials/:id\">\n                    <AppLayout>\n                        <RequestTestimonials />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/invoicemanagement\">\n                    <DashboardLayout>\n                        <InvoiceManagement />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/editinvoice\">\n                    <DashboardLayout>\n                        <EditInvoice />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/todolist\">\n                    <DashboardLayout>\n                        <TodoList />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/calendar\">\n                    <DashboardLayout>\n                        <Calendar />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/\">\n                    <div>404 Page not found.</div>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/bootstrap_custom.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/style.scss';\nimport './styles/button_style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}