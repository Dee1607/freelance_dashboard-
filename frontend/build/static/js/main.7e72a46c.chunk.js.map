{"version":3,"sources":["components/AppNavbar.js","layouts/AppLayout.js","components/DashboardNavbar.js","components/DashboardSidebar.js","layouts/DashboardLayout.js","pages/Home.js","pages/Login.js","pages/Register.js","components/PageHeader.js","pages/Dashboard.js","components/Datatable.js","pages/InvoiceGeneration.js","services/timelogServices.js","services/projectServices.js","pages/Timelogs.js","pages/AddProject.js","pages/Projects.js","pages/EditProject.js","pages/AddClient.js","pages/Clients.js","pages/Testimonials.js","pages/InvoiceManagement.js","services/TodoListService.js","pages/TodoList.js","pages/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Navbar","className","Container","Brand","href","Nav","Link","AppLayout","children","DashboardNavbar","title","Sidebar","props","location","useLocation","useState","open","setOpen","Toggle","onClick","Collapse","in","Overflow","ToC","Item","pathname","DashboardLayout","fluid","Row","Col","md","as","DashboardSidebar","Home","Login","history","useHistory","email","setEmail","password","setPassword","handleSubmit","e","a","preventDefault","push","onSubmit","type","placeholder","id","name","value","onChange","target","Button","variant","Register","checkEmail","checkPassword","confirmPassword","registrationInfo","setRegistrationInfo","nameError","emailError","passwordError","confirmPasswordError","registrationErrors","setRegistrationErrors","handleChange","newRegistration","valid","newRegError","test","alert","Form","Label","required","PageHeader","subtitle","Dashboard","Datatable","columns","data","allowCSV","allowSearch","tableInstance","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","globalFilter","span","filename","offset","Group","Control","Table","bordered","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","style","width","Number","Pagination","First","disabled","Prev","Array","fill","v","Next","Last","length","InvoiceGeneration","onValueChange","event","setState","validateClient","isValid","client","clientError","validateProject","project","projectError","validateDate","validateStartDate","validateEndDate","startDate","today","Date","startDateError","endDate","endDateError","validateHourlyRate","hourlyRate","hourlyRateError","validateForm","generateInvoice","setDummyData","Header","accessor","dummyData","this","description","hours","total","onBlur","isInvalid","Feedback","Component","withRouter","axios","get","result","projectId","post","console","log","put","_id","delete","Timelogs","moment","startAt","format","endAt","Cell","deleteTask","setData","useEffect","timelogServices","list","then","res","lastTask","setTask","restartTimer","timerState","setTimerState","now","timerStart","setTimerStart","setTimerEnd","timerString","setTimerString","timer","setTimer","centiseconds","Math","floor","slice","seconds","minutes","setInterval","projects","setProjects","projectServices","task","taskError","setTaskError","showModal","setShowModal","newTask","handleModalClose","startTask","newTaskError","isTaskValid","add","window","confirm","newData","remove","message","splice","index","Card","Body","Title","fontSize","Subtitle","clearInterval","update","Modal","show","onHide","closeButton","Text","filter","includes","Footer","AddProjects","invoice","rate","status","setProject","setProjectError","newProject","newProjectError","Redirect","isProjectValid","min","Projects","editProject","url","EditProjects","prop","useParams","AddClient","clientNameError","validateOrganization","organizationName","organizationNameError","validateContactNo","contactNo","contactNoError","RegExp","validateWebsiteName","websiteName","websiteNameError","validateEmailId","emailId","emailIdError","validateLinkedInProfile","linkedInProfile","linkedInProfileError","validateStreet","street","streetError","validatePostalcode","postalCode","PostalCodeError","validateMeetingPlatform","meetingPlatform","meetingPlatformError","clientName","businessDescription","country","region","val","validateClientName","validatebusinessDescription","defaultOptionLabel","selectCountry","blankOptionLabel","selectRegion","Clients","ClientName","organization","ContactNo","Emailid","handleNewClient","bind","align","Testimonials","setLgShow","no","requestedOn","testimonial","lgShow","xs","size","aria-labelledby","emailjs","send","freelancerName","freelancerMail","clientMail","response","text","error","InvoiceManagement","handleClick","checkbox","button1","invoicename","generateddate","duedate","clientname","projectname","paymentstatus","date","saveData","TodoList","saveItem","todoListService","saveTask","getAllData","getPreviousDate","previousDate","subtract","getNextDate","nextDate","currentDate","completeTasks","incompleteTasks","item","getAllTasks","completeTask","incompleteTask","forEach","rowData","markTaskAsDone","palceholder","lg","checked","taskItemComplete","taskItemDelete","Calendar","events","defaultView","plugins","dayGridPlugin","interactionPlugin","dateClick","arg","prompt","dateStr","App","exact","path","EditProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e72a46c.chunk.js","sourcesContent":["/* Author: Vishal Sancheti */\n\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/AppNavbar.scss\"\n\nexport default function AppNavbar(){\n    return (\n        <Navbar className=\"app-nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"app-nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"login\">Login</Nav.Link>\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"register\">Register</Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport AppNavbar from \"../components/AppNavbar\";\nimport {Container} from \"react-bootstrap\";\n\n// Page Wrapper for Application Pages\nconst AppLayout =({children}) =>{\n    return(\n        <>\n            <header>\n                <AppNavbar/>\n            </header>\n            <main>\n                <Container>\n                    {children}\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default AppLayout;","/* Author: Vishal Sancheti */\n\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/DashboardNavbar.scss\";\n\nexport default function DashboardNavbar(){\n    return (\n        <Navbar className=\"nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link title=\"Notification\" className=\"nav-bar-link\" href=\"#notification\">\n                        <i className=\"fas fa-bell\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Profile\" className=\"nav-bar-link\" href=\"#profile\">\n                        <i className=\"fas fa-user\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Log Out\" className=\"nav-bar-link\" href=\"/\">\n                        <i className=\"fas fa-sign-out-alt\"/>\n                    </Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport '../styles/style.scss';\nimport React, { useState } from 'react';\nimport {Collapse} from 'react-bootstrap';\nimport { Drawer } from 'react-bootstrap-drawer';\nimport '../styles/DashboardSidebar.scss';\nimport { useLocation } from 'react-router-dom'\n\nexport default function Sidebar(props) {\n    const location = useLocation();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    return (\n        <Drawer { ...props }>\n            <Drawer.Toggle onClick={ handleToggle } />\n\n            <Collapse in={ open }>\n                <Drawer.Overflow>\n                    <Drawer.ToC>\n                        <Drawer.Item href=\"/dashboard\">\n                            <span className={location.pathname === \"/dashboard\" ? 'nav-item-active' : ''}>Dashboard</span>\n                        </Drawer.Item>\n\n                        <Drawer.Nav>\n                            <Drawer.Item href=\"/clients\">\n                                <span className={location.pathname === \"/clients\" ? 'nav-item-active' : ''}>Clients</span>\n                            </Drawer.Item>\n                            <Drawer.Item  href=\"/projects\">\n                                <span className={location.pathname === \"/projects\" ? \"nav-item-active\" : ''}>Projects</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/timelogs\">\n                                <span className={location.pathname === \"/timelogs\" ? 'nav-item-active' : ''}>Time Logs</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/invoicemanagement\">\n                                <span className={location.pathname === \"/invoicemanagement\" ? 'nav-item-active' : ''}>Invoices</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/invoice-generation\">\n                                <span className={location.pathname === \"/invoice-generation\" ? 'nav-item-active' : ''}>Invoice Generation</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/testimonials\">\n                                <span className={location.pathname === \"/testimonials\" ? 'nav-item-active' : ''}>Testimonials</span>\n                            </Drawer.Item>\n\n                            <hr className=\"horizontal-break\"/>\n\n                            <Drawer.Item href=\"/todolist\">\n                                <span className={location.pathname === \"/todolist\" ? 'nav-item-active' : ''}>ToDo</span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/calendar\">\n                                <span className={location.pathname === \"/calendar\" ? 'nav-item-active' : ''}>Calendar</span>\n                            </Drawer.Item>\n                        </Drawer.Nav>\n                    </Drawer.ToC>\n                </Drawer.Overflow>\n            </Collapse>\n        </Drawer>\n    );\n};","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport DashboardNavbar from \"../components/DashboardNavbar\";\nimport DashboardSidebar from \"../components/DashboardSidebar\";\nimport {Col, Container, Row} from \"react-bootstrap\";\n\n// Page Wrapper for Dashboard Pages\nconst DashboardLayout =({children}) =>{\n    return(\n        <>\n            <header>\n                <DashboardNavbar/>\n            </header>\n            <main>\n                <Container fluid>\n                    <Row>\n                        <Col md={2} as={DashboardSidebar} />\n                        <Col md={10}>\n                            {children}\n                        </Col>\n                    </Row>\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default DashboardLayout;","import React from 'react';\n\nexport default function Home(){\n    return (\n        <div>\n            Home Page\n        </div>\n    )\n}","import React from 'react';\nimport { useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nexport default function Login(){\n\n    let history = useHistory();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [user, setUser] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        if(email === \"admin@gmail.com\" && password === \"admin@123\"){\n            history.push(\"/dashboard\",email);\n        }\n      };\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Log in</h3>\n\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <input \n                                type=\"email\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email. Eg:'admin@gmail.com' \"\n                                id = \"email\"\n                                name = \"email\"\n                                value={email}\n                                onChange={({ target }) => setEmail(target.value)} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password Eg:'admin@123\"\n                                id = \"password\"\n                                name = \"password\"\n                                value={password}\n                                onChange={({ target }) => setPassword(target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <div>\n                                <input type=\"checkbox\" id=\"customCheck1\" />\n                                <label>Remember me</label>\n                            </div>\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">Sign in</Button>\n                        <p className=\"forgot-password text-right\">\n                            Forgot <a href=\"#\">password?</a>\n                        </p>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\n\nexport default function Register(){\n\n    let history = useHistory();\n\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n\n    const [registrationInfo, setRegistrationInfo] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [registrationErrors, setRegistrationErrors] = useState({\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n        confirmPasswordError: ''\n    });\n\n    const handleChange = (e) => {\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\n        setRegistrationInfo(newRegistration);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        setRegistrationErrors({\n            nameError: '',\n            emailError: '',\n            passwordError: '',\n            confirmPasswordError: ''\n        })\n\n        let newRegError = {...registrationErrors};\n\n        if(registrationInfo.name === \"\"){\n            newRegError.nameError = \"Please enter name!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.nameError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.email === \"\"){\n            newRegError.emailError = \"Please enter email!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkEmail.test(registrationInfo.email)){\n                newRegError.emailError = \"Email Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.emailError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n        \n\n        if(registrationInfo.password === \"\"){\n            newRegError.passwordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkPassword.test(registrationInfo.password)){\n                newRegError.passwordError = \"Password Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.passwordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.confirmPassword === \"\"){\n            newRegError.confirmPasswordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if((registrationInfo.password) !==  registrationInfo.confirmPassword){\n                newRegError.confirmPasswordError = \"Password does not match!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.confirmPasswordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n\n        if(valid === true){\n            alert(\"Registration Successful!!\");\n            history.push(\"/login\");\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Register</h3>\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Name</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter Name\"\n                                id = \"name\"\n                                name = \"name\"\n                                required=\"required\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email\"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Confirm Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm your password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.confirmPasswordError}</p>\n\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Register </Button>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport \"../styles/PageHeader.scss\"\nconst PageHeader =(props) =>{\n    return(\n        <>\n            <div className=\"page-header-title\">{props.title}</div>\n            <div className=\"page-header-subtitle\">{props.subtitle}</div>\n        </>\n    )\n}\n\nexport default PageHeader;","import React from 'react';\nimport PageHeader from \"../components/PageHeader\";\n\nexport default function Dashboard(){\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Dashboard\" subtitle=\"\"/>\n            </div>\n            <div className=\"page-content-container\">\n                {/* page content goes here */}\n            </div>\n        </div>\n        \n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport {useGlobalFilter, usePagination, useSortBy, useTable} from \"react-table\";\nimport {Col, Form, Row, Table} from \"react-bootstrap\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport {CSVLink} from \"react-csv\";\n\nconst Datatable = (props) => {\n    //Init\n    const columns = props.columns;\n    const data = props.data;\n    const allowCSV = props.allowCSV == \"false\" ? false : true;\n    const allowSearch = props.allowSearch == \"false\" ? false : true;\n    const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } },\n        useGlobalFilter,\n        useSortBy,\n        usePagination);\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setGlobalFilter,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageSize, globalFilter }\n    } = tableInstance;\n\n    return (\n        <div>\n            <Row>\n                {/*Conditional Display Export CSV Button*/}\n                {allowCSV ?\n                    (<Col md={{ span: 2 }} className=\"my-2\">\n                        <CSVLink data={data} filename={\"export.csv\"} className=\"secondary-button btn btn-secondary\" target=\"_blank\">\n                            Export CSV\n                        </CSVLink>\n                    </Col>)\n                    : (<></>)\n                }\n\n                {/*Conditional Display Search Form*/}\n                {allowSearch ?\n                    (<Col md={{ span: 2, offset: 8 }}>\n                        <Form.Group>\n                            <Form.Control type=\"search\" placeholder=\"Search\"\n                                          value={globalFilter || \"\"}\n                                          onChange={e => setGlobalFilter(e.target.value)} />\n                        </Form.Group>\n                    </Col>)\n                    : (<></>)\n                }\n            </Row>\n\n            {/*Table*/}\n            <div className=\"table-responsive\">\n                <Table bordered striped {...getTableProps()}>\n                    <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    <span>{column.isSorted ?\n                                        column.isSortedDesc ?\n                                            ' 🔽': ' 🔼'\n                                        : ''}</span>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n\n            {/*Filters and Pagination*/}\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <Form.Control as=\"select\" style={{ width: \"100px\" }}\n                                      value={pageSize}\n                                      onChange={(e) => {\n                                          setPageSize(Number(e.target.value));\n                                      }}>\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                                <option key={pageSize} value={pageSize}>\n                                    Show {pageSize}\n                                </option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Pagination className=\"justify-content-end\">\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage}/>\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\n                        {Array(pageCount).fill().map((v,i) => (\n                            <Pagination.Item onClick={() => gotoPage(i)}>{i+1}</Pagination.Item>\n                        ))}\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}/>\n                    </Pagination>\n                </Col>\n            </Row>\n\n            {/*Table Info*/}\n            <Row>\n                <Col>\n                    <span>Showing {pageSize} results of {rows.length} rows</span>\n                </Col>\n            </Row>\n        </div>\n    )\n};\n\nexport default Datatable;\n","import React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/InvoiceGeneration.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n\nexport class InvoiceGeneration extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            client: \"\",\n            clientError: \"\",\n            startDate: \"\",\n            startDateError: \"\",\n            endDate: \"\",\n            endDateError: \"\",\n            hourlyRate: \"\",\n            hourlyRateError: \"\",\n            project: \"\",\n            projectError: \"\"\n        }\n\n        this.columns = [\n            { Header: 'Description', accessor: 'description' },\n            { Header: 'Time (hours)', accessor: 'hours' },\n            { Header: 'Total', accessor: 'total' }\n        ];\n\n        this.dummyData = [];\n    }\n\n    setDummyData() {\n        this.dummyData = [\n            {\n                description: 'Dashboard',\n                hours: 5,\n                total: this.state.hourlyRate * 5\n            },\n            {\n                description: 'Clients',\n                hours: 2,\n                total: this.state.hourlyRate * 2\n            },\n            {\n                description: 'Projects',\n                hours: 3,\n                total: this.state.hourlyRate * 3\n            },\n            {\n                description: 'Invoices',\n                hours: 4,\n                total: this.state.hourlyRate * 4\n            },\n            {\n                description: 'Invoice Generation',\n                hours: 0.5,\n                total: this.state.hourlyRate * 0.5\n            }\n        ]\n    }\n\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.client) {\n            this.setState({ clientError: \"Client is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateProject = (event) => {\n        let isValid = true;\n        if (!this.state.project) {\n            this.setState({ projectError: \"Project is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateDate = (event) => {\n        let isValid = true;\n        if (!this.validateStartDate()) {\n            isValid = false;\n        }\n        if (!this.validateEndDate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateStartDate = (event) => {\n        let isValid = true;\n        if (this.state.startDate) {\n            const today = new Date()\n            const selectedDate = new Date(this.state.startDate)\n            if (selectedDate > today) {\n                this.setState({ startDateError: \"Start Date cannot be future date\" })\n                isValid = false;\n            } else {\n                this.setState({ startDateError: \"\" })\n            }\n        } else {\n            this.setState({ startDateError: \"Start Date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateEndDate = (event) => {\n        let isValid = true;\n        const startDate = new Date(this.state.startDate)\n        const endDate = new Date(this.state.endDate)\n        if (startDate && endDate) {\n            if (startDate > endDate) {\n                this.setState({ endDateError: \"End Date cannot be less than start date\" })\n                isValid = false;\n            } else {\n                this.setState({ endDateError: \"\" })\n            }\n        } else {\n            this.setState({ endDateError: \"End date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateHourlyRate = (event) => {\n        let isValid = true;\n        if (!this.state.hourlyRate) {\n            this.setState({ hourlyRateError: \"Hourly Rate is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateProject()) {\n            isValid = false;\n        }\n        if (!this.validateDate()) {\n            isValid = false;\n        }\n        if (!this.validateHourlyRate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    generateInvoice = (event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n            this.setDummyData();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"page-container invoice-generation-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Invoice Generation\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"invoice-generation-content\">\n                            <Col>\n                                <Form>\n                                    <div className=\"generate-forms\">\n                                        <Row>\n                                            <Col>\n                                                <Form.Group>\n                                                    <Form.Label className=\"required\">Client</Form.Label>\n                                                    <Form.Control as=\"select\" name=\"client\" value={this.state.client} onChange={this.onValueChange}\n                                                        onBlur={this.validateClient}\n                                                        isInvalid={this.state.clientError}>\n                                                        <option>Select Client</option>\n                                                        <option value=\"1\">Freelancer dashboard</option>\n                                                        <option value=\"2\">SIS</option>\n                                                        <option value=\"3\">VM</option>\n                                                    </Form.Control>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {this.state.clientError}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group>\n                                                    <Form.Label className=\"required\">Project</Form.Label>\n                                                    <Form.Control as=\"select\" name=\"project\" value={this.state.project} onChange={this.onValueChange}\n                                                        onBlur={this.validateProject}\n                                                        isInvalid={this.state.projectError}>\n                                                        <option>Select Project</option>\n                                                        <option value=\"1\">Freelancer dashboard</option>\n                                                        <option value=\"2\">SIS</option>\n                                                        <option value=\"3\">VM</option>\n                                                    </Form.Control>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {this.state.projectError}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Group>\n                                                    <div>\n                                                        <Form.Label className=\"required\">Invoice Duration</Form.Label>\n                                                    </div>\n                                                    <div className=\"inline-date-control\">\n                                                        <div className=\"start-date-control\">\n                                                            <Form.Control type=\"date\" className=\"start-date\" name=\"startDate\" placeholder=\"Start Date\" value={this.state.startDate} onChange={this.onValueChange}\n                                                                onBlur={this.validateDate}\n                                                                isInvalid={this.state.startDateError} />\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                {this.state.startDateError}\n                                                            </Form.Control.Feedback>\n                                                        </div>\n                                                        <div className=\"end-date-control\">\n                                                            <Form.Control type=\"date\" name=\"endDate\" placeholder=\"End Date\" value={this.state.endDate} onChange={this.onValueChange}\n                                                                onBlur={this.validateDate}\n                                                                isInvalid={this.state.endDateError} />\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                {this.state.endDateError}\n                                                            </Form.Control.Feedback>\n                                                        </div>\n                                                    </div>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group>\n                                                    <Form.Label className=\"required\">Hourly Rate</Form.Label>\n                                                    <Form.Control type=\"number\" name=\"hourlyRate\" placeholder=\"Hourly Rate\" value={this.state.hourlyRate} onChange={this.onValueChange}\n                                                        onBlur={this.validateHourlyRate}\n                                                        isInvalid={this.state.hourlyRateError} />\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {this.state.hourlyRateError}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"generate-buttons\">\n                                        <Row className=\"generate-button-container\">\n                                            <Button className=\"primary-button\" onClick={this.generateInvoice}>\n                                                Generate Invoice\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Save\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Download\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Send\n                                            </Button>\n                                        </Row>\n                                    </div>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Row className=\"data-table-container\">\n                            <Col>\n                                <Datatable columns={this.columns} data={this.dummyData} allowCSV=\"false\" allowSearch=\"false\" />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(InvoiceGeneration);","/* Author: Vishal Sancheti */\n\nimport axios from \"axios\";\n\nexport class timelogServices{\n    // Get all Timelogs\n    async list(){\n        const result = await axios.get(\"/api/timelogs\");\n        return result.data;\n    };\n\n    // Add new Timelog\n    async add(data){\n        data.projectId = data.project;\n        const result = await axios.post(\"/api/timelogs/add\",data);\n        return result.data;\n    };\n\n    // Update Timelog\n    async update(data){\n        data.projectId = data.project;\n        console.log(data);\n        const result = await axios.put(\"/api/timelogs/update/\"+data._id,data);\n        return result.data;\n    };\n\n    // Remove Timelog\n    async remove(data){\n        const result = await axios.delete(\"/api/timelogs/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new timelogServices()","import axios from \"axios\";\n\nexport class projectServices{\n    async list(){\n        const result = await axios.get(\"/api/projects\");\n        return result.data;\n    };\n}\n\nexport default new projectServices()","/* Author: Vishal Sancheti */\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment'\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\n\nimport timelogServices from '../services/timelogServices.js'\nimport projectServices from '../services/projectServices.js'\n\nexport default function Timelogs() {\n    //Init\n    const columns = [\n        { Header: 'Project', accessor: 'project.name' },\n        { Header: 'Client', accessor: 'project.client' },\n        { Header: 'Task', accessor: 'task' },\n        { Header: 'Start At', accessor: row => moment(row.startAt).format(\"DD-MM-YYYY hh:mm:ss\")},\n        { Header: 'End At', accessor: row => row.endAt ? moment(row.endAt).format(\"DD-MM-YYYY hh:mm:ss\"):\"-\"},\n        { Header: 'Action', id: 'action', accessor: 'row',\n            Cell: ({ row }) => (<Button className=\"delete-button\" onClick={() => { deleteTask(row) }}>Delete</Button>)\n        }\n    ];\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        timelogServices.list().then(res => setData(res.data));\n    },[]);\n\n    useEffect(() => {\n        if(data.length){\n            let lastTask = data[0];\n            if(lastTask && !lastTask.endAt){\n                setTask(lastTask);\n                restartTimer(new Date(lastTask.startAt));\n            }\n        }\n    },[data]);\n\n    // Timer properties and actions\n    const [timerState, setTimerState] = useState(0);\n    const [timerStart, setTimerStart] = useState(Date.now());\n    const [timerEnd, setTimerEnd] = useState(Date.now());\n    const [timerString, setTimerString] = useState(\"00 : 00 : 00 : 00\");\n    const [timer, setTimer] = useState(0);\n    useEffect(() => {\n        let centiseconds = (\"0\" + (Math.floor(timer / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timer / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timer / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor(timer / 3600000)).slice(-2);\n        setTimerString(hours + \" : \" + minutes + \" : \" + seconds + \" : \" + centiseconds);\n    }, [timer]);\n    const startTimer = () => {\n        if (timerState === 0) {\n            setTimerStart(Date.now() - timer);\n            setTimerState(\n                setInterval(() => {\n                    setTimer(Date.now() - timerStart)\n                }, 10)\n            );\n        }\n    };\n    const restartTimer = (startAt) => {\n        if (timerState === 0) {\n            setTimerStart(startAt - timer);\n            setTimer(Date.now() - startAt);\n            setTimerState(\n                setInterval(() => {\n                    setTimer( Date.now() - startAt)\n                }, 10)\n            );\n        }\n    };\n    const stopTimer = () => {\n        setTimerEnd(Date.now());\n        clearInterval(timerState);\n        setTimerState(0);\n        setTimer(0);\n    };\n\n    // New Task States\n    const [projects, setProjects] = useState([]);\n    useEffect(() => {\n        projectServices.list().then(res => setProjects(res.data));\n    },[]);\n    const [task, setTask] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\",\n        startAt: \"\",\n        endAt: \"\"\n    });\n    const [taskError, setTaskError] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\"\n    });\n    const [showModal, setShowModal] = useState(false);\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newTask = { ...task, [e.target.name]: e.target.value };\n        setTask(newTask);\n    };\n    const isTaskValid = () => {\n        let valid = true;\n        setTaskError({\n            project: \"\",\n            client: \"\",\n            task: \"\"\n        });\n\n        if (!task.project.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.project = \"Project is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.client.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.client = \"Client is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.task.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.task = \"Task is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = () => setShowModal(true);\n\n    // New Task Actions\n    const startTask = (e) => {\n        e.preventDefault();\n        if (isTaskValid()) {\n            startTimer();\n            task.startAt = Date.now();\n            timelogServices.add(task).then(res => {task._id = res.data._id; task.project = res.data.project});\n            setData(data => [task, ...data]);\n            handleModalClose();\n        }\n    };\n    const stopTask = () => {\n        stopTimer();\n        let newData = [...data];\n        newData[0].endAt = Date.now();\n        timelogServices.update(newData[0]).then(res => alert(res.message));\n        setData(newData);\n        setTask({\n            project: \"\",\n            client: \"\",\n            task: \"\",\n            startAt: \"\",\n            endAt: \"\"\n        });\n    };\n    const deleteTask = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            timelogServices.remove(newData[0]).then(res => alert(res.message));\n            newData.splice(task.index, 1);\n            setData(newData);\n        }\n    };\n\n    return (\n        <div className=\"page-container timelogs-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Time logs\" subtitle=\"\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row className=\"justify-content-center\">\n                        <Col md={6}>\n                            <Card>\n                                <Card.Body className=\"text-center\">\n                                    <Card.Title style={{ fontSize: \"2.5rem\" }}>{timerString}</Card.Title>\n                                    {timer <= 0 &&\n                                        <Button className=\"primary-button btn\" onClick={handleModalShow}>Start</Button>\n                                    }\n                                    {timer > 0 &&\n                                        <>\n                                            <Card.Subtitle className=\"mb-2 text-muted\">Task: {task.task}</Card.Subtitle>\n                                            <Button className=\"delete-button btn\" onClick={stopTask}>Stop</Button>\n                                        </>\n                                    }\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Modal show={showModal} onHide={handleModalClose}>\n                        <Form onSubmit={(e) => startTask(e)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>New Task</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body className=\"show-grid\">\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Client</Form.Label>\n                                                <Form.Control as=\"select\" name=\"client\"\n                                                    onChange={(e) => handleChange(e)}\n                                                    className={taskError.client.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Client</option>\n                                                    <option value=\"Marco Botton\">Marco Botton</option>\n                                                    <option value=\"Giacomo Guilizzoni\">Giacomo Guilizzoni</option>\n                                                    <option value=\"Mariah Guilizzoni\">Mariah Guilizzoni</option>\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.client}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Project</Form.Label>\n                                                <Form.Control as=\"select\" name=\"project\"\n                                                    onChange={(e) => handleChange(e)}\n                                                    className={taskError.project.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Project</option>\n                                                    {projects.filter(project => project.client.includes(task.client)).map(function(project,index){\n                                                        return <option key={index} value={project._id}>{project.name}</option>\n                                                    })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.project}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Task</Form.Label>\n                                                <Form.Control type=\"text\" name=\"task\" placeholder=\"Task Description...\"\n                                                    onChange={(e) => handleChange(e)}\n                                                    className={taskError.task.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{taskError.task}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                    Close\n                                </Button>\n                                <Button className=\"primary-button\" type=\"submit\">\n                                    Start\n                                </Button>\n                            </Modal.Footer>\n                        </Form>\n\n                    </Modal>\n                    <Datatable columns={columns} data={data} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","import {useState, React} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Redirect, useHistory } from 'react-router-dom';\n\nexport default function AddProjects(){\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            invoice: \"\",\n            rate: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.rate.value > 0){\n            newProjectError.rate = \"Rate is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.rate = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            Redirect(\"/projects\");\n        }\n        return valid;\n    };\n\n    return (\n        <div>\n            <PageHeader title=\"New Project\"/>\n            \n            <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-md-10\">\n\n              <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\n                        <p className=\"text-danger\">{projectError.title}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                            <option value=\"\">Select Client</option>\n                            <option value=\"client1\">Client1</option>\n                            <option value=\"client2\">Client2</option>\n                            <option value=\"client3\">Client3</option>\n                            <option value=\"client4\">Client4</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.client}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                                      className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                        <p className=\"text-danger\">{projectError.description}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                        <p className=\"text-danger\">{projectError.rate}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                            <option value=\"\">Select Invoice Duration</option>\n                            <option value=\"Daily\">Daily</option>\n                            <option value=\"Weekly\">Weekly</option>\n                            <option value=\"Monthly\">Monthly</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.invoice}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                            <option value=\"\">Select Project Status</option>\n                            <option value=\"In Progress\">In Progress</option>\n                            <option value=\"Pending\">Pending</option>\n                            <option value=\"Completed\">Completed</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.status}</p>\n                    </div>\n                </div>\n                    \n                <div className=\"form-group row\">\n                    <div className=\"col-md-5\"></div>\n                    <div className=\"col-md-2\">\n                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n              </center></form>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport AddProject from './AddProject';\nimport Datatable from \"../components/Datatable\";\nimport '../styles/style.scss';\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport \"../styles/Projects.scss\";\n\nexport default function Projects() {\n\n    const columns = [\n        { Header: 'Project Title', accessor: 'title' },\n        { Header: 'Description', accessor: 'description' },\n        { Header: 'Client Name', accessor: 'client' },\n        { Header: 'Status', accessor: 'status' },\n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (<div className=\"data-table-button\"><a title=\"Edit Project\" onClick={() => editProject(row.id)} className=\"secondary-button\">Edit</a><a title=\"Delete Project\" onClick={() => { deleteTask(row) }} className=\"delete-button\">Delete</a></div>)\n        }\n    ];\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        setData([\n            {\n                title: \"Email Download\",\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\n                client: \"Christ Fernandiz\",\n                status: \"In Progress\"\n            },\n            {\n                title: \"Navigation\",\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\n                client: \"Shaun Bishop\",\n                status: \"Pending\"\n            },\n            {\n                title: \"Upgrade Database\",\n                description: \"Providing this service will migrate data to AWS.\",\n                client: \"Joseph Robinson\",\n                status: \"Completed\"\n            },\n            {\n                title: \"Email Download\",\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\n                client: \"Christ Fernandiz\",\n                status: \"In Progress\"\n            },\n            {\n                title: \"Navigation\",\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\n                client: \"Shaun Bishop\",\n                status: \"Pending\"\n            },\n            {\n                title: \"Upgrade Database\",\n                description: \"Providing this service will migrate data to AWS.\",\n                client: \"Joseph Robinson\",\n                status: \"Completed\"\n            },\n            {\n                title: \"Email Download\",\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\n                client: \"Christ Fernandiz\",\n                status: \"In Progress\"\n            },\n            {\n                title: \"Navigation\",\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\n                client: \"Shaun Bishop\",\n                status: \"Pending\"\n            },\n            {\n                title: \"Upgrade Database\",\n                description: \"Providing this service will migrate data to AWS.\",\n                client: \"Joseph Robinson\",\n                status: \"Completed\"\n            },\n            {\n                title: \"Email Download\",\n                description: \"Providing this functionality will enable the access of email in PDF format.\",\n                client: \"Christ Fernandiz\",\n                status: \"In Progress\"\n            },\n            {\n                title: \"Navigation\",\n                description: \"Providing this functionality will navigate the project through navigation bar.\",\n                client: \"Shaun Bishop\",\n                status: \"Pending\"\n            },\n            {\n                title: \"Upgrade Database\",\n                description: \"Providing this service will migrate data to AWS.\",\n                client: \"Joseph Robinson\",\n                status: \"Completed\"\n            },\n        ])\n    }, []);\n\n    const [project, setProject] = useState({\n        title: \"\",\n        description: \"\",\n        client: \"\",\n        status: \"\"\n    });\n\n\n    const deleteTask = (project) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            newData.splice(project.index, 1);\n            console.log(newData);\n            setData(newData);\n        }\n    };\n\n    const [checkForm, setCheckForm] = useState(true);\n\n    const validate = () => {\n        setCheckForm(false);\n    }\n\n    const history = useHistory();\n\n    async function editProject(id) {\n        let url = \"/projects/edit/\" + id;\n        history.push(url);\n    }\n\n    return (\n        <div className=\"page-container projects-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div className=\"page-content\">\n\n                <Row className=\"button-container\">\n                    <Col>\n                        <a href=\"/projects/add\" title=\"Add Project\" className=\"primary-button\">Add Project</a>\n                    </Col>\n                </Row>\n                <Row className=\"data-table-container\">\n                    <Col>\n                        <Datatable columns={columns} data={data} />\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </div>\n    )\n}","import {useState, React} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\n\nconst EditProjects = (prop) => {\n\n    const param = useParams();\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            invoice: \"\",\n            rate: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.rate.value > 0){\n            newProjectError.rate = \"Rate is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.rate = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            Redirect(\"/projects\");\n        }\n        return valid;\n    };\n\n    return (\n        <div>\n            <PageHeader title=\"Edit Project\"/>\n            \n            <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-md-10\">\n\n              <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\n                        <p className=\"text-danger\">{projectError.title}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                      className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                            <option value=\"\">Select Client</option>\n                            <option value=\"client1\">Client1</option>\n                            <option value=\"client2\">Client2</option>\n                            <option value=\"client3\">Client3</option>\n                            <option value=\"client4\">Client4</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.client}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                                      className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                        <p className=\"text-danger\">{projectError.description}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                    <div className=\"col-md-10\">\n                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                        <p className=\"text-danger\">{projectError.rate}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                            <option value=\"\">Select Invoice Duration</option>\n                            <option value=\"Daily\">Daily</option>\n                            <option value=\"Weekly\">Weekly</option>\n                            <option value=\"Monthly\">Monthly</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.invoice}</p>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                    <div className=\"col-md-10\">\n                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                            <option value=\"\">Select Project Status</option>\n                            <option value=\"In Progress\">In Progress</option>\n                            <option value=\"Pending\">Pending</option>\n                            <option value=\"Completed\">Completed</option>\n                        </select>\n                        <p className=\"text-danger\">{projectError.status}</p>\n                    </div>\n                </div>\n                    \n                <div className=\"form-group row\">\n                    <div className=\"col-md-5\"></div>\n                    <div className=\"col-md-2\">\n                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n              </center></form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditProjects;","import React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {curl_init} from 'react';\nimport {curl_getinfo} from 'react';\nimport {CURLINFO_HTTP_CODE} from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nexport class AddClient extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            clientName: \"\",\n            clientNameError: \"\",\n            organizationName: \"\",\n            organizationNameError: \"\",\n            contactNo: \"\",\n            contactNoError: \"\",\n            websiteName: \"\",\n            websiteNameError: \"\",\n            emailId: \"\",\n            emailIdError: \"\",\n            street: \"\",\n            streetError: \"\",\n            businessDescription: \"\",\n            postalCode: \"\",\n            PostalCodeError: \"\",\n            meetingPlatform: \"\",\n            meetingPlatformError: \"\",\n            country: \"\",\n            region: \"\"\n        }       \n    }\n\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    selectCountry (val) {\n      this.setState({ country: val });\n    }\n  \n    selectRegion (val) {\n      this.setState({ region: val });\n    }\n\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.client) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateOrganization = (event) => {\n      let isValid = true;\n      if (!this.state.organizationName) {\n          this.setState({ organizationNameError: \"Organization Name is required\" })\n          isValid = false;\n      }\n      return isValid;\n    }\n\n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if(result===false){\n          this.setState({\n            isValid:false,\n            contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n          })\n        }\n        return isValid;\n    }\n\n    validateWebsiteName = (event) => {\n      let isValid = true;\n      const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n      const result = pattern.test(this.state.websiteName);\n      if(result===false){\n        this.setState({\n          isValid:false,\n          websiteNameError: \"Provided website is invalid\"\n        })\n      }\n      return isValid;\n    }\n\n    validateEmailId = (event) => {\n      let isValid = true;\n      if (!this.state.emailId) {\n          this.setState({ emailIdError: \"Email Id is required\" })\n          isValid = false;\n      }\n      const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n      const result = pattern.test(this.state.emailId);\n      if(result===false){\n        this.setState({\n          isValid:false,\n          emailIdError: \"Provided email Id is invalid\"    \n        })\n      } \n      return isValid;\n    }\n\n    validateLinkedInProfile = (event) => \n    {\n        let isValid = true;\n        const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n        const result = pattern.test(this.state.linkedInProfile);\n        if(result===false){\n          this.setState({\n            isValid:false,\n            linkedInProfileError: \"LinkedIn Profile is not valid\"\n          })\n        }\n        /*const profileurl = this.state.linkedInProfile;\n        const fp = curl_init(profileurl);\n        const response_code = curl_getinfo(fp, CURLINFO_HTTP_CODE);\n  \n        if(response_code===200){\n          this.setState({\n            isValid:false,\n            linkedInProfileError: \"Provided Linkedin profile is invalid\"    \n          })\n        }*/\n    }\n\n    validateStreet = (event) => {\n      let isValid = true;\n      const pattern = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/g;\n      const result = pattern.test(this.state.street);\n      if(result===false){\n        this.setState({\n          isValid:false,\n          streetError: \"Street should not contain special characters\"\n        })\n      }\n      return isValid;\n    }\n\n    validatePostalcode = (event) => {\n      let isValid = true;\n      const pattern = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/g;\n      const result = pattern.test(this.state.postalCode);\n      if(result===false){\n        this.setState({\n          isValid:false,\n          PostalCodeError: \"Postal code should not contain special characters\"\n        })\n      }\n      return isValid;\n    }\n\n    validateMeetingPlatform = (event) => {\n      let isValid = true;\n      if (!this.state.meetingPlatform) {\n          this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n          isValid = false;\n      }\n      return isValid;\n    }\n\n    validateForm = (event) => {\n      let isValid = true\n      if (!this.validateClient()) {\n          isValid = false;\n      }\n      if (!this.validateOrganization()) {\n          isValid = false;\n      }\n      if (!this.validateContactNo()) {\n          isValid = false;\n      }\n      if (!this.validateWebsiteName()) {\n          isValid = false;\n      }\n      if (!this.validateEmailId()) {\n        isValid = false;\n      }\n      if (!this.validateLinkedInProfile()) {\n        isValid = false;\n      }\n      if (!this.validateStreet()) {\n        isValid = false;\n      }\n      if (!this.validatePostalcode()) {\n        isValid = false;\n      }\n      if (!this.validateMeetingPlatform()) {\n        isValid = false;\n      }\n      return isValid;\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n            alert(\"Details Successfully Saved!!\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                   <PageHeader title=\"New Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.clientName} onChange={this.onValueChange}\n                                                    onBlur={this.validateClientName}\n                                                    isInvalid = {this.state.clientNameError}/>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.organizationName} onChange={this.onValueChange}\n                                                    onBlur={this.validateOrganization}\n                                                    isInvalid = {this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>        \n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.contactNo} onChange={this.onValueChange}\n                                                    onBlur={this.validateContactNo}\n                                                    isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.websiteName} onChange={this.onValueChange}\n                                                    onBlur={this.validateWebsiteName}\n                                                    isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.emailId} onChange={this.onValueChange}\n                                                    onBlur={this.validateEmailId}\n                                                    isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"LinkedInProfile\" placeholder=\"Enter Clienet Name\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                    onBlur={this.validateLinkedInProfile}\n                                                    isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.street} onChange={this.onValueChange}\n                                                    onBlur={this.validateStreet}\n                                                    isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.businessDescription} onChange={this.onValueChange}\n                                                    onBlur={this.validatebusinessDescription}\n                                                     />\n                                               \n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.postalCode} onChange={this.onValueChange}\n                                                    onBlur={this.validatePostalcode}\n                                                    isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.meetingPlatform} onChange={this.onValueChange}\n                                                    onBlur={this.validateMeetingPlatform}\n                                                    isInvalid={this.state.meetingPlatformError}>\n                                                      <option>Select Project</option>\n                                                    <option value=\"1\">Google Meet</option>\n                                                    <option value=\"2\">Skype</option>\n                                                    <option value=\"3\">Zoom</option>\n                                                    <option value=\"4\">In person</option>\n                                                  </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n                                              \n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Country </Form.Label>\n                                                <CountryDropdown as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country} \n                                                                 onChange={(name, value) => this.selectCountry(name, value)}\n                                                />\n                                            </Form.Group>\n                                        \n                                            <Form.Group>\n                                                <Form.Label>Region </Form.Label>\n                                                <RegionDropdown\n                                                       country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                       as=\"select\" name=\"region\" value={this.state.region} onChange={(name, value) => this.selectRegion(name,value)}>\n                                                </RegionDropdown>                            \n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    \n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"primary-button\" onClick={this.onSubmit}>\n                                            Submit\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AddClient);","import React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport \"../styles/Clients.scss\";\nimport './AddClient'\nimport { Component } from \"react\";\n\nexport class Clients extends Component {\n  //constructor for props\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.handleNewClient = this.handleNewClient.bind(this);\n\n    this.columns = [\n      { Header: 'Client Name', accessor: 'ClientName' },\n      { Header: 'Organization', accessor: 'organization' },\n      { Header: 'Contact No', accessor: 'ContactNo' },\n      { Header: 'Email', accessor: 'Emailid' },\n      {\n        Header: 'Action', accessor: 'row',\n        Cell: ({ row }) => (\n          <div className=\"generate-button-container\">\n            <Button className=\"secondary-button\" align=\"right\">View</Button>\n            <Button className=\"secondary-button\" align=\"right\">Edit</Button>\n            <Button className=\"delete-button\" align=\"right\">Delete</Button>\n          </div>\n        )\n      }];\n    this.setData();\n  }\n\n  setData = () => {\n    this.data = [{\n      ClientName: \"Jill Dupre\",\n      organization: \"Elegant Microweb\",\n      ContactNo: \"(+1)902-412-7654\",\n      Emailid: \"JillDupre@gmail.com\"\n    },\n    {\n      ClientName: \"Herry Chopra\",\n      organization: \"Meditab\",\n      ContactNo: \"(+1) 777-987-2345\",\n      Emailid: \"hhs12@yahoo.co.in\"\n    },\n    {\n      ClientName: \"Nayan Patel\",\n      organization: \"IBM\",\n      ContactNo: \"(+91) 9601739976\",\n      Emailid: \"nayan007@gmail.com\"\n    }];\n  }\n  handleNewClient = (e) => {\n    e.preventDefault();\n    this.props.history.push({ pathname: '/Addclient' });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-container clients-container\">\n          <div className=\"page-header-container\">\n            <PageHeader title=\"Clients\" subtitle=\"\" />\n          </div>\n          <div className=\"page-content-container\">\n            <div className=\"page-content\">\n              <Row className=\"button-container\">\n                <Col>\n                  <Button className=\"primary-button\" type=\"button\" align=\"right\" onClick={this.handleNewClient} >Add New</Button>\n                </Col>\n              </Row>\n              <Row className=\"data-table-container\">\n                <Col>\n                  <Datatable columns={this.columns} data={this.data} />\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Clients);","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Datatable from '../components/Datatable';\nimport emailjs from 'emailjs-com';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\"\nconst Testimonials = () => {\n\n    const columns = [\n        { Header: '#', accessor: 'no' },\n        { Header: 'Project', accessor: 'project' },\n        { Header: 'Status', accessor: 'status' },\n        { Header: 'Requested on', accessor: 'requestedOn' },\n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <button className=\"secondary-button\" onClick={() => setLgShow(true)}>Re-Request</button>\n                        {/* <a href=\"#\">Re-Request</a> */}\n                    </div>\n\n                    <div className=\"col-md-3\">\n                        <button className=\"delete-button\" onClick={deleteTask} >Delete</button>\n                        {/* <a href=\"#\">Delete</a> */}\n                    </div>\n                </div>\n            )\n        }\n    ];\n\n\n    function sendEmail(e) {\n        e.preventDefault();\n\n        // console.log(e.target.data);\n        var mailParams = {\n            //Mail Sender Details\n            freelancerName: 'Freelancer_Deep',\n            freelancerMail: 'deepatel1607@gmail.com',\n\n            //Mail Reciver Details\n            clientName: 'Client_Deep',\n            clientMail: 'dee16798ppatel@gmail.com',\n\n            //Attachment Messages\n            message: 'Success!!'\n        };\n\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n            .then(function (response) {\n                alert(\"Email Sent\");\n                console.log('SUCCESS!', response.status, response.text);\n\n            }, function (error) {\n                alert(\"Error: \" + error);\n                console.log('FAILED...', error);\n            });\n    }\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        setData([\n            {\n                no: \"1\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"2\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"3\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"4\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"5\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"6\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"7\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"8\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"9\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"10\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"11\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"12\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            },\n            {\n                no: \"13\",\n                project: \"S-A-M\",\n                client: \"Deep Patel\",\n                requestedOn: \"20-06-2021\",\n                status: \"Pending\"\n            }\n        ])\n    }, []);\n\n    const [testimonial, setTestimonial] = useState({\n        no: \"\",\n        project: \"\",\n        client: \"\",\n        requestedOn: \"\",\n        status: \"\"\n    });\n\n    const deleteTask = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            newData.splice(testimonial.index, 1);\n            console.log(newData);\n            setData(newData);\n        }\n    };\n\n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <div className=\"page-container add-testimonial-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonials\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col xs={12}>\n                            <div className=\"col-md-2 button-container\">\n                                <div className=\"row my-add-btn\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-7\">\n                                        <div className=\"add-testimonial-container\">\n                                            <div className=\"generate-button-container\">\n                                                <button className=\"primary-button\" type=\"button\" align=\"right\" onClick={() => setLgShow(true)}> Request</button>\n                                            </div>\n                                        </div>\n                                        <Modal\n                                            size=\"lg\"\n                                            show={lgShow}\n                                            onHide={() => setLgShow(false)}\n                                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                                        >\n                                            <Modal.Header closeButton>\n                                                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                                                    Request Testimonial\n                                                </Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                <Form id=\"contact-form\">\n\n                                                    <input type=\"hidden\" name=\"freelancerName\" id=\"freelancerName\" value=\"Freelancer_Deep\" />\n                                                    <input type=\"hidden\" name=\"freelancerMail\" id=\"freelancerMail\" value=\"deepatel1607@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"clientName\" id=\"clientName\" value=\"Client_Deep\" />\n                                                    <input type=\"hidden\" name=\"clientMail\" id=\"clientMail\" value=\"dee16798ppatel@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"message\" id=\"message\" value=\"From hidden\" />\n\n                                                    <Form.Group>\n                                                        <Form.Label>Project</Form.Label>\n                                                        <Form.Control as=\"select\">\n                                                            <option>Project 1</option>\n                                                            <option>Project 2</option>\n                                                            <option>Project 3</option>\n                                                            <option>Project 4</option>\n                                                            <option>Project 5</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label>Client</Form.Label>\n                                                        <Form.Control as=\"select\">\n                                                            <option>Client 1</option>\n                                                            <option>Client 2</option>\n                                                            <option>Client 3</option>\n                                                            <option>Clientv 4</option>\n                                                            <option>Clientv 5</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label>Request Message</Form.Label>\n                                                        <Form.Control as=\"textarea\" name=\"message\" rows={3} id=\"message\" />\n                                                    </Form.Group>\n\n                                                    <Button variant=\"primary\" type=\"submit\" id=\"button\" value=\"Send\" onClick={sendEmail}>\n                                                        Send\n                                                    </Button>\n                                                </Form>\n                                            </Modal.Body>\n                                        </Modal>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col xs={12}>\n                            <Datatable columns={columns} data={data} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Testimonials\n","import React,{Component} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport {Button,Col,Row} from \"react-bootstrap\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/DashboardNavbar.scss\";\nimport \"../styles/InvoiceManagement.scss\"\nexport class InvoiceManagement extends Component{\n    \n    constructor(props) {\n        super(props)\n        this.state={\n        checkbox : 'false',\n        columns : [\n            { Header: 'Invoice Number', accessor: 'invoicename'},\n            { Header: 'Generated Date', accessor: 'generateddate'},\n            { Header: 'Due Date', accessor: 'duedate'},\n            { Header: 'Client Name', accessor: 'clientname'},\n            { Header: 'Project Name', accessor: 'projectname'},\n            { Header: 'Payment Status', accessor: 'paymentstatus'},\n            { Header: 'Action', accessor: 'button1',\n                Cell: ({button1}) => (<div><Button  className=\"secondary-button\">Edit</Button><Button  className=\"delete-button\">Delete</Button></div>)},\n        ],\n\n       data:[{    \n        invoicename: \"1EDJJHE\",\n        generateddate: \"03-02-2021\",\n        duedate: \"03-03-2021\",\n        clientname:\"Bob Marker\",\n        projectname:\"Project Management\",\n        paymentstatus:\"Unpaid\"\n      },\n      {\n        invoicename: \"2XFDSFW\",\n        generateddate: \"03-02-2021\",\n        duedate: \"03-03-2021\",\n        clientname:\"Mark Velly\",\n        projectname:\"Tic-Toe\",\n        paymentstatus:\"Paid\"\n      },\n      {\n        invoicename: \"3ECERCC\",\n        generateddate: \"03-02-2021\",\n        duedate: \"03-03-2021\",\n        clientname:\"Lelly Vince\",\n        projectname:\"Invoice Generator\",\n        paymentstatus:\"Unpaid\"\n      },\n      {\n        invoicename: \"4ERDFTH\",\n        generateddate: \"03-02-2021\",\n        duedate: \"03-03-2021\",\n        clientname:\"Chrissy MAcdonalds\",\n        projectname:\"Client Management\",\n        paymentstatus:\"Unpaid\"\n      }]\n        }\n    }\n    handleClick=(e)=>{\n        this.setState({checkbox:'true'})\n    }\n\nrender() {\n    return (\n\n    <div className=\"page-container-container\">\n        <div className=\"page-header-container\">\n           <PageHeader title=\"Invoice Management\" subtitle=\"\" />\n        </div>\n        <div className=\"page-content-container\">\n            <div className=\"page-content\"></div>\n            <Row>\n                <Col>\n                <input  type=\"text\" placeholder=\"Filter\" name=\"textforfiletr\" />\n                </Col>\n                \n            </Row>\n            <Datatable columns={this.state.columns} data={this.state.data} allowCSV=\"false\" allowSearch=\"false\"/>\n        </div>\n    </div>\n)\n        }\n}\nexport default withRouter(InvoiceManagement)","import axios from \"axios\"\n\nexport class TodoListService {\n    async getAllTasks(date) {\n        const result = await axios.post(\"/api/todoLists/getList\", { \"currentDate\": date });\n        return result;\n    }\n\n    async markTaskAsDone(id) {\n        const result = await axios.put(\"/api/todoLists/markAsDone\", { \"id\": id });\n        return result;\n    }\n\n    async deleteTask(id) {\n        const result = await axios.delete(\"/api/todoLists/deleteItem/\" + id);\n        return result;\n    }\n\n    async saveTask(saveData) {\n        const result = await axios.post(\"/api/todoLists/saveItem\", saveData);\n        return result;\n    }\n}\n\nexport default new TodoListService()","/**\n * Author: Bansi Mehta.\n * Created On: 2021-06-07\n * Todo list component.\n */\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { Container, Col, Row, Button } from 'react-bootstrap'\nimport { Card } from 'react-bootstrap';\nimport moment from \"moment\";\nimport axios from 'axios'\nimport \"../styles/TodoList.scss\";\nimport PageHeader from \"../components/PageHeader\";\nimport todoListService from \"../services/TodoListService\";\nexport class TodoList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        const currentDate = moment().format('YYYY-MM-DD')\n        this.state = {\n            completeTasks: [],\n            incompleteTasks: [],\n            date: currentDate,\n            newTask: ''\n        }\n\n        this.item = {\n            title: '',\n            status: false,\n            date: currentDate\n        }\n    }\n\n    componentDidMount() {\n        this.getAllData(this.state.date)\n    }\n\n    /**\n     * On value change of a control, set it in state.\n     * @param {*} event \n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * Get all the tasks based on date.\n     * Date format: \"YYYY-MM-DD\".\n     * Divide the tasks received into groups: complete and incomplete to display.\n     * @param {*} date \n     */\n    getAllData(date) {\n        todoListService.getAllTasks(date).then(response => {\n            if (response.status === 200) {\n                if (response.data && response.data.result && response.data.result.length) {\n                    let completeTask = []\n                    let incompleteTask = []\n                    response.data.result.forEach(row => {\n                        if (row && row.status == true) {\n                            completeTask.push(row)\n                        } else {\n                            incompleteTask.push(row)\n                        }\n                    })\n                    this.setState({ completeTasks: completeTask })\n                    this.setState({ incompleteTasks: incompleteTask })\n                } else {\n                    this.setState({ completeTasks: [] })\n                    this.setState({ incompleteTasks: [] })\n                }\n            }\n        })\n    }\n\n    /**\n     * Mark the task item as complete based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemComplete(rowData) {\n        todoListService.markTaskAsDone(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date)\n            }\n        })\n    }\n\n    /**\n     * Delete the task based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemDelete(rowData) {\n        todoListService.deleteTask(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date)\n            }\n        })\n    }\n\n    /**\n     * Add new task.\n     * Refresh the list if successful.\n     * @param {*} event \n     */\n    saveItem = (event) => {\n        event.preventDefault()\n        let saveData = {\n            title: this.state.newTask,\n            date: this.state.date\n        }\n        todoListService.saveTask(saveData).then(response => {\n            if (response.status == 200) {\n                this.setState({ newTask: '' })\n                this.getAllData(this.state.date)\n            }\n        })\n    }\n\n    /**\n     * Date navigation: Get previous date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getPreviousDate = (event) => {\n        let previousDate = moment(this.state.date, 'YYYY-MM-DD').subtract(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: previousDate })\n        this.getAllData(previousDate)\n    }\n\n    /**\n     * Date navigaiton: Get next date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getNextDate = (event) => {\n        let nextDate = moment(this.state.date, 'YYYY-MM-DD').add(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: nextDate })\n        this.getAllData(nextDate)\n    }\n\n    render() {\n        return (\n            <div className=\"page-container to-do-list-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Todo List\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Container className=\"to-do-list-content\">\n                            <Row className=\"date-row\">\n                                <Col className=\"date-control\">\n                                    <span className=\"navigate-date\" onClick={this.getPreviousDate}>\n                                        <i className=\"fas fa-chevron-left\"></i>\n                                    </span>\n                                    <span>\n                                        {this.state.date}\n                                    </span>\n                                    <span className=\"navigate-date\" onClick={this.getNextDate}>\n                                        <i className=\"fas fa-chevron-right\"></i>\n                                    </span>\n                                </Col>\n                            </Row>\n                            <Row className=\"add-row\">\n                                <div className=\"add-text\">\n                                    <input type=\"text\" palceholder=\"Add task\" name=\"newTask\" value={this.state.newTask} onChange={this.onValueChange} className=\"input-control\" />\n                                </div>\n                                <div className=\"add-button\">\n                                    <Button className=\"primary-button add-button\" onClick={this.saveItem}>Add</Button>\n                                </div>\n                            </Row>\n                            <Row className=\"to-do-list-items\">\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.incompleteTasks.map(row => (\n                                            <Card className=\"card-content-incomplete\">\n                                                <Row className=\"card-item\">\n                                                    <Col xs={3} md={2} className=\"card-item-content\">\n                                                        <input type=\"checkbox\" checked={row.status} onClick={() => this.taskItemComplete(row)}></input>\n                                                    </Col>\n                                                    <Col xs={3} md={7} className=\"card-item-content\">\n                                                        <Card.Body>\n                                                            <Card.Title>{row.title}</Card.Title>\n                                                        </Card.Body>\n                                                    </Col>\n                                                    <Col xs={3} md={3} className=\"card-item-content\">\n                                                        <Button className=\"primary-button\" onClick={() => this.taskItemDelete(row)}>Delete</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.completeTasks.map(row => (\n                                            <Card className=\"card-content-complete\">\n                                                <Card.Body>\n                                                    <Card.Title className=\"card-item-completed\">{row.title}</Card.Title>\n                                                </Card.Body>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default withRouter(TodoList);","import React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nexport default function Calendar(){\n    \n    const events = [{ title: \"today's event\", date: new Date() }];\n\n    const handleDateClick = (arg) => {\n        var dateevent = prompt(\"Enter an event for date: \"+arg.dateStr);\n    }\n\n    return (\n        <div>\n            <PageHeader title=\"Calendar\"/>\n            <FullCalendar\n                defaultView=\"dayGridMonth\"\n                plugins={[dayGridPlugin, interactionPlugin]}\n                events={events}\n                dateClick={handleDateClick}\n            />\n        </div>\n    )\n}","/* Author: Team */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AppLayout from \"./layouts/AppLayout\";\nimport DashboardLayout from \"./layouts/DashboardLayout\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport InvoiceGeneration from \"./pages/InvoiceGeneration\";\nimport Timelogs from \"./pages/Timelogs\";\nimport Projects from \"./pages/Projects\";\nimport AddProject from \"./pages/AddProject\";\nimport EditProject from \"./pages/EditProject\";\nimport Clients from \"./pages/Clients\";\nimport AddClient from \"./pages/AddClient\";\nimport Testimonials from \"./pages/Testimonials\";\nimport InvoiceManagement from \"./pages/InvoiceManagement\"\nimport TodoList from \"./pages/TodoList\"\nimport Calendar from \"./pages/Calendar\";\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <AppLayout>\n                        <Home />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/login\">\n                    <AppLayout>\n                        <Login />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/register\">\n                    <AppLayout>\n                        <Register />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/dashboard\">\n                    <DashboardLayout>\n                        <Dashboard />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/projects\">\n                    <DashboardLayout>\n                        <Projects />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/add\">\n                    <DashboardLayout>\n                        <AddProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/edit/:id\">\n                    <DashboardLayout>\n                        <EditProject />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/timelogs\">\n                    <DashboardLayout>\n                        <Timelogs />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/invoice-generation\">\n                    <DashboardLayout>\n                        <InvoiceGeneration />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/clients\">\n                    <DashboardLayout>\n                        <Clients />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/AddClient\">\n                    <DashboardLayout>\n                        <AddClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/testimonials\">\n                    <DashboardLayout>\n                        <Testimonials />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/invoicemanagement\">\n                    <DashboardLayout>\n                        <InvoiceManagement />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/todolist\">\n                    <DashboardLayout>\n                        <TodoList />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/calendar\">\n                    <DashboardLayout>\n                        <Calendar />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/\">\n                    <div>404 Page not found.</div>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/bootstrap_custom.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/style.scss';\nimport './styles/button_style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}